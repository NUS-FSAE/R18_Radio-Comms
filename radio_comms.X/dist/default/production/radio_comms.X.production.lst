

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Jan 11 19:43:47 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F66K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 1.42
    34                           ; Generated 13/04/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F66K80 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	nvCOMRAM
    69  000035                     __pnvCOMRAM:
    70                           	opt stack 0
    71  000035                     _TMR1_InterruptHandler:
    72                           	opt stack 0
    73  000035                     	ds	2
    74  000037                     _timer1ReloadVal:
    75                           	opt stack 0
    76  000037                     	ds	2
    77  0000                     _BRGCON3	set	3653
    78  0000                     _BRGCON2	set	3652
    79  0000                     _BRGCON1	set	3651
    80  0000                     _RXF5SIDL	set	3829
    81  0000                     _RXF5SIDH	set	3828
    82  0000                     _RXF5EIDL	set	3831
    83  0000                     _RXF5EIDH	set	3830
    84  0000                     _RXF4SIDL	set	3825
    85  0000                     _RXF4SIDH	set	3824
    86  0000                     _RXF4EIDL	set	3827
    87  0000                     _RXF4EIDH	set	3826
    88  0000                     _RXF3SIDL	set	3821
    89  0000                     _RXF3SIDH	set	3820
    90  0000                     _RXF3EIDL	set	3823
    91  0000                     _RXF3EIDH	set	3822
    92  0000                     _RXF2SIDL	set	3817
    93  0000                     _RXF2SIDH	set	3816
    94  0000                     _RXF2EIDL	set	3819
    95  0000                     _RXF2EIDH	set	3818
    96  0000                     _RXF1SIDL	set	3813
    97  0000                     _RXF1SIDH	set	3812
    98  0000                     _RXF1EIDL	set	3815
    99  0000                     _RXF1EIDH	set	3814
   100  0000                     _RXF0SIDL	set	3809
   101  0000                     _RXF0SIDH	set	3808
   102  0000                     _RXF0EIDL	set	3811
   103  0000                     _RXF0EIDH	set	3810
   104  0000                     _RXM1SIDL	set	3837
   105  0000                     _RXM1SIDH	set	3836
   106  0000                     _RXM1EIDL	set	3839
   107  0000                     _RXM1EIDH	set	3838
   108  0000                     _RXM0SIDL	set	3833
   109  0000                     _RXM0SIDH	set	3832
   110  0000                     _RXM0EIDL	set	3835
   111  0000                     _RXM0EIDH	set	3834
   112  0000                     _RXB1D7	set	3901
   113  0000                     _RXB1D6	set	3900
   114  0000                     _RXB1D5	set	3899
   115  0000                     _RXB1D4	set	3898
   116  0000                     _RXB1D3	set	3897
   117  0000                     _RXB1D2	set	3896
   118  0000                     _RXB1D1	set	3895
   119  0000                     _RXB1D0	set	3894
   120  0000                     _RXB1DLC	set	3893
   121  0000                     _RXB1SIDH	set	3889
   122  0000                     _RXB1EIDL	set	3892
   123  0000                     _RXB1EIDH	set	3891
   124  0000                     _RXB1SIDL	set	3890
   125  0000                     _RXB1CONbits	set	3888
   126  0000                     _TXB2D7	set	3853
   127  0000                     _TXB2D6	set	3852
   128  0000                     _TXB2D5	set	3851
   129  0000                     _TXB2D4	set	3850
   130  0000                     _TXB2D3	set	3849
   131  0000                     _TXB2D2	set	3848
   132  0000                     _TXB2D1	set	3847
   133  0000                     _TXB2D0	set	3846
   134  0000                     _TXB2DLC	set	3845
   135  0000                     _TXB2SIDL	set	3842
   136  0000                     _TXB2SIDH	set	3841
   137  0000                     _TXB2EIDL	set	3844
   138  0000                     _TXB2EIDH	set	3843
   139  0000                     _TXB2CONbits	set	3840
   140  0000                     _TXB1D7	set	3869
   141  0000                     _TXB1D6	set	3868
   142  0000                     _TXB1D5	set	3867
   143  0000                     _TXB1D4	set	3866
   144  0000                     _TXB1D3	set	3865
   145  0000                     _TXB1D2	set	3864
   146  0000                     _TXB1D1	set	3863
   147  0000                     _TXB1D0	set	3862
   148  0000                     _TXB1DLC	set	3861
   149  0000                     _TXB1SIDL	set	3858
   150  0000                     _TXB1SIDH	set	3857
   151  0000                     _TXB1EIDL	set	3860
   152  0000                     _TXB1EIDH	set	3859
   153  0000                     _TXB1CONbits	set	3856
   154  0000                     _TXB0D7	set	3885
   155  0000                     _TXB0D6	set	3884
   156  0000                     _TXB0D5	set	3883
   157  0000                     _TXB0D4	set	3882
   158  0000                     _TXB0D3	set	3881
   159  0000                     _TXB0D2	set	3880
   160  0000                     _TXB0D1	set	3879
   161  0000                     _TXB0D0	set	3878
   162  0000                     _TXB0DLC	set	3877
   163  0000                     _TXB0SIDL	set	3874
   164  0000                     _TXB0SIDH	set	3873
   165  0000                     _TXB0EIDL	set	3876
   166  0000                     _TXB0EIDH	set	3875
   167  0000                     _TXB0CONbits	set	3872
   168  0000                     _WPUB	set	3931
   169  0000                     _ANCON1	set	3932
   170  0000                     _ANCON0	set	3933
   171  0000                     _LATDbits	set	3980
   172  0000                     _CIOCONbits	set	3952
   173  0000                     _INTCONbits	set	4082
   174  0000                     _RCONbits	set	4048
   175  0000                     _T1GCONbits	set	4010
   176  0000                     _T1CONbits	set	4045
   177  0000                     _PIE1bits	set	3997
   178  0000                     _TMR1L	set	4046
   179  0000                     _TMR1H	set	4047
   180  0000                     _T1GCON	set	4010
   181  0000                     _T1CON	set	4045
   182  0000                     _TXREG1	set	4013
   183  0000                     _RCREG1	set	4014
   184  0000                     _RCSTA1bits	set	4011
   185  0000                     _PIR1bits	set	3998
   186  0000                     _SPBRGH1	set	3965
   187  0000                     _SPBRG1	set	4015
   188  0000                     _TXSTA1	set	4012
   189  0000                     _RCSTA1	set	4011
   190  0000                     _BAUDCON1	set	4007
   191  0000                     _COMSTATbits	set	3953
   192  0000                     _RXB0D7	set	3949
   193  0000                     _RXB0D6	set	3948
   194  0000                     _RXB0D5	set	3947
   195  0000                     _RXB0D4	set	3946
   196  0000                     _RXB0D3	set	3945
   197  0000                     _RXB0D2	set	3944
   198  0000                     _RXB0D1	set	3943
   199  0000                     _RXB0D0	set	3942
   200  0000                     _RXB0DLC	set	3941
   201  0000                     _RXB0SIDH	set	3937
   202  0000                     _RXB0EIDL	set	3940
   203  0000                     _RXB0EIDH	set	3939
   204  0000                     _RXB0SIDL	set	3938
   205  0000                     _RXB0CONbits	set	3936
   206  0000                     _PIE5bits	set	3958
   207  0000                     _PIR5bits	set	3959
   208  0000                     _ECANCON	set	3954
   209  0000                     _CANSTAT	set	3950
   210  0000                     _CANCON	set	3951
   211  0000                     _REFOCON	set	3994
   212  0000                     _OSCTUNE	set	3995
   213  0000                     _OSCCON2	set	4050
   214  0000                     _OSCCON	set	4051
   215  0000                     _TRISD	set	3989
   216  0000                     _TRISC	set	3988
   217  0000                     _TRISB	set	3987
   218  0000                     _TRISG	set	3992
   219  0000                     _TRISA	set	3986
   220  0000                     _TRISF	set	3991
   221  0000                     _TRISE	set	3990
   222  0000                     _LATC	set	3979
   223  0000                     _LATG	set	3983
   224  0000                     _LATB	set	3978
   225  0000                     _LATF	set	3982
   226  0000                     _LATA	set	3977
   227  0000                     _LATD	set	3980
   228  0000                     _LATE	set	3981
   229                           
   230                           ; #config settings
   231  0000                     
   232                           	psect	cinit
   233  000714                     __pcinit:
   234                           	opt stack 0
   235  000714                     start_initialization:
   236                           	opt stack 0
   237  000714                     __initialization:
   238                           	opt stack 0
   239                           
   240                           ; Clear objects allocated to COMRAM (3 bytes)
   241  000714  6A3B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   242  000716  6A3A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   243  000718  6A39               	clrf	__pbssCOMRAM& (0+255),c
   244  00071A                     end_of_initialization:
   245                           	opt stack 0
   246  00071A                     __end_of__initialization:
   247                           	opt stack 0
   248  00071A  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   249  00071C  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   250  00071E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   251  000720  6EF8               	movwf	tblptru,c
   252  000722  0100               	movlb	0
   253  000724  EF77  F002         	goto	_main	;jump to C main() function
   254                           tblptru	equ	0xFF8
   255                           
   256                           	psect	bssCOMRAM
   257  000039                     __pbssCOMRAM:
   258                           	opt stack 0
   259  000039                     TMR1_ISR@CountCallBack:
   260                           	opt stack 0
   261  000039                     	ds	2
   262  00003B                     _CAN_ok:
   263                           	opt stack 0
   264  00003B                     	ds	1
   265                           tblptru	equ	0xFF8
   266                           
   267                           	psect	cstackCOMRAM
   268  000001                     __pcstackCOMRAM:
   269                           	opt stack 0
   270  000001                     ??_INTERRUPT_InterruptManager:
   271  000001                     
   272                           ; 1 bytes @ 0x0
   273  000001                     	ds	14
   274  00000F                     ??_ECAN_Initialize:
   275  00000F                     ?_convertReg2ExtendedCANid:
   276                           	opt stack 0
   277  00000F                     ?_convertReg2StandardCANid:
   278                           	opt stack 0
   279  00000F                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   280                           	opt stack 0
   281  00000F                     convertReg2StandardCANid@tempRXBn_SIDL:
   282                           	opt stack 0
   283  00000F                     EUSART1_Write@txData:
   284                           	opt stack 0
   285  00000F                     TMR1_SetInterruptHandler@InterruptHandler:
   286                           	opt stack 0
   287                           
   288                           ; 2 bytes @ 0xE
   289  00000F                     	ds	1
   290  000010                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   291                           	opt stack 0
   292                           
   293                           ; 1 bytes @ 0xF
   294  000010                     	ds	1
   295  000011                     ??_TMR1_Initialize:
   296  000011                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0x10
   300  000011                     	ds	2
   301  000013                     ??_convertReg2ExtendedCANid:
   302  000013                     ??_convertReg2StandardCANid:
   303  000013                     
   304                           ; 1 bytes @ 0x12
   305  000013                     	ds	2
   306  000015                     convertReg2StandardCANid@tempRXBn_SIDH:
   307                           	opt stack 0
   308                           
   309                           ; 1 bytes @ 0x14
   310  000015                     	ds	1
   311  000016                     convertReg2StandardCANid@returnValue:
   312                           	opt stack 0
   313                           
   314                           ; 4 bytes @ 0x15
   315  000016                     	ds	1
   316  000017                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   317                           	opt stack 0
   318                           
   319                           ; 1 bytes @ 0x16
   320  000017                     	ds	1
   321  000018                     convertReg2ExtendedCANid@returnValue:
   322                           	opt stack 0
   323                           
   324                           ; 4 bytes @ 0x17
   325  000018                     	ds	2
   326  00001A                     convertReg2StandardCANid@ConvertedID:
   327                           	opt stack 0
   328                           
   329                           ; 4 bytes @ 0x19
   330  00001A                     	ds	2
   331  00001C                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0x1B
   335  00001C                     	ds	1
   336  00001D                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x1C
   340  00001D                     	ds	1
   341  00001E                     convertReg2ExtendedCANid@ConvertedID:
   342                           	opt stack 0
   343                           
   344                           ; 4 bytes @ 0x1D
   345  00001E                     	ds	4
   346  000022                     CAN_receive@tempCanMsg:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x21
   350  000022                     	ds	2
   351  000024                     CAN_receive@returnValue:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x23
   355  000024                     	ds	1
   356  000025                     ??_main:
   357                           
   358                           ; 1 bytes @ 0x24
   359  000025                     	ds	2
   360  000027                     main@canMessage:
   361                           	opt stack 0
   362                           
   363                           ; 14 bytes @ 0x26
   364  000027                     	ds	14
   365                           tblptru	equ	0xFF8
   366                           
   367 ;;
   368 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   369 ;;
   370 ;; *************** function _main *****************
   371 ;; Defined at:
   372 ;;		line 15 in file "main.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;		None
   375 ;; Auto vars:     Size  Location     Type
   376 ;;  canMessage     14   38[COMRAM] struct .
   377 ;; Return value:  Size  Location     Type
   378 ;;                  1    wreg      void 
   379 ;; Registers used:
   380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   387 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   388 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   389 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   390 ;;Total ram usage:       16 bytes
   391 ;; Hardware stack levels required when called:    7
   392 ;; This function calls:
   393 ;;		_CAN_receive
   394 ;;		_EUSART1_Write
   395 ;;		_SYSTEM_Initialize
   396 ;;		_TMR1_SetInterruptHandler
   397 ;;		_TMR1_StartTimer
   398 ;; This function is called by:
   399 ;;		Startup code after reset
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           	psect	text0
   404  0004EE                     __ptext0:
   405                           	opt stack 0
   406  0004EE                     _main:
   407                           	opt stack 24
   408                           
   409                           ;main.c: 16: uCAN_MSG canMessage;
   410                           ;main.c: 18: SYSTEM_Initialize();
   411                           
   412                           ;incstack = 0
   413  0004EE  EC72  F003         	call	_SYSTEM_Initialize	;wreg free
   414                           
   415                           ;main.c: 19: (INTCONbits.GIE = 1);
   416  0004F2  8EF2               	bsf	intcon,7,c	;volatile
   417                           
   418                           ;main.c: 20: (INTCONbits.PEIE = 1);
   419  0004F4  8CF2               	bsf	intcon,6,c	;volatile
   420                           
   421                           ;main.c: 21: TMR1_SetInterruptHandler(&CAN_timeout);
   422  0004F6  0E58               	movlw	low _CAN_timeout
   423  0004F8  6E0F               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
   424  0004FA  0E07               	movlw	high _CAN_timeout
   425  0004FC  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
   426  0004FE  ECA3  F003         	call	_TMR1_SetInterruptHandler	;wreg free
   427                           
   428                           ;main.c: 24: CIOCONbits.CLKSEL = 1;
   429  000502  8070               	bsf	3952,0,c	;volatile
   430                           
   431                           ;main.c: 25: CIOCONbits.ENDRHI = 1;
   432  000504  8A70               	bsf	3952,5,c	;volatile
   433                           
   434                           ;main.c: 26: CIOCONbits.TX2SRC = 0;
   435  000506  9E70               	bcf	3952,7,c	;volatile
   436                           
   437                           ;main.c: 27: CIOCONbits.TX2EN = 0;
   438  000508  9C70               	bcf	3952,6,c	;volatile
   439                           
   440                           ;main.c: 30: _delay((unsigned long)((10000)*(16000000/4000.0)));
   441  00050A  0ECB               	movlw	203
   442  00050C  6E26               	movwf	(??_main+1)& (0+255),c
   443  00050E  0EEC               	movlw	236
   444  000510  6E25               	movwf	??_main& (0+255),c
   445  000512  0E84               	movlw	132
   446  000514                     u457:
   447  000514  2EE8               	decfsz	wreg,f,c
   448  000516  D7FE               	bra	u457
   449  000518  2E25               	decfsz	??_main& (0+255),f,c
   450  00051A  D7FC               	bra	u457
   451  00051C  2E26               	decfsz	(??_main+1)& (0+255),f,c
   452  00051E  D7FA               	bra	u457
   453  000520  D000               	nop2	
   454                           
   455                           ;main.c: 31: EUSART1_Write('R');
   456  000522  0E52               	movlw	82
   457  000524  EC9D  F003         	call	_EUSART1_Write
   458                           
   459                           ;main.c: 32: EUSART1_Write('I');
   460  000528  0E49               	movlw	73
   461  00052A  EC9D  F003         	call	_EUSART1_Write
   462                           
   463                           ;main.c: 33: EUSART1_Write('N');
   464  00052E  0E4E               	movlw	78
   465  000530  EC9D  F003         	call	_EUSART1_Write
   466                           
   467                           ;main.c: 34: EUSART1_Write('G');
   468  000534  0E47               	movlw	71
   469  000536  EC9D  F003         	call	_EUSART1_Write
   470                           
   471                           ;main.c: 35: EUSART1_Write('\n');
   472  00053A  0E0A               	movlw	10
   473  00053C  EC9D  F003         	call	_EUSART1_Write
   474                           
   475                           ;main.c: 36: EUSART1_Write('\r');
   476  000540  0E0D               	movlw	13
   477  000542  EC9D  F003         	call	_EUSART1_Write
   478                           
   479                           ;main.c: 38: do { LATDbits.LATD6 = 0; } while(0);
   480  000546  9C8C               	bcf	3980,6,c	;volatile
   481  000548                     l1778:
   482                           
   483                           ;main.c: 40: if (CAN_receive(&canMessage)) {
   484  000548  0E27               	movlw	low main@canMessage
   485  00054A  6E22               	movwf	CAN_receive@tempCanMsg,c
   486  00054C  0E00               	movlw	high main@canMessage
   487  00054E  6E23               	movwf	CAN_receive@tempCanMsg+1,c
   488  000550  EC47  F000         	call	_CAN_receive	;wreg free
   489  000554  0900               	iorlw	0
   490  000556  B4D8               	btfsc	status,2,c
   491  000558  D018               	goto	l1788
   492                           
   493                           ;main.c: 41: CAN_ok = 1;
   494  00055A  0E01               	movlw	1
   495  00055C  6E3B               	movwf	_CAN_ok,c
   496                           
   497                           ;main.c: 42: if (canMessage.frame.id == 0x643) {
   498  00055E  0E43               	movlw	67
   499  000560  1828               	xorwf	main@canMessage+1,w,c
   500  000562  E113               	bnz	l1788
   501  000564  0E06               	movlw	6
   502  000566  1829               	xorwf	main@canMessage+2,w,c
   503  000568  102A               	iorwf	main@canMessage+3,w,c
   504  00056A  102B               	iorwf	main@canMessage+4,w,c
   505  00056C  A4D8               	btfss	status,2,c
   506  00056E  D00D               	goto	l1788
   507                           
   508                           ;main.c: 43: CAN_ok = 1;
   509  000570  0E01               	movlw	1
   510  000572  6E3B               	movwf	_CAN_ok,c
   511                           
   512                           ;main.c: 44: if(canMessage.frame.data0 & 0b1) {
   513  000574  A02D               	btfss	main@canMessage+6,0,c
   514  000576  D004               	goto	l513
   515                           
   516                           ;main.c: 46: do { LATDbits.LATD6 = 1; } while(0);
   517  000578  8C8C               	bsf	3980,6,c	;volatile
   518                           
   519                           ;main.c: 47: do { LATDbits.LATD5 = 1; } while(0);
   520  00057A  8A8C               	bsf	3980,5,c	;volatile
   521                           
   522                           ;main.c: 48: do { LATDbits.LATD4 = 0; } while(0);
   523  00057C  988C               	bcf	3980,4,c	;volatile
   524                           
   525                           ;main.c: 49: } else if(!(canMessage.frame.data0 & 0b1)){
   526  00057E  D005               	goto	l1788
   527  000580                     l513:
   528  000580  B02D               	btfsc	main@canMessage+6,0,c
   529  000582  D003               	goto	l1788
   530                           
   531                           ;main.c: 50: do { LATDbits.LATD6 = 1; } while(0);
   532  000584  8C8C               	bsf	3980,6,c	;volatile
   533                           
   534                           ;main.c: 52: do { LATDbits.LATD5 = 0; } while(0);
   535  000586  9A8C               	bcf	3980,5,c	;volatile
   536                           
   537                           ;main.c: 53: do { LATDbits.LATD4 = 1; } while(0);
   538  000588  888C               	bsf	3980,4,c	;volatile
   539  00058A                     l1788:
   540                           
   541                           ;main.c: 54: }
   542                           ;main.c: 56: }
   543                           ;main.c: 57: }
   544                           ;main.c: 58: CAN_ok = 0;
   545  00058A  0E00               	movlw	0
   546  00058C  6E3B               	movwf	_CAN_ok,c
   547                           
   548                           ;main.c: 59: TMR1_StartTimer();
   549  00058E  ECA8  F003         	call	_TMR1_StartTimer	;wreg free
   550  000592  D7DA               	goto	l1778
   551  000594                     __end_of_main:
   552                           	opt stack 0
   553                           tblptru	equ	0xFF8
   554                           intcon	equ	0xFF2
   555                           wreg	equ	0xFE8
   556                           status	equ	0xFD8
   557                           
   558 ;; *************** function _SYSTEM_Initialize *****************
   559 ;; Defined at:
   560 ;;		line 113 in file "mcc_generated_files/mcc.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, status,2, status,0, cstack
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   578 ;;Total ram usage:        0 bytes
   579 ;; Hardware stack levels used:    1
   580 ;; Hardware stack levels required when called:    6
   581 ;; This function calls:
   582 ;;		_ECAN_Initialize
   583 ;;		_EUSART1_Initialize
   584 ;;		_INTERRUPT_Initialize
   585 ;;		_OSCILLATOR_Initialize
   586 ;;		_PIN_MANAGER_Initialize
   587 ;;		_TMR1_Initialize
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           	psect	text1
   594  0006E4                     __ptext1:
   595                           	opt stack 0
   596  0006E4                     _SYSTEM_Initialize:
   597                           	opt stack 24
   598                           
   599                           ;mcc.c: 116: INTERRUPT_Initialize();
   600                           
   601                           ;incstack = 0
   602  0006E4  ECAA  F003         	call	_INTERRUPT_Initialize	;wreg free
   603                           
   604                           ;mcc.c: 117: PIN_MANAGER_Initialize();
   605  0006E8  EC0D  F003         	call	_PIN_MANAGER_Initialize	;wreg free
   606                           
   607                           ;mcc.c: 118: OSCILLATOR_Initialize();
   608  0006EC  EC94  F003         	call	_OSCILLATOR_Initialize	;wreg free
   609                           
   610                           ;mcc.c: 119: TMR1_Initialize();
   611  0006F0  EC30  F003         	call	_TMR1_Initialize	;wreg free
   612                           
   613                           ;mcc.c: 120: EUSART1_Initialize();
   614  0006F4  EC7F  F003         	call	_EUSART1_Initialize	;wreg free
   615                           
   616                           ;mcc.c: 121: ECAN_Initialize();
   617  0006F8  EC00  F002         	call	_ECAN_Initialize	;wreg free
   618  0006FC  0012               	return		;funcret
   619  0006FE                     __end_of_SYSTEM_Initialize:
   620                           	opt stack 0
   621                           tblptru	equ	0xFF8
   622                           intcon	equ	0xFF2
   623                           wreg	equ	0xFE8
   624                           status	equ	0xFD8
   625                           
   626 ;; *************** function _TMR1_Initialize *****************
   627 ;; Defined at:
   628 ;;		line 63 in file "mcc_generated_files/tmr1.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   646 ;;Total ram usage:        2 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; Hardware stack levels required when called:    5
   649 ;; This function calls:
   650 ;;		_TMR1_SetInterruptHandler
   651 ;;		_TMR1_StartTimer
   652 ;; This function is called by:
   653 ;;		_SYSTEM_Initialize
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           	psect	text2
   658  000660                     __ptext2:
   659                           	opt stack 0
   660  000660                     _TMR1_Initialize:
   661                           	opt stack 24
   662                           
   663                           ;tmr1.c: 68: T1CON = 0x30;
   664                           
   665                           ;incstack = 0
   666  000660  0E30               	movlw	48
   667  000662  6ECD               	movwf	4045,c	;volatile
   668                           
   669                           ;tmr1.c: 71: T1GCON = 0x00;
   670  000664  0E00               	movlw	0
   671  000666  6EAA               	movwf	4010,c	;volatile
   672                           
   673                           ;tmr1.c: 74: TMR1H = 0x3C;
   674  000668  0E3C               	movlw	60
   675  00066A  6ECF               	movwf	4047,c	;volatile
   676                           
   677                           ;tmr1.c: 77: TMR1L = 0xB0;
   678  00066C  0EB0               	movlw	176
   679  00066E  6ECE               	movwf	4046,c	;volatile
   680                           
   681                           ;tmr1.c: 80: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
   682  000670  50CE               	movf	4046,w,c	;volatile
   683  000672  CFCF F011          	movff	4047,??_TMR1_Initialize	;volatile
   684  000676  6A12               	clrf	(??_TMR1_Initialize+1)& (0+255),c
   685  000678  C011  F012         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
   686  00067C  6A11               	clrf	??_TMR1_Initialize,c
   687  00067E  1011               	iorwf	??_TMR1_Initialize,w,c
   688  000680  6E37               	movwf	_timer1ReloadVal,c	;volatile
   689  000682  5012               	movf	??_TMR1_Initialize+1,w,c
   690  000684  6E38               	movwf	_timer1ReloadVal+1,c	;volatile
   691                           
   692                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
   693  000686  909E               	bcf	3998,0,c	;volatile
   694                           
   695                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
   696  000688  809D               	bsf	3997,0,c	;volatile
   697                           
   698                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
   699  00068A  0E5A               	movlw	low _TMR1_DefaultInterruptHandler
   700  00068C  6E0F               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
   701  00068E  0E07               	movlw	high _TMR1_DefaultInterruptHandler
   702  000690  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
   703  000692  ECA3  F003         	call	_TMR1_SetInterruptHandler	;wreg free
   704                           
   705                           ;tmr1.c: 92: TMR1_StartTimer();
   706  000696  ECA8  F003         	call	_TMR1_StartTimer	;wreg free
   707  00069A  0012               	return		;funcret
   708  00069C                     __end_of_TMR1_Initialize:
   709                           	opt stack 0
   710                           tblptru	equ	0xFF8
   711                           intcon	equ	0xFF2
   712                           wreg	equ	0xFE8
   713                           status	equ	0xFD8
   714                           
   715 ;; *************** function _TMR1_StartTimer *****************
   716 ;; Defined at:
   717 ;;		line 95 in file "mcc_generated_files/tmr1.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		None
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   735 ;;Total ram usage:        0 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    4
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_TMR1_Initialize
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           	psect	text3
   747  000750                     __ptext3:
   748                           	opt stack 0
   749  000750                     _TMR1_StartTimer:
   750                           	opt stack 26
   751                           
   752                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
   753                           
   754                           ;incstack = 0
   755  000750  80CD               	bsf	4045,0,c	;volatile
   756  000752  0012               	return		;funcret
   757  000754                     __end_of_TMR1_StartTimer:
   758                           	opt stack 0
   759                           tblptru	equ	0xFF8
   760                           intcon	equ	0xFF2
   761                           wreg	equ	0xFE8
   762                           status	equ	0xFD8
   763                           
   764 ;; *************** function _TMR1_SetInterruptHandler *****************
   765 ;; Defined at:
   766 ;;		line 190 in file "mcc_generated_files/tmr1.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  InterruptHan    2   14[COMRAM] PTR FTN()void 
   769 ;;		 -> CAN_timeout(1), TMR1_DefaultInterruptHandler(1), 
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   784 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   785 ;;Total ram usage:        2 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    4
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_TMR1_Initialize
   792 ;;		_main
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text4
   797  000746                     __ptext4:
   798                           	opt stack 0
   799  000746                     _TMR1_SetInterruptHandler:
   800                           	opt stack 26
   801                           
   802                           ;tmr1.c: 191: TMR1_InterruptHandler = InterruptHandler;
   803                           
   804                           ;incstack = 0
   805  000746  C00F  F035         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
   806  00074A  C010  F036         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
   807  00074E  0012               	return		;funcret
   808  000750                     __end_of_TMR1_SetInterruptHandler:
   809                           	opt stack 0
   810                           tblptru	equ	0xFF8
   811                           intcon	equ	0xFF2
   812                           wreg	equ	0xFE8
   813                           status	equ	0xFD8
   814                           
   815 ;; *************** function _PIN_MANAGER_Initialize *****************
   816 ;; Defined at:
   817 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, status,2
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   835 ;;Total ram usage:        0 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    4
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_SYSTEM_Initialize
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text5
   846  00061A                     __ptext5:
   847                           	opt stack 0
   848  00061A                     _PIN_MANAGER_Initialize:
   849                           	opt stack 25
   850                           
   851                           ;pin_manager.c: 57: LATE = 0x00;
   852                           
   853                           ;incstack = 0
   854  00061A  0E00               	movlw	0
   855  00061C  6E8D               	movwf	3981,c	;volatile
   856                           
   857                           ;pin_manager.c: 58: LATD = 0x70;
   858  00061E  0E70               	movlw	112
   859  000620  6E8C               	movwf	3980,c	;volatile
   860                           
   861                           ;pin_manager.c: 59: LATA = 0x00;
   862  000622  0E00               	movlw	0
   863  000624  6E89               	movwf	3977,c	;volatile
   864                           
   865                           ;pin_manager.c: 60: LATF = 0x00;
   866  000626  0E00               	movlw	0
   867  000628  6E8E               	movwf	3982,c	;volatile
   868                           
   869                           ;pin_manager.c: 61: LATB = 0x00;
   870  00062A  0E00               	movlw	0
   871  00062C  6E8A               	movwf	3978,c	;volatile
   872                           
   873                           ;pin_manager.c: 62: LATG = 0x00;
   874  00062E  0E00               	movlw	0
   875  000630  6E8F               	movwf	3983,c	;volatile
   876                           
   877                           ;pin_manager.c: 63: LATC = 0x00;
   878  000632  0E00               	movlw	0
   879  000634  6E8B               	movwf	3979,c	;volatile
   880                           
   881                           ;pin_manager.c: 68: TRISE = 0xF7;
   882  000636  0EF7               	movlw	247
   883  000638  6E96               	movwf	3990,c	;volatile
   884                           
   885                           ;pin_manager.c: 69: TRISF = 0xFF;
   886  00063A  6897               	setf	3991,c	;volatile
   887                           
   888                           ;pin_manager.c: 70: TRISA = 0xEF;
   889  00063C  0EEF               	movlw	239
   890  00063E  6E92               	movwf	3986,c	;volatile
   891                           
   892                           ;pin_manager.c: 71: TRISG = 0x17;
   893  000640  0E17               	movlw	23
   894  000642  6E98               	movwf	3992,c	;volatile
   895                           
   896                           ;pin_manager.c: 72: TRISB = 0xFB;
   897  000644  0EFB               	movlw	251
   898  000646  6E93               	movwf	3987,c	;volatile
   899                           
   900                           ;pin_manager.c: 73: TRISC = 0xFF;
   901  000648  6894               	setf	3988,c	;volatile
   902                           
   903                           ;pin_manager.c: 74: TRISD = 0x8F;
   904  00064A  0E8F               	movlw	143
   905  00064C  6E95               	movwf	3989,c	;volatile
   906                           
   907                           ;pin_manager.c: 79: ANCON0 = 0xEF;
   908  00064E  0EEF               	movlw	239
   909  000650  010F               	movlb	15	; () banked
   910  000652  6F5D               	movwf	93,b	;volatile
   911                           
   912                           ;pin_manager.c: 80: ANCON1 = 0x7F;
   913  000654  0E7F               	movlw	127
   914  000656  010F               	movlb	15	; () banked
   915  000658  6F5C               	movwf	92,b	;volatile
   916                           
   917                           ; BSR set to: 15
   918                           ;pin_manager.c: 85: WPUB = 0xFF;
   919  00065A  010F               	movlb	15	; () banked
   920  00065C  695B               	setf	91,b	;volatile
   921                           
   922                           ; BSR set to: 15
   923  00065E  0012               	return		;funcret
   924  000660                     __end_of_PIN_MANAGER_Initialize:
   925                           	opt stack 0
   926                           tblptru	equ	0xFF8
   927                           intcon	equ	0xFF2
   928                           wreg	equ	0xFE8
   929                           status	equ	0xFD8
   930                           
   931 ;; *************** function _OSCILLATOR_Initialize *****************
   932 ;; Defined at:
   933 ;;		line 124 in file "mcc_generated_files/mcc.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, status,2
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   951 ;;Total ram usage:        0 bytes
   952 ;; Hardware stack levels used:    1
   953 ;; Hardware stack levels required when called:    4
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_SYSTEM_Initialize
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text6
   962  000728                     __ptext6:
   963                           	opt stack 0
   964  000728                     _OSCILLATOR_Initialize:
   965                           	opt stack 25
   966                           
   967                           ;mcc.c: 127: OSCCON = 0x60;
   968                           
   969                           ; BSR set to: 15
   970                           ;incstack = 0
   971  000728  0E60               	movlw	96
   972  00072A  6ED3               	movwf	4051,c	;volatile
   973                           
   974                           ;mcc.c: 129: OSCCON2 = 0x00;
   975  00072C  0E00               	movlw	0
   976  00072E  6ED2               	movwf	4050,c	;volatile
   977                           
   978                           ;mcc.c: 131: OSCTUNE = 0x00;
   979  000730  0E00               	movlw	0
   980  000732  6E9B               	movwf	3995,c	;volatile
   981                           
   982                           ;mcc.c: 133: REFOCON = 0x00;
   983  000734  0E00               	movlw	0
   984  000736  6E9A               	movwf	3994,c	;volatile
   985  000738  0012               	return		;funcret
   986  00073A                     __end_of_OSCILLATOR_Initialize:
   987                           	opt stack 0
   988                           tblptru	equ	0xFF8
   989                           intcon	equ	0xFF2
   990                           wreg	equ	0xFE8
   991                           status	equ	0xFD8
   992                           
   993 ;; *************** function _INTERRUPT_Initialize *****************
   994 ;; Defined at:
   995 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		None
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1013 ;;Total ram usage:        0 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    4
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_SYSTEM_Initialize
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text7
  1024  000754                     __ptext7:
  1025                           	opt stack 0
  1026  000754                     _INTERRUPT_Initialize:
  1027                           	opt stack 25
  1028                           
  1029                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1030                           
  1031                           ;incstack = 0
  1032  000754  9ED0               	bcf	4048,7,c	;volatile
  1033  000756  0012               	return		;funcret
  1034  000758                     __end_of_INTERRUPT_Initialize:
  1035                           	opt stack 0
  1036                           tblptru	equ	0xFF8
  1037                           intcon	equ	0xFF2
  1038                           wreg	equ	0xFE8
  1039                           status	equ	0xFD8
  1040                           
  1041 ;; *************** function _EUSART1_Initialize *****************
  1042 ;; Defined at:
  1043 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1061 ;;Total ram usage:        0 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    4
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_SYSTEM_Initialize
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text8
  1072  0006FE                     __ptext8:
  1073                           	opt stack 0
  1074  0006FE                     _EUSART1_Initialize:
  1075                           	opt stack 25
  1076                           
  1077                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  1078                           
  1079                           ;incstack = 0
  1080  0006FE  0E08               	movlw	8
  1081  000700  6EA7               	movwf	4007,c	;volatile
  1082                           
  1083                           ;eusart1.c: 63: RCSTA1 = 0x90;
  1084  000702  0E90               	movlw	144
  1085  000704  6EAB               	movwf	4011,c	;volatile
  1086                           
  1087                           ;eusart1.c: 66: TXSTA1 = 0x24;
  1088  000706  0E24               	movlw	36
  1089  000708  6EAC               	movwf	4012,c	;volatile
  1090                           
  1091                           ;eusart1.c: 69: SPBRG1 = 0x22;
  1092  00070A  0E22               	movlw	34
  1093  00070C  6EAF               	movwf	4015,c	;volatile
  1094                           
  1095                           ;eusart1.c: 72: SPBRGH1 = 0x00;
  1096  00070E  0E00               	movlw	0
  1097  000710  6E7D               	movwf	3965,c	;volatile
  1098  000712  0012               	return		;funcret
  1099  000714                     __end_of_EUSART1_Initialize:
  1100                           	opt stack 0
  1101                           tblptru	equ	0xFF8
  1102                           intcon	equ	0xFF2
  1103                           wreg	equ	0xFE8
  1104                           status	equ	0xFD8
  1105                           
  1106 ;; *************** function _ECAN_Initialize *****************
  1107 ;; Defined at:
  1108 ;;		line 63 in file "mcc_generated_files/ecan.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;		None
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, status,2, status,0
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1124 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1125 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1126 ;;Total ram usage:        1 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; Hardware stack levels required when called:    4
  1129 ;; This function calls:
  1130 ;;		Nothing
  1131 ;; This function is called by:
  1132 ;;		_SYSTEM_Initialize
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text9
  1137  000400                     __ptext9:
  1138                           	opt stack 0
  1139  000400                     _ECAN_Initialize:
  1140                           	opt stack 25
  1141                           
  1142                           ;ecan.c: 65: CANCON = 0x80;
  1143                           
  1144                           ;incstack = 0
  1145  000400  0E80               	movlw	128
  1146  000402  6E6F               	movwf	3951,c	;volatile
  1147  000404                     l1186:
  1148  000404  506E               	movf	3950,w,c	;volatile
  1149  000406  0BE0               	andlw	224
  1150  000408  0A80               	xorlw	128
  1151  00040A  A4D8               	btfss	status,2,c
  1152  00040C  D7FB               	goto	l1186
  1153                           
  1154                           ;ecan.c: 71: ECANCON = 0x00;
  1155  00040E  0E00               	movlw	0
  1156  000410  6E72               	movwf	3954,c	;volatile
  1157                           
  1158                           ;ecan.c: 88: RXM0EIDH = 0x00;
  1159  000412  0E00               	movlw	0
  1160  000414  010E               	movlb	14	; () banked
  1161  000416  6FFA               	movwf	250,b	;volatile
  1162                           
  1163                           ;ecan.c: 89: RXM0EIDL = 0x00;
  1164  000418  0E00               	movlw	0
  1165  00041A  010E               	movlb	14	; () banked
  1166  00041C  6FFB               	movwf	251,b	;volatile
  1167                           
  1168                           ;ecan.c: 90: RXM0SIDH = 0x00;
  1169  00041E  0E00               	movlw	0
  1170  000420  010E               	movlb	14	; () banked
  1171  000422  6FF8               	movwf	248,b	;volatile
  1172                           
  1173                           ;ecan.c: 91: RXM0SIDL = 0x00;
  1174  000424  0E00               	movlw	0
  1175  000426  010E               	movlb	14	; () banked
  1176  000428  6FF9               	movwf	249,b	;volatile
  1177                           
  1178                           ; BSR set to: 14
  1179                           ;ecan.c: 93: RXM1EIDH = 0xFF;
  1180  00042A  010E               	movlb	14	; () banked
  1181  00042C  69FE               	setf	254,b	;volatile
  1182                           
  1183                           ; BSR set to: 14
  1184                           ;ecan.c: 94: RXM1EIDL = 0xFF;
  1185  00042E  010E               	movlb	14	; () banked
  1186  000430  69FF               	setf	255,b	;volatile
  1187                           
  1188                           ; BSR set to: 14
  1189                           ;ecan.c: 95: RXM1SIDH = 0xFF;
  1190  000432  010E               	movlb	14	; () banked
  1191  000434  69FC               	setf	252,b	;volatile
  1192                           
  1193                           ; BSR set to: 14
  1194                           ;ecan.c: 96: RXM1SIDL = 0xFF;
  1195  000436  010E               	movlb	14	; () banked
  1196  000438  69FD               	setf	253,b	;volatile
  1197                           
  1198                           ;ecan.c: 102: RXF0EIDH = 0x00;
  1199  00043A  0E00               	movlw	0
  1200  00043C  010E               	movlb	14	; () banked
  1201  00043E  6FE2               	movwf	226,b	;volatile
  1202                           
  1203                           ;ecan.c: 103: RXF0EIDL = 0x00;
  1204  000440  0E00               	movlw	0
  1205  000442  010E               	movlb	14	; () banked
  1206  000444  6FE3               	movwf	227,b	;volatile
  1207                           
  1208                           ;ecan.c: 104: RXF0SIDH = 0x88;
  1209  000446  0E88               	movlw	136
  1210  000448  010E               	movlb	14	; () banked
  1211  00044A  6FE0               	movwf	224,b	;volatile
  1212                           
  1213                           ;ecan.c: 105: RXF0SIDL = 0x80;
  1214  00044C  0E80               	movlw	128
  1215  00044E  010E               	movlb	14	; () banked
  1216  000450  6FE1               	movwf	225,b	;volatile
  1217                           
  1218                           ;ecan.c: 107: RXF1EIDH = 0x00;
  1219  000452  0E00               	movlw	0
  1220  000454  010E               	movlb	14	; () banked
  1221  000456  6FE6               	movwf	230,b	;volatile
  1222                           
  1223                           ;ecan.c: 108: RXF1EIDL = 0x00;
  1224  000458  0E00               	movlw	0
  1225  00045A  010E               	movlb	14	; () banked
  1226  00045C  6FE7               	movwf	231,b	;volatile
  1227                           
  1228                           ;ecan.c: 109: RXF1SIDH = 0xCC;
  1229  00045E  0ECC               	movlw	204
  1230  000460  010E               	movlb	14	; () banked
  1231  000462  6FE4               	movwf	228,b	;volatile
  1232                           
  1233                           ;ecan.c: 110: RXF1SIDL = 0xC0;
  1234  000464  0EC0               	movlw	192
  1235  000466  010E               	movlb	14	; () banked
  1236  000468  6FE5               	movwf	229,b	;volatile
  1237                           
  1238                           ;ecan.c: 112: RXF2EIDH = 0x00;
  1239  00046A  0E00               	movlw	0
  1240  00046C  010E               	movlb	14	; () banked
  1241  00046E  6FEA               	movwf	234,b	;volatile
  1242                           
  1243                           ;ecan.c: 113: RXF2EIDL = 0x00;
  1244  000470  0E00               	movlw	0
  1245  000472  010E               	movlb	14	; () banked
  1246  000474  6FEB               	movwf	235,b	;volatile
  1247                           
  1248                           ;ecan.c: 114: RXF2SIDH = 0x00;
  1249  000476  0E00               	movlw	0
  1250  000478  010E               	movlb	14	; () banked
  1251  00047A  6FE8               	movwf	232,b	;volatile
  1252                           
  1253                           ;ecan.c: 115: RXF2SIDL = 0x00;
  1254  00047C  0E00               	movlw	0
  1255  00047E  010E               	movlb	14	; () banked
  1256  000480  6FE9               	movwf	233,b	;volatile
  1257                           
  1258                           ;ecan.c: 117: RXF3EIDH = 0x00;
  1259  000482  0E00               	movlw	0
  1260  000484  010E               	movlb	14	; () banked
  1261  000486  6FEE               	movwf	238,b	;volatile
  1262                           
  1263                           ;ecan.c: 118: RXF3EIDL = 0x00;
  1264  000488  0E00               	movlw	0
  1265  00048A  010E               	movlb	14	; () banked
  1266  00048C  6FEF               	movwf	239,b	;volatile
  1267                           
  1268                           ;ecan.c: 119: RXF3SIDH = 0x00;
  1269  00048E  0E00               	movlw	0
  1270  000490  010E               	movlb	14	; () banked
  1271  000492  6FEC               	movwf	236,b	;volatile
  1272                           
  1273                           ;ecan.c: 120: RXF3SIDL = 0x00;
  1274  000494  0E00               	movlw	0
  1275  000496  010E               	movlb	14	; () banked
  1276  000498  6FED               	movwf	237,b	;volatile
  1277                           
  1278                           ;ecan.c: 122: RXF4EIDH = 0x00;
  1279  00049A  0E00               	movlw	0
  1280  00049C  010E               	movlb	14	; () banked
  1281  00049E  6FF2               	movwf	242,b	;volatile
  1282                           
  1283                           ;ecan.c: 123: RXF4EIDL = 0x00;
  1284  0004A0  0E00               	movlw	0
  1285  0004A2  010E               	movlb	14	; () banked
  1286  0004A4  6FF3               	movwf	243,b	;volatile
  1287                           
  1288                           ;ecan.c: 124: RXF4SIDH = 0x00;
  1289  0004A6  0E00               	movlw	0
  1290  0004A8  010E               	movlb	14	; () banked
  1291  0004AA  6FF0               	movwf	240,b	;volatile
  1292                           
  1293                           ;ecan.c: 125: RXF4SIDL = 0x00;
  1294  0004AC  0E00               	movlw	0
  1295  0004AE  010E               	movlb	14	; () banked
  1296  0004B0  6FF1               	movwf	241,b	;volatile
  1297                           
  1298                           ;ecan.c: 127: RXF5EIDH = 0x00;
  1299  0004B2  0E00               	movlw	0
  1300  0004B4  010E               	movlb	14	; () banked
  1301  0004B6  6FF6               	movwf	246,b	;volatile
  1302                           
  1303                           ;ecan.c: 128: RXF5EIDL = 0x00;
  1304  0004B8  0E00               	movlw	0
  1305  0004BA  010E               	movlb	14	; () banked
  1306  0004BC  6FF7               	movwf	247,b	;volatile
  1307                           
  1308                           ;ecan.c: 129: RXF5SIDH = 0x00;
  1309  0004BE  0E00               	movlw	0
  1310  0004C0  010E               	movlb	14	; () banked
  1311  0004C2  6FF4               	movwf	244,b	;volatile
  1312                           
  1313                           ;ecan.c: 130: RXF5SIDL = 0x00;
  1314  0004C4  0E00               	movlw	0
  1315  0004C6  010E               	movlb	14	; () banked
  1316  0004C8  6FF5               	movwf	245,b	;volatile
  1317                           
  1318                           ;ecan.c: 145: BRGCON1 = 0x00;
  1319  0004CA  0E00               	movlw	0
  1320  0004CC  010E               	movlb	14	; () banked
  1321  0004CE  6F43               	movwf	67,b	;volatile
  1322                           
  1323                           ;ecan.c: 146: BRGCON2 = 0x98;
  1324  0004D0  0E98               	movlw	152
  1325  0004D2  010E               	movlb	14	; () banked
  1326  0004D4  6F44               	movwf	68,b	;volatile
  1327                           
  1328                           ;ecan.c: 147: BRGCON3 = 0x01;
  1329  0004D6  0E01               	movlw	1
  1330  0004D8  010E               	movlb	14	; () banked
  1331  0004DA  6F45               	movwf	69,b	;volatile
  1332                           
  1333                           ;ecan.c: 149: CANCON = 0x00;
  1334  0004DC  0E00               	movlw	0
  1335  0004DE  6E6F               	movwf	3951,c	;volatile
  1336  0004E0                     l1198:
  1337  0004E0  CF6E F00F          	movff	3950,??_ECAN_Initialize	;volatile
  1338  0004E4  0EE0               	movlw	224
  1339  0004E6  160F               	andwf	??_ECAN_Initialize,f,c
  1340  0004E8  B4D8               	btfsc	status,2,c
  1341  0004EA  0012               	return	
  1342  0004EC  D7F9               	goto	l1198
  1343  0004EE                     __end_of_ECAN_Initialize:
  1344                           	opt stack 0
  1345                           tblptru	equ	0xFF8
  1346                           intcon	equ	0xFF2
  1347                           wreg	equ	0xFE8
  1348                           status	equ	0xFD8
  1349                           
  1350 ;; *************** function _EUSART1_Write *****************
  1351 ;; Defined at:
  1352 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  txData          1    wreg     unsigned char 
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  txData          1   14[COMRAM] unsigned char 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1369 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;Total ram usage:        1 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; Hardware stack levels required when called:    4
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text10
  1381  00073A                     __ptext10:
  1382                           	opt stack 0
  1383  00073A                     _EUSART1_Write:
  1384                           	opt stack 26
  1385                           
  1386                           ;incstack = 0
  1387                           ;EUSART1_Write@txData stored from wreg
  1388  00073A  6E0F               	movwf	EUSART1_Write@txData,c
  1389  00073C                     l386:
  1390  00073C  A89E               	btfss	3998,4,c	;volatile
  1391  00073E  D7FE               	goto	l386
  1392                           
  1393                           ;eusart1.c: 100: }
  1394                           ;eusart1.c: 102: TXREG1 = txData;
  1395  000740  C00F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1396  000744  0012               	return		;funcret
  1397  000746                     __end_of_EUSART1_Write:
  1398                           	opt stack 0
  1399                           tblptru	equ	0xFF8
  1400                           intcon	equ	0xFF2
  1401                           wreg	equ	0xFE8
  1402                           status	equ	0xFD8
  1403                           
  1404 ;; *************** function _CAN_receive *****************
  1405 ;; Defined at:
  1406 ;;		line 242 in file "mcc_generated_files/ecan.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  tempCanMsg      2   33[COMRAM] PTR struct .
  1409 ;;		 -> main@canMessage(14), 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  returnValue     1   35[COMRAM] unsigned char 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      unsigned char 
  1414 ;; Registers used:
  1415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1421 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1424 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1425 ;;Total ram usage:        3 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    5
  1428 ;; This function calls:
  1429 ;;		_convertReg2ExtendedCANid
  1430 ;;		_convertReg2StandardCANid
  1431 ;; This function is called by:
  1432 ;;		_main
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text11
  1437  00008E                     __ptext11:
  1438                           	opt stack 0
  1439  00008E                     _CAN_receive:
  1440                           	opt stack 25
  1441                           
  1442                           ;ecan.c: 243: unsigned char returnValue = 0;
  1443                           
  1444                           ;incstack = 0
  1445  00008E  0E00               	movlw	0
  1446  000090  6E24               	movwf	CAN_receive@returnValue,c
  1447                           
  1448                           ;ecan.c: 247: {
  1449                           ;ecan.c: 250: if (RXB0CONbits.RXFUL != 0)
  1450  000092  AE60               	btfss	3936,7,c	;volatile
  1451  000094  D083               	goto	l320
  1452                           
  1453                           ;ecan.c: 251: {
  1454                           ;ecan.c: 252: if ((RXB0SIDL & 0x08) == 0x08)
  1455  000096  A662               	btfss	3938,3,c	;volatile
  1456  000098  D01E               	goto	l1684
  1457                           
  1458                           ;ecan.c: 253: {
  1459                           ;ecan.c: 255: tempCanMsg->frame.idType = (unsigned char) 2;
  1460  00009A  C022  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  1461  00009E  C023  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  1462  0000A2  0E02               	movlw	2
  1463  0000A4  6EDF               	movwf	indf2,c
  1464                           
  1465                           ;ecan.c: 256: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB0EIDH, RXB0EIDL, RXB0SI
      +                          DH, RXB0SIDL);
  1466  0000A6  CF64 F00F          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  1467  0000AA  CF61 F010          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  1468  0000AE  CF62 F011          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  1469  0000B2  5063               	movf	3939,w,c	;volatile
  1470  0000B4  EC5C  F001         	call	_convertReg2ExtendedCANid
  1471  0000B8  EE20 F001          	lfsr	2,1
  1472  0000BC  5022               	movf	CAN_receive@tempCanMsg,w,c
  1473  0000BE  26D9               	addwf	fsr2l,f,c
  1474  0000C0  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1475  0000C2  22DA               	addwfc	fsr2h,f,c
  1476  0000C4  C00F  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  1477  0000C8  C010  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  1478  0000CC  C011  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  1479  0000D0  C012  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  1480                           
  1481                           ;ecan.c: 257: } else {
  1482  0000D4  D019               	goto	l1688
  1483  0000D6                     l1684:
  1484                           
  1485                           ;ecan.c: 259: tempCanMsg->frame.idType = (unsigned char) 1;
  1486  0000D6  C022  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  1487  0000DA  C023  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  1488  0000DE  0E01               	movlw	1
  1489  0000E0  6EDF               	movwf	indf2,c
  1490                           
  1491                           ;ecan.c: 260: tempCanMsg->frame.id = convertReg2StandardCANid(RXB0SIDH, RXB0SIDL);
  1492  0000E2  CF62 F00F          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  1493  0000E6  5061               	movf	3937,w,c	;volatile
  1494  0000E8  ECCA  F002         	call	_convertReg2StandardCANid
  1495  0000EC  EE20 F001          	lfsr	2,1
  1496  0000F0  5022               	movf	CAN_receive@tempCanMsg,w,c
  1497  0000F2  26D9               	addwf	fsr2l,f,c
  1498  0000F4  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1499  0000F6  22DA               	addwfc	fsr2h,f,c
  1500  0000F8  C00F  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  1501  0000FC  C010  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  1502  000100  C011  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  1503  000104  C012  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  1504  000108                     l1688:
  1505                           
  1506                           ;ecan.c: 261: }
  1507                           ;ecan.c: 263: tempCanMsg->frame.dlc = RXB0DLC;
  1508  000108  EE20 F005          	lfsr	2,5
  1509  00010C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1510  00010E  26D9               	addwf	fsr2l,f,c
  1511  000110  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1512  000112  22DA               	addwfc	fsr2h,f,c
  1513  000114  CF65 FFDF          	movff	3941,indf2	;volatile
  1514                           
  1515                           ;ecan.c: 264: tempCanMsg->frame.data0 = RXB0D0;
  1516  000118  EE20 F006          	lfsr	2,6
  1517  00011C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1518  00011E  26D9               	addwf	fsr2l,f,c
  1519  000120  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1520  000122  22DA               	addwfc	fsr2h,f,c
  1521  000124  CF66 FFDF          	movff	3942,indf2	;volatile
  1522                           
  1523                           ;ecan.c: 265: tempCanMsg->frame.data1 = RXB0D1;
  1524  000128  EE20 F007          	lfsr	2,7
  1525  00012C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1526  00012E  26D9               	addwf	fsr2l,f,c
  1527  000130  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1528  000132  22DA               	addwfc	fsr2h,f,c
  1529  000134  CF67 FFDF          	movff	3943,indf2	;volatile
  1530                           
  1531                           ;ecan.c: 266: tempCanMsg->frame.data2 = RXB0D2;
  1532  000138  EE20 F008          	lfsr	2,8
  1533  00013C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1534  00013E  26D9               	addwf	fsr2l,f,c
  1535  000140  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1536  000142  22DA               	addwfc	fsr2h,f,c
  1537  000144  CF68 FFDF          	movff	3944,indf2	;volatile
  1538                           
  1539                           ;ecan.c: 267: tempCanMsg->frame.data3 = RXB0D3;
  1540  000148  EE20 F009          	lfsr	2,9
  1541  00014C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1542  00014E  26D9               	addwf	fsr2l,f,c
  1543  000150  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1544  000152  22DA               	addwfc	fsr2h,f,c
  1545  000154  CF69 FFDF          	movff	3945,indf2	;volatile
  1546                           
  1547                           ;ecan.c: 268: tempCanMsg->frame.data4 = RXB0D4;
  1548  000158  EE20 F00A          	lfsr	2,10
  1549  00015C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1550  00015E  26D9               	addwf	fsr2l,f,c
  1551  000160  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1552  000162  22DA               	addwfc	fsr2h,f,c
  1553  000164  CF6A FFDF          	movff	3946,indf2	;volatile
  1554                           
  1555                           ;ecan.c: 269: tempCanMsg->frame.data5 = RXB0D5;
  1556  000168  EE20 F00B          	lfsr	2,11
  1557  00016C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1558  00016E  26D9               	addwf	fsr2l,f,c
  1559  000170  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1560  000172  22DA               	addwfc	fsr2h,f,c
  1561  000174  CF6B FFDF          	movff	3947,indf2	;volatile
  1562                           
  1563                           ;ecan.c: 270: tempCanMsg->frame.data6 = RXB0D6;
  1564  000178  EE20 F00C          	lfsr	2,12
  1565  00017C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1566  00017E  26D9               	addwf	fsr2l,f,c
  1567  000180  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1568  000182  22DA               	addwfc	fsr2h,f,c
  1569  000184  CF6C FFDF          	movff	3948,indf2	;volatile
  1570                           
  1571                           ;ecan.c: 271: tempCanMsg->frame.data7 = RXB0D7;
  1572  000188  EE20 F00D          	lfsr	2,13
  1573  00018C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1574  00018E  26D9               	addwf	fsr2l,f,c
  1575  000190  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1576  000192  22DA               	addwfc	fsr2h,f,c
  1577  000194  CF6D FFDF          	movff	3949,indf2	;volatile
  1578                           
  1579                           ;ecan.c: 272: RXB0CONbits.RXFUL = 0;
  1580  000198  9E60               	bcf	3936,7,c	;volatile
  1581  00019A  D089               	goto	l1740
  1582  00019C                     l320:
  1583  00019C  010F               	movlb	15	; () banked
  1584  00019E  AF30               	btfss	48,7,b	;volatile
  1585  0001A0  D088               	goto	l1742
  1586                           
  1587                           ; BSR set to: 15
  1588                           ;ecan.c: 275: {
  1589                           ;ecan.c: 276: if ((RXB1SIDL & 0x08) == 0x08)
  1590  0001A2  010F               	movlb	15	; () banked
  1591  0001A4  A732               	btfss	50,3,b	;volatile
  1592  0001A6  D01F               	goto	l1716
  1593                           
  1594                           ; BSR set to: 15
  1595                           ;ecan.c: 277: {
  1596                           ;ecan.c: 279: tempCanMsg->frame.idType = (unsigned char) 2;
  1597  0001A8  C022  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  1598  0001AC  C023  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  1599  0001B0  0E02               	movlw	2
  1600  0001B2  6EDF               	movwf	indf2,c
  1601                           
  1602                           ; BSR set to: 15
  1603                           ;ecan.c: 280: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB1EIDH, RXB1EIDL, RXB1SI
      +                          DH, RXB1SIDL);
  1604  0001B4  CF34 F00F          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  1605  0001B8  CF31 F010          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  1606  0001BC  CF32 F011          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  1607  0001C0  010F               	movlb	15	; () banked
  1608  0001C2  5133               	movf	51,w,b	;volatile
  1609  0001C4  EC5C  F001         	call	_convertReg2ExtendedCANid
  1610  0001C8  EE20 F001          	lfsr	2,1
  1611  0001CC  5022               	movf	CAN_receive@tempCanMsg,w,c
  1612  0001CE  26D9               	addwf	fsr2l,f,c
  1613  0001D0  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1614  0001D2  22DA               	addwfc	fsr2h,f,c
  1615  0001D4  C00F  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  1616  0001D8  C010  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  1617  0001DC  C011  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  1618  0001E0  C012  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  1619                           
  1620                           ;ecan.c: 281: }
  1621  0001E4  D01A               	goto	l1720
  1622  0001E6                     l1716:
  1623                           
  1624                           ;ecan.c: 282: else
  1625                           ;ecan.c: 283: {
  1626                           ;ecan.c: 285: tempCanMsg->frame.idType = (unsigned char) 1;
  1627  0001E6  C022  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  1628  0001EA  C023  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  1629  0001EE  0E01               	movlw	1
  1630  0001F0  6EDF               	movwf	indf2,c
  1631                           
  1632                           ;ecan.c: 286: tempCanMsg->frame.id = convertReg2StandardCANid(RXB1SIDH, RXB1SIDL);
  1633  0001F2  CF32 F00F          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  1634  0001F6  010F               	movlb	15	; () banked
  1635  0001F8  5131               	movf	49,w,b	;volatile
  1636  0001FA  ECCA  F002         	call	_convertReg2StandardCANid
  1637  0001FE  EE20 F001          	lfsr	2,1
  1638  000202  5022               	movf	CAN_receive@tempCanMsg,w,c
  1639  000204  26D9               	addwf	fsr2l,f,c
  1640  000206  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1641  000208  22DA               	addwfc	fsr2h,f,c
  1642  00020A  C00F  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  1643  00020E  C010  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  1644  000212  C011  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  1645  000216  C012  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  1646  00021A                     l1720:
  1647                           
  1648                           ;ecan.c: 287: }
  1649                           ;ecan.c: 289: tempCanMsg->frame.dlc = RXB1DLC;
  1650  00021A  EE20 F005          	lfsr	2,5
  1651  00021E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1652  000220  26D9               	addwf	fsr2l,f,c
  1653  000222  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1654  000224  22DA               	addwfc	fsr2h,f,c
  1655  000226  CF35 FFDF          	movff	3893,indf2	;volatile
  1656                           
  1657                           ;ecan.c: 290: tempCanMsg->frame.data0 = RXB1D0;
  1658  00022A  EE20 F006          	lfsr	2,6
  1659  00022E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1660  000230  26D9               	addwf	fsr2l,f,c
  1661  000232  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1662  000234  22DA               	addwfc	fsr2h,f,c
  1663  000236  CF36 FFDF          	movff	3894,indf2	;volatile
  1664                           
  1665                           ;ecan.c: 291: tempCanMsg->frame.data1 = RXB1D1;
  1666  00023A  EE20 F007          	lfsr	2,7
  1667  00023E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1668  000240  26D9               	addwf	fsr2l,f,c
  1669  000242  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1670  000244  22DA               	addwfc	fsr2h,f,c
  1671  000246  CF37 FFDF          	movff	3895,indf2	;volatile
  1672                           
  1673                           ;ecan.c: 292: tempCanMsg->frame.data2 = RXB1D2;
  1674  00024A  EE20 F008          	lfsr	2,8
  1675  00024E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1676  000250  26D9               	addwf	fsr2l,f,c
  1677  000252  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1678  000254  22DA               	addwfc	fsr2h,f,c
  1679  000256  CF38 FFDF          	movff	3896,indf2	;volatile
  1680                           
  1681                           ;ecan.c: 293: tempCanMsg->frame.data3 = RXB1D3;
  1682  00025A  EE20 F009          	lfsr	2,9
  1683  00025E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1684  000260  26D9               	addwf	fsr2l,f,c
  1685  000262  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1686  000264  22DA               	addwfc	fsr2h,f,c
  1687  000266  CF39 FFDF          	movff	3897,indf2	;volatile
  1688                           
  1689                           ;ecan.c: 294: tempCanMsg->frame.data4 = RXB1D4;
  1690  00026A  EE20 F00A          	lfsr	2,10
  1691  00026E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1692  000270  26D9               	addwf	fsr2l,f,c
  1693  000272  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1694  000274  22DA               	addwfc	fsr2h,f,c
  1695  000276  CF3A FFDF          	movff	3898,indf2	;volatile
  1696                           
  1697                           ;ecan.c: 295: tempCanMsg->frame.data5 = RXB1D5;
  1698  00027A  EE20 F00B          	lfsr	2,11
  1699  00027E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1700  000280  26D9               	addwf	fsr2l,f,c
  1701  000282  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1702  000284  22DA               	addwfc	fsr2h,f,c
  1703  000286  CF3B FFDF          	movff	3899,indf2	;volatile
  1704                           
  1705                           ;ecan.c: 296: tempCanMsg->frame.data6 = RXB1D6;
  1706  00028A  EE20 F00C          	lfsr	2,12
  1707  00028E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1708  000290  26D9               	addwf	fsr2l,f,c
  1709  000292  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1710  000294  22DA               	addwfc	fsr2h,f,c
  1711  000296  CF3C FFDF          	movff	3900,indf2	;volatile
  1712                           
  1713                           ;ecan.c: 297: tempCanMsg->frame.data7 = RXB1D7;
  1714  00029A  EE20 F00D          	lfsr	2,13
  1715  00029E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1716  0002A0  26D9               	addwf	fsr2l,f,c
  1717  0002A2  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1718  0002A4  22DA               	addwfc	fsr2h,f,c
  1719  0002A6  CF3D FFDF          	movff	3901,indf2	;volatile
  1720                           
  1721                           ;ecan.c: 298: RXB1CONbits.RXFUL = 0;
  1722  0002AA  010F               	movlb	15	; () banked
  1723  0002AC  9F30               	bcf	48,7,b	;volatile
  1724  0002AE                     l1740:
  1725                           
  1726                           ; BSR set to: 15
  1727                           ;ecan.c: 299: returnValue = 1;
  1728  0002AE  0E01               	movlw	1
  1729  0002B0  6E24               	movwf	CAN_receive@returnValue,c
  1730  0002B2                     l1742:
  1731                           
  1732                           ;ecan.c: 300: }
  1733                           ;ecan.c: 303: PIR5bits.RXB1IF = 0;
  1734  0002B2  9277               	bcf	3959,1,c	;volatile
  1735                           
  1736                           ;ecan.c: 304: }
  1737                           ;ecan.c: 307: return (returnValue);
  1738  0002B4  5024               	movf	CAN_receive@returnValue,w,c
  1739  0002B6  0012               	return	
  1740  0002B8                     __end_of_CAN_receive:
  1741                           	opt stack 0
  1742                           tblptru	equ	0xFF8
  1743                           intcon	equ	0xFF2
  1744                           wreg	equ	0xFE8
  1745                           indf2	equ	0xFDF
  1746                           postinc2	equ	0xFDE
  1747                           fsr2h	equ	0xFDA
  1748                           fsr2l	equ	0xFD9
  1749                           status	equ	0xFD8
  1750                           
  1751 ;; *************** function _convertReg2StandardCANid *****************
  1752 ;; Defined at:
  1753 ;;		line 388 in file "mcc_generated_files/ecan.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  tempRXBn_SID    1    wreg     unsigned char 
  1756 ;;  tempRXBn_SID    1   14[COMRAM] unsigned char 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  tempRXBn_SID    1   20[COMRAM] unsigned char 
  1759 ;;  ConvertedID     4   25[COMRAM] unsigned long 
  1760 ;;  returnValue     4   21[COMRAM] unsigned long 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  4   14[COMRAM] unsigned long 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1770 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1771 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1773 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1774 ;;Total ram usage:       15 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    4
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_CAN_receive
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text12
  1785  000594                     __ptext12:
  1786                           	opt stack 0
  1787  000594                     _convertReg2StandardCANid:
  1788                           	opt stack 25
  1789                           
  1790                           ;incstack = 0
  1791                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  1792  000594  6E15               	movwf	convertReg2StandardCANid@tempRXBn_SIDH,c
  1793                           
  1794                           ;ecan.c: 389: unsigned long returnValue = 0;
  1795  000596  0E00               	movlw	0
  1796  000598  6E16               	movwf	convertReg2StandardCANid@returnValue,c
  1797  00059A  0E00               	movlw	0
  1798  00059C  6E17               	movwf	convertReg2StandardCANid@returnValue+1,c
  1799  00059E  0E00               	movlw	0
  1800  0005A0  6E18               	movwf	convertReg2StandardCANid@returnValue+2,c
  1801  0005A2  0E00               	movlw	0
  1802  0005A4  6E19               	movwf	convertReg2StandardCANid@returnValue+3,c
  1803                           
  1804                           ;ecan.c: 390: unsigned long ConvertedID;
  1805                           ;ecan.c: 394: ConvertedID = (tempRXBn_SIDH << 3);
  1806  0005A6  5015               	movf	convertReg2StandardCANid@tempRXBn_SIDH,w,c
  1807  0005A8  6E13               	movwf	??_convertReg2StandardCANid& (0+255),c
  1808  0005AA  6A14               	clrf	(??_convertReg2StandardCANid+1)& (0+255),c
  1809  0005AC  90D8               	bcf	status,0,c
  1810  0005AE  3613               	rlcf	??_convertReg2StandardCANid,f,c
  1811  0005B0  3614               	rlcf	??_convertReg2StandardCANid+1,f,c
  1812  0005B2  90D8               	bcf	status,0,c
  1813  0005B4  3613               	rlcf	??_convertReg2StandardCANid,f,c
  1814  0005B6  3614               	rlcf	??_convertReg2StandardCANid+1,f,c
  1815  0005B8  90D8               	bcf	status,0,c
  1816  0005BA  3613               	rlcf	??_convertReg2StandardCANid,f,c
  1817  0005BC  3614               	rlcf	??_convertReg2StandardCANid+1,f,c
  1818  0005BE  C013  F01A         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  1819  0005C2  C014  F01B         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  1820  0005C6  0E00               	movlw	0
  1821  0005C8  BE1B               	btfsc	convertReg2StandardCANid@ConvertedID+1,7,c
  1822  0005CA  0EFF               	movlw	-1
  1823  0005CC  6E1C               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  1824  0005CE  6E1D               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  1825                           
  1826                           ;ecan.c: 395: ConvertedID = ConvertedID + (tempRXBn_SIDL >> 5);
  1827  0005D0  C00F  F013         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  1828  0005D4  0E05               	movlw	5
  1829  0005D6  6E14               	movwf	(??_convertReg2StandardCANid+1)& (0+255),c
  1830  0005D8                     u365:
  1831  0005D8  90D8               	bcf	status,0,c
  1832  0005DA  3213               	rrcf	??_convertReg2StandardCANid,f,c
  1833  0005DC  2E14               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,c
  1834  0005DE  D7FC               	goto	u365
  1835  0005E0  5013               	movf	??_convertReg2StandardCANid,w,c
  1836  0005E2  241A               	addwf	convertReg2StandardCANid@ConvertedID,w,c
  1837  0005E4  6E1A               	movwf	convertReg2StandardCANid@ConvertedID,c
  1838  0005E6  0E00               	movlw	0
  1839  0005E8  201B               	addwfc	convertReg2StandardCANid@ConvertedID+1,w,c
  1840  0005EA  6E1B               	movwf	convertReg2StandardCANid@ConvertedID+1,c
  1841  0005EC  0E00               	movlw	0
  1842  0005EE  201C               	addwfc	convertReg2StandardCANid@ConvertedID+2,w,c
  1843  0005F0  6E1C               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  1844  0005F2  0E00               	movlw	0
  1845  0005F4  201D               	addwfc	convertReg2StandardCANid@ConvertedID+3,w,c
  1846  0005F6  6E1D               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  1847                           
  1848                           ;ecan.c: 396: returnValue = ConvertedID;
  1849  0005F8  C01A  F016         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  1850  0005FC  C01B  F017         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  1851  000600  C01C  F018         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  1852  000604  C01D  F019         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  1853                           
  1854                           ;ecan.c: 397: return (returnValue);
  1855  000608  C016  F00F         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  1856  00060C  C017  F010         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  1857  000610  C018  F011         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  1858  000614  C019  F012         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  1859  000618  0012               	return	
  1860  00061A                     __end_of_convertReg2StandardCANid:
  1861                           	opt stack 0
  1862                           tblptru	equ	0xFF8
  1863                           intcon	equ	0xFF2
  1864                           wreg	equ	0xFE8
  1865                           indf2	equ	0xFDF
  1866                           postinc2	equ	0xFDE
  1867                           fsr2h	equ	0xFDA
  1868                           fsr2l	equ	0xFD9
  1869                           status	equ	0xFD8
  1870                           
  1871 ;; *************** function _convertReg2ExtendedCANid *****************
  1872 ;; Defined at:
  1873 ;;		line 368 in file "mcc_generated_files/ecan.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;  tempRXBn_EID    1    wreg     unsigned char 
  1876 ;;  tempRXBn_EID    1   14[COMRAM] unsigned char 
  1877 ;;  tempRXBn_SID    1   15[COMRAM] unsigned char 
  1878 ;;  tempRXBn_SID    1   16[COMRAM] unsigned char 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  tempRXBn_EID    1   22[COMRAM] unsigned char 
  1881 ;;  ConvertedID     4   29[COMRAM] unsigned long 
  1882 ;;  returnValue     4   23[COMRAM] unsigned long 
  1883 ;;  CAN_standard    1   28[COMRAM] unsigned char 
  1884 ;;  CAN_standard    1   27[COMRAM] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  4   14[COMRAM] unsigned long 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1894 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1895 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1896 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1897 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1898 ;;Total ram usage:       19 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    4
  1901 ;; This function calls:
  1902 ;;		Nothing
  1903 ;; This function is called by:
  1904 ;;		_CAN_receive
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text13
  1909  0002B8                     __ptext13:
  1910                           	opt stack 0
  1911  0002B8                     _convertReg2ExtendedCANid:
  1912                           	opt stack 25
  1913                           
  1914                           ;incstack = 0
  1915                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  1916  0002B8  6E17               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH,c
  1917                           
  1918                           ;ecan.c: 369: unsigned long returnValue = 0;
  1919  0002BA  0E00               	movlw	0
  1920  0002BC  6E18               	movwf	convertReg2ExtendedCANid@returnValue,c
  1921  0002BE  0E00               	movlw	0
  1922  0002C0  6E19               	movwf	convertReg2ExtendedCANid@returnValue+1,c
  1923  0002C2  0E00               	movlw	0
  1924  0002C4  6E1A               	movwf	convertReg2ExtendedCANid@returnValue+2,c
  1925  0002C6  0E00               	movlw	0
  1926  0002C8  6E1B               	movwf	convertReg2ExtendedCANid@returnValue+3,c
  1927                           
  1928                           ;ecan.c: 370: unsigned long ConvertedID = 0;
  1929  0002CA  0E00               	movlw	0
  1930  0002CC  6E1E               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  1931  0002CE  0E00               	movlw	0
  1932  0002D0  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  1933  0002D2  0E00               	movlw	0
  1934  0002D4  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  1935  0002D6  0E00               	movlw	0
  1936  0002D8  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  1937                           
  1938                           ;ecan.c: 371: unsigned char CAN_standardLo_ID_lo2bits;
  1939                           ;ecan.c: 372: unsigned char CAN_standardLo_ID_hi3bits;
  1940                           ;ecan.c: 374: CAN_standardLo_ID_lo2bits = (tempRXBn_SIDL & 0x03);
  1941  0002DA  5011               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  1942  0002DC  0B03               	andlw	3
  1943  0002DE  6E1C               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,c
  1944                           
  1945                           ;ecan.c: 375: CAN_standardLo_ID_hi3bits = (tempRXBn_SIDL >> 5);
  1946  0002E0  3811               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  1947  0002E2  42E8               	rrncf	wreg,f,c
  1948  0002E4  0B07               	andlw	7
  1949  0002E6  6E1D               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,c
  1950                           
  1951                           ;ecan.c: 376: ConvertedID = (tempRXBn_SIDH << 3);
  1952  0002E8  5010               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH,w,c
  1953  0002EA  6E13               	movwf	??_convertReg2ExtendedCANid& (0+255),c
  1954  0002EC  6A14               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),c
  1955  0002EE  90D8               	bcf	status,0,c
  1956  0002F0  3613               	rlcf	??_convertReg2ExtendedCANid,f,c
  1957  0002F2  3614               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  1958  0002F4  90D8               	bcf	status,0,c
  1959  0002F6  3613               	rlcf	??_convertReg2ExtendedCANid,f,c
  1960  0002F8  3614               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  1961  0002FA  90D8               	bcf	status,0,c
  1962  0002FC  3613               	rlcf	??_convertReg2ExtendedCANid,f,c
  1963  0002FE  3614               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  1964  000300  C013  F01E         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  1965  000304  C014  F01F         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  1966  000308  0E00               	movlw	0
  1967  00030A  BE1F               	btfsc	convertReg2ExtendedCANid@ConvertedID+1,7,c
  1968  00030C  0EFF               	movlw	-1
  1969  00030E  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  1970  000310  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  1971                           
  1972                           ;ecan.c: 377: ConvertedID = ConvertedID + CAN_standardLo_ID_hi3bits;
  1973  000312  501D               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,w,c
  1974  000314  241E               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  1975  000316  6E1E               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  1976  000318  0E00               	movlw	0
  1977  00031A  201F               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  1978  00031C  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  1979  00031E  0E00               	movlw	0
  1980  000320  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  1981  000322  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  1982  000324  0E00               	movlw	0
  1983  000326  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  1984  000328  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  1985                           
  1986                           ;ecan.c: 378: ConvertedID = (ConvertedID << 2);
  1987  00032A  C01E  F013         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  1988  00032E  C01F  F014         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  1989  000332  C020  F015         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  1990  000336  C021  F016         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  1991  00033A  0E02               	movlw	2
  1992  00033C                     u355:
  1993  00033C  90D8               	bcf	status,0,c
  1994  00033E  3613               	rlcf	??_convertReg2ExtendedCANid,f,c
  1995  000340  3614               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  1996  000342  3615               	rlcf	??_convertReg2ExtendedCANid+2,f,c
  1997  000344  3616               	rlcf	??_convertReg2ExtendedCANid+3,f,c
  1998  000346  2EE8               	decfsz	wreg,f,c
  1999  000348  D7F9               	goto	u355
  2000  00034A  C013  F01E         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2001  00034E  C014  F01F         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2002  000352  C015  F020         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2003  000356  C016  F021         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2004                           
  2005                           ;ecan.c: 379: ConvertedID = ConvertedID + CAN_standardLo_ID_lo2bits;
  2006  00035A  501C               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,w,c
  2007  00035C  241E               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2008  00035E  6E1E               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2009  000360  0E00               	movlw	0
  2010  000362  201F               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2011  000364  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2012  000366  0E00               	movlw	0
  2013  000368  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2014  00036A  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2015  00036C  0E00               	movlw	0
  2016  00036E  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2017  000370  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2018                           
  2019                           ;ecan.c: 380: ConvertedID = (ConvertedID << 8);
  2020  000372  C01E  F014         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  2021  000376  C01F  F015         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  2022  00037A  C020  F016         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  2023  00037E  6A13               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  2024  000380  C013  F01E         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2025  000384  C014  F01F         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2026  000388  C015  F020         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2027  00038C  C016  F021         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2028                           
  2029                           ;ecan.c: 381: ConvertedID = ConvertedID + tempRXBn_EIDH;
  2030  000390  5017               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH,w,c
  2031  000392  241E               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2032  000394  6E1E               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2033  000396  0E00               	movlw	0
  2034  000398  201F               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2035  00039A  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2036  00039C  0E00               	movlw	0
  2037  00039E  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2038  0003A0  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2039  0003A2  0E00               	movlw	0
  2040  0003A4  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2041  0003A6  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2042                           
  2043                           ;ecan.c: 382: ConvertedID = (ConvertedID << 8);
  2044  0003A8  C01E  F014         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  2045  0003AC  C01F  F015         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  2046  0003B0  C020  F016         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  2047  0003B4  6A13               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  2048  0003B6  C013  F01E         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2049  0003BA  C014  F01F         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2050  0003BE  C015  F020         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2051  0003C2  C016  F021         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2052                           
  2053                           ;ecan.c: 383: ConvertedID = ConvertedID + tempRXBn_EIDL;
  2054  0003C6  500F               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL,w,c
  2055  0003C8  241E               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2056  0003CA  6E1E               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2057  0003CC  0E00               	movlw	0
  2058  0003CE  201F               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2059  0003D0  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2060  0003D2  0E00               	movlw	0
  2061  0003D4  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2062  0003D6  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2063  0003D8  0E00               	movlw	0
  2064  0003DA  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2065  0003DC  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2066                           
  2067                           ;ecan.c: 384: returnValue = ConvertedID;
  2068  0003DE  C01E  F018         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  2069  0003E2  C01F  F019         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  2070  0003E6  C020  F01A         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  2071  0003EA  C021  F01B         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  2072                           
  2073                           ;ecan.c: 385: return (returnValue);
  2074  0003EE  C018  F00F         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  2075  0003F2  C019  F010         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  2076  0003F6  C01A  F011         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  2077  0003FA  C01B  F012         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  2078  0003FE  0012               	return	
  2079  000400                     __end_of_convertReg2ExtendedCANid:
  2080                           	opt stack 0
  2081                           tblptru	equ	0xFF8
  2082                           intcon	equ	0xFF2
  2083                           wreg	equ	0xFE8
  2084                           indf2	equ	0xFDF
  2085                           postinc2	equ	0xFDE
  2086                           fsr2h	equ	0xFDA
  2087                           fsr2l	equ	0xFD9
  2088                           status	equ	0xFD8
  2089                           
  2090 ;; *************** function _INTERRUPT_InterruptManager *****************
  2091 ;; Defined at:
  2092 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;		None
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2108 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2109 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2110 ;;Total ram usage:       14 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    3
  2113 ;; This function calls:
  2114 ;;		_TMR1_ISR
  2115 ;; This function is called by:
  2116 ;;		Interrupt level 2
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	intcode
  2121  000008                     __pintcode:
  2122                           	opt stack 0
  2123  000008                     _INTERRUPT_InterruptManager:
  2124                           	opt stack 24
  2125                           
  2126                           ;incstack = 0
  2127  000008  823C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2128  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  2129  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2130  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2131  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2132  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2133  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2134  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2135  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2136  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2137  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2138  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2139  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2140  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2141  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2142                           
  2143                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bits.TM
      +                          R1IF == 1)
  2144  000042  BCF2               	btfsc	intcon,6,c	;volatile
  2145  000044  A09D               	btfss	3997,0,c	;volatile
  2146  000046  D003               	goto	i2l479
  2147  000048  B09E               	btfsc	3998,0,c	;volatile
  2148                           
  2149                           ;interrupt_manager.c: 61: {
  2150                           ;interrupt_manager.c: 62: TMR1_ISR();
  2151  00004A  EC4E  F003         	call	_TMR1_ISR	;wreg free
  2152  00004E                     i2l479:
  2153  00004E  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2154  000052  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2155  000056  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2156  00005A  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2157  00005E  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2158  000062  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2159  000066  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2160  00006A  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2161  00006E  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2162  000072  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2163  000076  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2164  00007A  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2165  00007E  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2166  000082  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2167  000086  923C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2168  000088  0011               	retfie		f
  2169  00008A                     __end_of_INTERRUPT_InterruptManager:
  2170                           	opt stack 0
  2171                           pclatu	equ	0xFFB
  2172                           pclath	equ	0xFFA
  2173                           tblptru	equ	0xFF8
  2174                           tblptrh	equ	0xFF7
  2175                           tblptrl	equ	0xFF6
  2176                           tablat	equ	0xFF5
  2177                           prodh	equ	0xFF4
  2178                           prodl	equ	0xFF3
  2179                           intcon	equ	0xFF2
  2180                           fsr0h	equ	0xFEA
  2181                           fsr0l	equ	0xFE9
  2182                           wreg	equ	0xFE8
  2183                           fsr1h	equ	0xFE2
  2184                           fsr1l	equ	0xFE1
  2185                           indf2	equ	0xFDF
  2186                           postinc2	equ	0xFDE
  2187                           fsr2h	equ	0xFDA
  2188                           fsr2l	equ	0xFD9
  2189                           status	equ	0xFD8
  2190                           
  2191 ;; *************** function _TMR1_ISR *****************
  2192 ;; Defined at:
  2193 ;;		line 160 in file "mcc_generated_files/tmr1.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2211 ;;Total ram usage:        0 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; Hardware stack levels required when called:    2
  2214 ;; This function calls:
  2215 ;;		_TMR1_CallBack
  2216 ;; This function is called by:
  2217 ;;		_INTERRUPT_InterruptManager
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text15
  2222  00069C                     __ptext15:
  2223                           	opt stack 0
  2224  00069C                     _TMR1_ISR:
  2225                           	opt stack 24
  2226                           
  2227                           ;tmr1.c: 162: static volatile unsigned int CountCallBack = 0;
  2228                           ;tmr1.c: 165: PIR1bits.TMR1IF = 0;
  2229                           
  2230                           ;incstack = 0
  2231  00069C  909E               	bcf	3998,0,c	;volatile
  2232                           
  2233                           ;tmr1.c: 167: TMR1H = (timer1ReloadVal >> 8);
  2234  00069E  5038               	movf	_timer1ReloadVal+1,w,c	;volatile
  2235  0006A0  6ECF               	movwf	4047,c	;volatile
  2236                           
  2237                           ;tmr1.c: 168: TMR1L = timer1ReloadVal;
  2238  0006A2  C037  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  2239                           
  2240                           ;tmr1.c: 171: if (++CountCallBack >= 2)
  2241  0006A6  4A39               	infsnz	TMR1_ISR@CountCallBack,f,c	;volatile
  2242  0006A8  2A3A               	incf	TMR1_ISR@CountCallBack+1,f,c	;volatile
  2243  0006AA  503A               	movf	TMR1_ISR@CountCallBack+1,w,c	;volatile
  2244  0006AC  E104               	bnz	i2u12_40
  2245  0006AE  0E02               	movlw	2
  2246  0006B0  5C39               	subwf	TMR1_ISR@CountCallBack,w,c	;volatile
  2247  0006B2  A0D8               	btfss	status,0,c
  2248  0006B4  0012               	return	
  2249  0006B6                     i2u12_40:
  2250                           
  2251                           ;tmr1.c: 172: {
  2252                           ;tmr1.c: 174: TMR1_CallBack();
  2253  0006B6  EC62  F003         	call	_TMR1_CallBack	;wreg free
  2254                           
  2255                           ;tmr1.c: 177: CountCallBack = 0;
  2256  0006BA  0E00               	movlw	0
  2257  0006BC  6E3A               	movwf	TMR1_ISR@CountCallBack+1,c	;volatile
  2258  0006BE  0E00               	movlw	0
  2259  0006C0  6E39               	movwf	TMR1_ISR@CountCallBack,c	;volatile
  2260  0006C2  0012               	return	
  2261  0006C4                     __end_of_TMR1_ISR:
  2262                           	opt stack 0
  2263                           pclatu	equ	0xFFB
  2264                           pclath	equ	0xFFA
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           prodh	equ	0xFF4
  2270                           prodl	equ	0xFF3
  2271                           intcon	equ	0xFF2
  2272                           fsr0h	equ	0xFEA
  2273                           fsr0l	equ	0xFE9
  2274                           wreg	equ	0xFE8
  2275                           fsr1h	equ	0xFE2
  2276                           fsr1l	equ	0xFE1
  2277                           indf2	equ	0xFDF
  2278                           postinc2	equ	0xFDE
  2279                           fsr2h	equ	0xFDA
  2280                           fsr2l	equ	0xFD9
  2281                           status	equ	0xFD8
  2282                           
  2283 ;; *************** function _TMR1_CallBack *****************
  2284 ;; Defined at:
  2285 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;		None
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;		None
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2303 ;;Total ram usage:        0 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    1
  2306 ;; This function calls:
  2307 ;;		Absolute function
  2308 ;;		_CAN_timeout
  2309 ;;		_TMR1_DefaultInterruptHandler
  2310 ;; This function is called by:
  2311 ;;		_TMR1_ISR
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text16
  2316  0006C4                     __ptext16:
  2317                           	opt stack 0
  2318  0006C4                     _TMR1_CallBack:
  2319                           	opt stack 24
  2320                           
  2321                           ;tmr1.c: 184: if(TMR1_InterruptHandler)
  2322                           
  2323                           ;incstack = 0
  2324  0006C4  5035               	movf	_TMR1_InterruptHandler,w,c
  2325  0006C6  1036               	iorwf	_TMR1_InterruptHandler+1,w,c
  2326  0006C8  B4D8               	btfsc	status,2,c
  2327  0006CA  0012               	return	
  2328                           
  2329                           ;tmr1.c: 185: {
  2330                           ;tmr1.c: 186: TMR1_InterruptHandler();
  2331  0006CC  D801               	call	i2u6_48
  2332  0006CE  0012               	return	
  2333  0006D0                     i2u6_48:
  2334  0006D0  0005               	push	
  2335  0006D2  6EFA               	movwf	pclath,c
  2336  0006D4  5035               	movf	_TMR1_InterruptHandler,w,c
  2337  0006D6  6EFD               	movwf	tosl,c
  2338  0006D8  5036               	movf	_TMR1_InterruptHandler+1,w,c
  2339  0006DA  6EFE               	movwf	tosh,c
  2340  0006DC  50F8               	movf	tblptru,w,c
  2341  0006DE  6EFF               	movwf	tosu,c
  2342  0006E0  50FA               	movf	pclath,w,c
  2343  0006E2  0012               	return		;indir
  2344  0006E4                     __end_of_TMR1_CallBack:
  2345                           	opt stack 0
  2346                           tosu	equ	0xFFF
  2347                           tosh	equ	0xFFE
  2348                           tosl	equ	0xFFD
  2349                           pclatu	equ	0xFFB
  2350                           pclath	equ	0xFFA
  2351                           tblptru	equ	0xFF8
  2352                           tblptrh	equ	0xFF7
  2353                           tblptrl	equ	0xFF6
  2354                           tablat	equ	0xFF5
  2355                           prodh	equ	0xFF4
  2356                           prodl	equ	0xFF3
  2357                           intcon	equ	0xFF2
  2358                           fsr0h	equ	0xFEA
  2359                           fsr0l	equ	0xFE9
  2360                           wreg	equ	0xFE8
  2361                           fsr1h	equ	0xFE2
  2362                           fsr1l	equ	0xFE1
  2363                           indf2	equ	0xFDF
  2364                           postinc2	equ	0xFDE
  2365                           fsr2h	equ	0xFDA
  2366                           fsr2l	equ	0xFD9
  2367                           status	equ	0xFD8
  2368                           
  2369 ;; *************** function _CAN_timeout *****************
  2370 ;; Defined at:
  2371 ;;		line 6 in file "main.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;		None
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;		None
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  1    wreg      void 
  2378 ;; Registers used:
  2379 ;;		wreg, status,2
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2389 ;;Total ram usage:        0 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_main
  2395 ;;		_TMR1_CallBack
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text17
  2400  000758                     __ptext17:
  2401                           	opt stack 0
  2402  000758                     _CAN_timeout:
  2403                           	opt stack 24
  2404                           
  2405                           ;incstack = 0
  2406  000758  0012               	return	
  2407  00075A                     __end_of_CAN_timeout:
  2408                           	opt stack 0
  2409                           tosu	equ	0xFFF
  2410                           tosh	equ	0xFFE
  2411                           tosl	equ	0xFFD
  2412                           pclatu	equ	0xFFB
  2413                           pclath	equ	0xFFA
  2414                           tblptru	equ	0xFF8
  2415                           tblptrh	equ	0xFF7
  2416                           tblptrl	equ	0xFF6
  2417                           tablat	equ	0xFF5
  2418                           prodh	equ	0xFF4
  2419                           prodl	equ	0xFF3
  2420                           intcon	equ	0xFF2
  2421                           fsr0h	equ	0xFEA
  2422                           fsr0l	equ	0xFE9
  2423                           wreg	equ	0xFE8
  2424                           fsr1h	equ	0xFE2
  2425                           fsr1l	equ	0xFE1
  2426                           indf2	equ	0xFDF
  2427                           postinc2	equ	0xFDE
  2428                           fsr2h	equ	0xFDA
  2429                           fsr2l	equ	0xFD9
  2430                           status	equ	0xFD8
  2431                           
  2432 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2433 ;; Defined at:
  2434 ;;		line 194 in file "mcc_generated_files/tmr1.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;		None
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		None
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2452 ;;Total ram usage:        0 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; This function calls:
  2455 ;;		Nothing
  2456 ;; This function is called by:
  2457 ;;		_TMR1_Initialize
  2458 ;;		_TMR1_CallBack
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text18
  2463  00075A                     __ptext18:
  2464                           	opt stack 0
  2465  00075A                     _TMR1_DefaultInterruptHandler:
  2466                           	opt stack 24
  2467                           
  2468                           ;incstack = 0
  2469  00075A  0012               	return		;funcret
  2470  00075C                     __end_of_TMR1_DefaultInterruptHandler:
  2471                           	opt stack 0
  2472  0000                     tosu	equ	0xFFF
  2473                           tosh	equ	0xFFE
  2474                           tosl	equ	0xFFD
  2475                           pclatu	equ	0xFFB
  2476                           pclath	equ	0xFFA
  2477                           tblptru	equ	0xFF8
  2478                           tblptrh	equ	0xFF7
  2479                           tblptrl	equ	0xFF6
  2480                           tablat	equ	0xFF5
  2481                           prodh	equ	0xFF4
  2482                           prodl	equ	0xFF3
  2483                           intcon	equ	0xFF2
  2484                           fsr0h	equ	0xFEA
  2485                           fsr0l	equ	0xFE9
  2486                           wreg	equ	0xFE8
  2487                           fsr1h	equ	0xFE2
  2488                           fsr1l	equ	0xFE1
  2489                           indf2	equ	0xFDF
  2490                           postinc2	equ	0xFDE
  2491                           fsr2h	equ	0xFDA
  2492                           fsr2l	equ	0xFD9
  2493                           status	equ	0xFD8
  2494                           tosu	equ	0xFFF
  2495                           tosh	equ	0xFFE
  2496                           tosl	equ	0xFFD
  2497                           pclatu	equ	0xFFB
  2498                           pclath	equ	0xFFA
  2499                           tblptru	equ	0xFF8
  2500                           tblptrh	equ	0xFF7
  2501                           tblptrl	equ	0xFF6
  2502                           tablat	equ	0xFF5
  2503                           prodh	equ	0xFF4
  2504                           prodl	equ	0xFF3
  2505                           intcon	equ	0xFF2
  2506                           fsr0h	equ	0xFEA
  2507                           fsr0l	equ	0xFE9
  2508                           wreg	equ	0xFE8
  2509                           fsr1h	equ	0xFE2
  2510                           fsr1l	equ	0xFE1
  2511                           indf2	equ	0xFDF
  2512                           postinc2	equ	0xFDE
  2513                           fsr2h	equ	0xFDA
  2514                           fsr2l	equ	0xFD9
  2515                           status	equ	0xFD8
  2516                           
  2517                           	psect	text19
  2518  000000                     __ptext19:
  2519                           	opt stack 0
  2520                           tosu	equ	0xFFF
  2521                           tosh	equ	0xFFE
  2522                           tosl	equ	0xFFD
  2523                           pclatu	equ	0xFFB
  2524                           pclath	equ	0xFFA
  2525                           tblptru	equ	0xFF8
  2526                           tblptrh	equ	0xFF7
  2527                           tblptrl	equ	0xFF6
  2528                           tablat	equ	0xFF5
  2529                           prodh	equ	0xFF4
  2530                           prodl	equ	0xFF3
  2531                           intcon	equ	0xFF2
  2532                           fsr0h	equ	0xFEA
  2533                           fsr0l	equ	0xFE9
  2534                           wreg	equ	0xFE8
  2535                           fsr1h	equ	0xFE2
  2536                           fsr1l	equ	0xFE1
  2537                           indf2	equ	0xFDF
  2538                           postinc2	equ	0xFDE
  2539                           fsr2h	equ	0xFDA
  2540                           fsr2l	equ	0xFD9
  2541                           status	equ	0xFD8
  2542                           
  2543                           	psect	rparam
  2544  0000                     tosu	equ	0xFFF
  2545                           tosh	equ	0xFFE
  2546                           tosl	equ	0xFFD
  2547                           pclatu	equ	0xFFB
  2548                           pclath	equ	0xFFA
  2549                           tblptru	equ	0xFF8
  2550                           tblptrh	equ	0xFF7
  2551                           tblptrl	equ	0xFF6
  2552                           tablat	equ	0xFF5
  2553                           prodh	equ	0xFF4
  2554                           prodl	equ	0xFF3
  2555                           intcon	equ	0xFF2
  2556                           fsr0h	equ	0xFEA
  2557                           fsr0l	equ	0xFE9
  2558                           wreg	equ	0xFE8
  2559                           fsr1h	equ	0xFE2
  2560                           fsr1l	equ	0xFE1
  2561                           indf2	equ	0xFDF
  2562                           postinc2	equ	0xFDE
  2563                           fsr2h	equ	0xFDA
  2564                           fsr2l	equ	0xFD9
  2565                           status	equ	0xFD8
  2566                           
  2567                           	psect	temp
  2568  00003C                     btemp:
  2569                           	opt stack 0
  2570  00003C                     	ds	1
  2571  0000                     int$flags	set	btemp
  2572                           tosu	equ	0xFFF
  2573                           tosh	equ	0xFFE
  2574                           tosl	equ	0xFFD
  2575                           pclatu	equ	0xFFB
  2576                           pclath	equ	0xFFA
  2577                           tblptru	equ	0xFF8
  2578                           tblptrh	equ	0xFF7
  2579                           tblptrl	equ	0xFF6
  2580                           tablat	equ	0xFF5
  2581                           prodh	equ	0xFF4
  2582                           prodl	equ	0xFF3
  2583                           intcon	equ	0xFF2
  2584                           fsr0h	equ	0xFEA
  2585                           fsr0l	equ	0xFE9
  2586                           wreg	equ	0xFE8
  2587                           fsr1h	equ	0xFE2
  2588                           fsr1l	equ	0xFE1
  2589                           indf2	equ	0xFDF
  2590                           postinc2	equ	0xFDE
  2591                           fsr2h	equ	0xFDA
  2592                           fsr2l	equ	0xFD9
  2593                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     52      59
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CAN_timeout(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CAN_timeout(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> main@canMessage(COMRAM[14]), 


Critical Paths under _main in COMRAM

    _main->_CAN_receive
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    2266
                                             36 COMRAM    16    16      0
                        _CAN_receive
                      _EUSART1_Write
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                    _ECAN_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     174
                                             16 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    1760
                                             33 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     266
                                             14 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4     821
                                             14 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
                        _CAN_timeout *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CAN_timeout                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _EUSART1_Write
   _SYSTEM_Initialize
     _ECAN_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _CAN_timeout *
       _TMR1_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     34      3B       1       62.8%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3B       6        0.0%
DATA                 0      0      3B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Jan 11 19:43:47 2018

                         __size_of_ECAN_Initialize 00EE                                        __CFG_BORV$3 000000  
                                     __CFG_CP0$OFF 000000                                       __CFG_CP1$OFF 000000  
                                     __CFG_CP2$OFF 000000                                       __CFG_CP3$OFF 000000  
                                              l320 019C                                                l513 0580  
                                              l386 073C                                       __CFG_CPB$OFF 000000  
                                     __CFG_CPD$OFF 000000                                                u355 033C  
                                              u365 05D8                                                u457 0514  
                                  _timer1ReloadVal 0037                                                tosl 000FFD  
                                              wreg 000FE8                         ??_convertReg2StandardCANid 0013  
                                             l1186 0404                                               l1198 04E0  
                                             l1720 021A                                               l1740 02AE  
                                             l1716 01E6                                               l1742 02B2  
                                             l1684 00D6                                               l1688 0108  
                                             l1778 0548                                               l1788 058A  
                                             _LATA 000F89                                               _LATB 000F8A  
                                             _LATC 000F8B                                               _LATD 000F8C  
                                             _LATE 000F8D                                               _LATF 000F8E  
                                             _LATG 000F8F                                               _WPUB 000F5B  
                                    _EUSART1_Write 073A                                               _main 04EE  
                                             fsr0h 000FEA                                               fsr1h 000FE2  
                                             fsr2h 000FDA                                               fsr0l 000FE9  
                                             indf2 000FDF                                               fsr1l 000FE1  
                                             fsr2l 000FD9                                               btemp 003C  
                                             prodh 000FF4                                               prodl 000FF3  
                                             start 008A                                      __CFG_IESO$OFF 000000  
                                    __CFG_FOSC$HS2 000000                         ??_TMR1_SetInterruptHandler 0011  
                                    __CFG_MCLRE$ON 000000                                       ___param_bank 000000  
                   __size_of_OSCILLATOR_Initialize 0012                      __end_of_OSCILLATOR_Initialize 073A  
                                            ?_main 0001                                    _TMR1_StartTimer 0750  
                                            _T1CON 000FCD                                              i2l479 004E  
                                            _TMR1H 000FCF                                              _TMR1L 000FCE  
                                            _TRISA 000F92                                              _TRISB 000F93  
                                            _TRISC 000F94                                              _TRISD 000F95  
                                            _TRISE 000F96                                              _TRISF 000F97  
                                            _TRISG 000F98                                      __CFG_WRT0$OFF 000000  
                                    __CFG_WRT1$OFF 000000                                      __CFG_WRT2$OFF 000000  
                                    __CFG_WRT3$OFF 000000                                     __CFG_EBTR0$OFF 000000  
                                   __CFG_FCMEN$OFF 000000                                     __CFG_EBTR1$OFF 000000  
                            CAN_receive@tempCanMsg 0022                                     __CFG_EBTR2$OFF 000000  
                                   __CFG_EBTR3$OFF 000000                                   __end_of_TMR1_ISR 06C4  
                                    __CFG_WRTB$OFF 000000                                      __CFG_WRTC$OFF 000000  
                                    __CFG_WRTD$OFF 000000                                     __CFG_EBTRB$OFF 000000  
                                   ?_EUSART1_Write 0001                            __end_of_TMR1_Initialize 069C  
                                            pclath 000FFA                                              tablat 000FF5  
              convertReg2ExtendedCANid@ConvertedID 001E                                              status 000FD8  
                                  __initialization 0714                               __size_of_CAN_receive 022A  
                       __end_of_EUSART1_Initialize 0714                                       __end_of_main 0594  
                             __size_of_CAN_timeout 0002                        ?_INTERRUPT_InterruptManager 0001  
                                           ??_main 0025                                      __activetblptr 000002  
                                   __CFG_RETEN$OFF 000000                                  ??_ECAN_Initialize 000F  
                                           _CANCON 000F6F                                             _ANCON0 000F5D  
                                           _ANCON1 000F5C                                             _CAN_ok 003B  
                                           _T1GCON 000FAA                                    __CFG_BBSIZ$BB2K 000000  
                                   __CFG_WDTEN$OFF 000000                                             _RCREG1 000FAE  
                                           _RCSTA1 000FAB                                             _OSCCON 000FD3  
                                           _RXB0D0 000F66                                             _RXB0D1 000F67  
                                           _RXB0D2 000F68                                             _RXB0D3 000F69  
                                           _RXB0D4 000F6A                                             _RXB1D0 000F36  
                                           _RXB0D5 000F6B                                             _RXB1D1 000F37  
                                           _RXB0D6 000F6C                                             _RXB1D2 000F38  
                                           _RXB0D7 000F6D                                             _RXB1D3 000F39  
                                           _RXB1D4 000F3A                                             _RXB1D5 000F3B  
                                           _RXB1D6 000F3C                                             _RXB1D7 000F3D  
                                           _SPBRG1 000FAF                                             _TXB0D0 000F26  
                                           _TXB0D1 000F27                                             _TXB0D2 000F28  
                                           _TXB0D3 000F29                                             _TXB0D4 000F2A  
                                           _TXB1D0 000F16                                             _TXB0D5 000F2B  
                                           _TXB1D1 000F17                                             _TXB0D6 000F2C  
                                           _TXB1D2 000F18                                             _TXB0D7 000F2D  
                                           _TXB1D3 000F19                                             _TXB1D4 000F1A  
                                           _TXB2D0 000F06                                             _TXB1D5 000F1B  
                                           _TXB2D1 000F07                                             _TXB1D6 000F1C  
                                           _TXB2D2 000F08                                             _TXB1D7 000F1D  
                                           _TXB2D3 000F09                                             _TXB2D4 000F0A  
                                           _TXB2D5 000F0B                                             _TXB2D6 000F0C  
                                           _TXB2D7 000F0D                                             i2u6_48 06D0  
                                           _TXREG1 000FAD                                             _TXSTA1 000FAC  
                                   __CFG_XINST$OFF 000000               __end_of_TMR1_DefaultInterruptHandler 075C  
            __size_of_TMR1_DefaultInterruptHandler 0002                       _TMR1_DefaultInterruptHandler 075A  
                          __end_of_TMR1_StartTimer 0754                                     __CFG_STVREN$ON 000000  
                 __end_of_convertReg2StandardCANid 061A                                             tblptrh 000FF7  
                                           tblptrl 000FF6                                             tblptru 000FF8  
                                  ??_EUSART1_Write 000F           TMR1_SetInterruptHandler@InterruptHandler 000F  
                    __size_of_INTERRUPT_Initialize 0004                              __end_of_TMR1_CallBack 06E4  
                                 ?_TMR1_Initialize 0001                                  _SYSTEM_Initialize 06E4  
                                   main@canMessage 0027                                         __accesstop 0060  
                          __end_of__initialization 071A                                 ?_SYSTEM_Initialize 0001  
                         _convertReg2ExtendedCANid 02B8                             CAN_receive@returnValue 0024  
                                    ___rparam_used 000001                                     __pcstackCOMRAM 0001  
                              ??_SYSTEM_Initialize 0013                                          ?_TMR1_ISR 0001  
                    ?_TMR1_DefaultInterruptHandler 0001              convertReg2StandardCANid@tempRXBn_SIDH 0015  
            convertReg2StandardCANid@tempRXBn_SIDL 000F                          __end_of_SYSTEM_Initialize 06FE  
                                  __CFG_PLLCFG$OFF 000000                                         __pnvCOMRAM 0035  
                                 ?_TMR1_StartTimer 0001                                         ??_TMR1_ISR 0001  
                                          _ECANCON 000F72                                            _CANSTAT 000F6E  
                                          _BRGCON1 000E43                                            _BRGCON2 000E44  
                                          _BRGCON3 000E45                                   __CFG_CANMX$PORTB 000000  
                                          _REFOCON 000F9A                                            _OSCCON2 000FD2  
                                          i2u12_40 06B6                                            _RXB0DLC 000F65  
                                          _RXB1DLC 000F35                                            _OSCTUNE 000F9B  
                                          _SPBRGH1 000F7D                                            _TXB0DLC 000F25  
                                          _TXB1DLC 000F15                                            _TXB2DLC 000F05  
                                  __CFG_PWRTEN$OFF 000000                                            __Hparam 0000  
                                          __Lparam 0000                  __size_of_convertReg2StandardCANid 0086  
                        ?_convertReg2StandardCANid 000F                                    _ECAN_Initialize 0400  
                                          __pcinit 0714                                            __ramtop 0F00  
                                          __ptext0 04EE                                            __ptext1 06E4  
                                          __ptext2 0660                                            __ptext3 0750  
                                          __ptext4 0746                                            __ptext5 061A  
                                          __ptext6 0728                                            __ptext7 0754  
                                          __ptext8 06FE                                            __ptext9 0400  
                   ??_TMR1_DefaultInterruptHandler 0001                                          _T1CONbits 000FCD  
                            _OSCILLATOR_Initialize 0728                  __size_of_TMR1_SetInterruptHandler 000A  
                               _EUSART1_Initialize 06FE                           ??_PIN_MANAGER_Initialize 000F  
                        ?_TMR1_SetInterruptHandler 000F                                  __CFG_MSSPMSK$MSK7 000000  
                       __size_of_SYSTEM_Initialize 001A                               end_of_initialization 071A  
                              ?_EUSART1_Initialize 0001                                      __Lmediumconst 0000  
                                    ??_CAN_receive 0024                                      ??_CAN_timeout 0001  
                                          postinc2 000FDE                               ??_EUSART1_Initialize 000F  
                       ??_convertReg2ExtendedCANid 0013                                EUSART1_Write@txData 000F  
                          __end_of_ECAN_Initialize 04EE                       __end_of_INTERRUPT_Initialize 0758  
                              __end_of_CAN_receive 02B8                                __end_of_CAN_timeout 075A  
                                __size_of_TMR1_ISR 0028                             ?_OSCILLATOR_Initialize 0001  
                              start_initialization 0714                    __size_of_PIN_MANAGER_Initialize 0046  
                            __end_of_EUSART1_Write 0746                convertReg2StandardCANid@returnValue 0016  
                         __size_of_TMR1_Initialize 003C                             __size_of_TMR1_CallBack 0020  
                            TMR1_ISR@CountCallBack 0039                                        __pbssCOMRAM 0039  
                                      _CAN_receive 008E                                   ?_ECAN_Initialize 0001  
                           _PIN_MANAGER_Initialize 061A                                        _CAN_timeout 0758  
                                        __pintcode 0008                   __end_of_TMR1_SetInterruptHandler 0750  
                     ??_INTERRUPT_InterruptManager 0001                                           _BAUDCON1 000FA7  
                         __size_of_TMR1_StartTimer 0004                                        _COMSTATbits 000F71  
                 __end_of_convertReg2ExtendedCANid 0400                               _INTERRUPT_Initialize 0754  
                                    _TMR1_CallBack 06C4                                           _LATDbits 000F8C  
                                         _PIE1bits 000F9D                                           _PIE5bits 000F76  
              __size_of_INTERRUPT_InterruptManager 0082                                           _PIR1bits 000F9E  
                                         _PIR5bits 000F77                                           _RXB0EIDH 000F63  
                                         _RXB0EIDL 000F64                                           _RXB1EIDH 000F33  
                                         _RXB1EIDL 000F34                                           _RCONbits 000FD0  
                                         _RXB0SIDH 000F61                                           _RXB0SIDL 000F62  
                                         _RXB1SIDH 000F31                                           _RXF0EIDH 000EE2  
                                         _RXB1SIDL 000F32                                           _RXF0EIDL 000EE3  
                                         _RXF1EIDH 000EE6                                           _RXF1EIDL 000EE7  
                                         _RXF2EIDH 000EEA                                           _RXF2EIDL 000EEB  
                                         _RXF3EIDH 000EEE                                           _RXF3EIDL 000EEF  
                                         _RXF4EIDH 000EF2                                           _RXF4EIDL 000EF3  
                                         _RXF5EIDH 000EF6                                           _RXF5EIDL 000EF7  
                                         _RXF0SIDH 000EE0                                           _RXF0SIDL 000EE1  
                                         _TXB0EIDH 000F23                                           _RXF1SIDH 000EE4  
                                         _TXB0EIDL 000F24                                           _RXF1SIDL 000EE5  
                                         _TXB1EIDH 000F13                                           _RXF2SIDH 000EE8  
                                         _TXB1EIDL 000F14                                           _RXF2SIDL 000EE9  
                                         _TXB2EIDH 000F03                                           _RXF3SIDH 000EEC  
                                         _TXB2EIDL 000F04                                           _RXF3SIDL 000EED  
                                         _RXF4SIDH 000EF0                                           _RXF4SIDL 000EF1  
                                         _RXF5SIDH 000EF4                                           _RXF5SIDL 000EF5  
                                         _TMR1_ISR 069C                                           _RXM0EIDH 000EFA  
                                         _RXM0EIDL 000EFB                                           _TXB0SIDH 000F21  
                                         _RXM1EIDH 000EFE                                           _TXB0SIDL 000F22  
                                         _RXM1EIDL 000EFF                                           _TXB1SIDH 000F11  
                                         _TXB1SIDL 000F12                                           _TXB2SIDH 000F01  
                                         _TXB2SIDL 000F02                                           _RXM0SIDH 000EF8  
                                         _RXM0SIDL 000EF9                                           _RXM1SIDH 000EFC  
                                         _RXM1SIDL 000EFD                                  ??_TMR1_Initialize 0011  
                                 __CFG_SOSCSEL$DIG 000000                              ?_INTERRUPT_Initialize 0001  
                                   ?_TMR1_CallBack 0001                           _convertReg2StandardCANid 0594  
            convertReg2ExtendedCANid@tempRXBn_EIDH 0017              convertReg2ExtendedCANid@tempRXBn_EIDL 000F  
            convertReg2ExtendedCANid@tempRXBn_SIDH 0010              convertReg2ExtendedCANid@tempRXBn_SIDL 0011  
                                         __Hrparam 0000                                           __Lrparam 0000  
                               __CFG_BOREN$SBORDIS 000000                            ??_OSCILLATOR_Initialize 000F  
                                       _CIOCONbits 000F70                        __size_of_EUSART1_Initialize 0016  
                         _TMR1_SetInterruptHandler 0746  convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 001D  
                            _TMR1_InterruptHandler 0035  convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 001C  
                                         __ptext10 073A                                           __ptext11 008E  
                                         __ptext12 0594                                           __ptext13 02B8  
                                       _T1GCONbits 000FAA                                           __ptext15 069C  
                                         __ptext16 06C4                                           __ptext17 0758  
                                         __ptext18 075A                                           __ptext19 0000  
                                ??_TMR1_StartTimer 000F                convertReg2StandardCANid@ConvertedID 001A  
                                    __size_of_main 00A6                convertReg2ExtendedCANid@returnValue 0018  
                __size_of_convertReg2ExtendedCANid 0148                          ?_convertReg2ExtendedCANid 000F  
                                         int$flags 003C                 __end_of_INTERRUPT_InterruptManager 008A  
                       _INTERRUPT_InterruptManager 0008                                __CFG_INTOSCSEL$HIGH 000000  
                                      _RXB0CONbits 000F60                                        _RXB1CONbits 000F30  
                                       _INTCONbits 000FF2                             ??_INTERRUPT_Initialize 000F  
                                  ??_TMR1_CallBack 0001                                           intlevel2 0000  
                                __CFG_T0CKMX$PORTB 000000                            ?_PIN_MANAGER_Initialize 0001  
                                      _TXB0CONbits 000F20                                         _RCSTA1bits 000FAB  
                                     ?_CAN_receive 0022                                        _TXB1CONbits 000F10  
                                      _TXB2CONbits 000F00                                       ?_CAN_timeout 0001  
                               __CFG_WDTPS$1048576 000000                             __size_of_EUSART1_Write 000C  
                                __CFG_T3CKMX$PORTG 000000                     __end_of_PIN_MANAGER_Initialize 0660  
                              __CFG_BORPWR$ZPBORMV 000000                                    _TMR1_Initialize 0660  
