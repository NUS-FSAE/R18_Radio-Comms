

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Apr 26 09:05:17 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F66K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           ; Version 1.45
    49                           ; Generated 16/11/2017 GMT
    50                           ; 
    51                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F66K80 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataCOMRAM
    84  00086A                     __pidataCOMRAM:
    85                           	opt stack 0
    86                           
    87                           ;initializer for _CAN_timeout
    88  00086A  01                 	db	1
    89                           
    90                           	psect	nvCOMRAM
    91  00003C                     __pnvCOMRAM:
    92                           	opt stack 0
    93  00003C                     _timer0ReloadVal:
    94                           	opt stack 0
    95  00003C                     	ds	2
    96  00003E                     _TMR0_InterruptHandler:
    97                           	opt stack 0
    98  00003E                     	ds	2
    99  000040                     _TMR1_InterruptHandler:
   100                           	opt stack 0
   101  000040                     	ds	2
   102  000042                     _timer1ReloadVal:
   103                           	opt stack 0
   104  000042                     	ds	2
   105  0000                     _BRGCON3	set	3653
   106  0000                     _BRGCON2	set	3652
   107  0000                     _BRGCON1	set	3651
   108  0000                     _RXF5SIDL	set	3829
   109  0000                     _RXF5SIDH	set	3828
   110  0000                     _RXF5EIDL	set	3831
   111  0000                     _RXF5EIDH	set	3830
   112  0000                     _RXF4SIDL	set	3825
   113  0000                     _RXF4SIDH	set	3824
   114  0000                     _RXF4EIDL	set	3827
   115  0000                     _RXF4EIDH	set	3826
   116  0000                     _RXF3SIDL	set	3821
   117  0000                     _RXF3SIDH	set	3820
   118  0000                     _RXF3EIDL	set	3823
   119  0000                     _RXF3EIDH	set	3822
   120  0000                     _RXF2SIDL	set	3817
   121  0000                     _RXF2SIDH	set	3816
   122  0000                     _RXF2EIDL	set	3819
   123  0000                     _RXF2EIDH	set	3818
   124  0000                     _RXF1SIDL	set	3813
   125  0000                     _RXF1SIDH	set	3812
   126  0000                     _RXF1EIDL	set	3815
   127  0000                     _RXF1EIDH	set	3814
   128  0000                     _RXF0SIDL	set	3809
   129  0000                     _RXF0SIDH	set	3808
   130  0000                     _RXF0EIDL	set	3811
   131  0000                     _RXF0EIDH	set	3810
   132  0000                     _RXM1SIDL	set	3837
   133  0000                     _RXM1SIDH	set	3836
   134  0000                     _RXM1EIDL	set	3839
   135  0000                     _RXM1EIDH	set	3838
   136  0000                     _RXM0SIDL	set	3833
   137  0000                     _RXM0SIDH	set	3832
   138  0000                     _RXM0EIDL	set	3835
   139  0000                     _RXM0EIDH	set	3834
   140  0000                     _RXB1D7	set	3901
   141  0000                     _RXB1D6	set	3900
   142  0000                     _RXB1D5	set	3899
   143  0000                     _RXB1D4	set	3898
   144  0000                     _RXB1D3	set	3897
   145  0000                     _RXB1D2	set	3896
   146  0000                     _RXB1D1	set	3895
   147  0000                     _RXB1D0	set	3894
   148  0000                     _RXB1DLC	set	3893
   149  0000                     _RXB1SIDH	set	3889
   150  0000                     _RXB1EIDL	set	3892
   151  0000                     _RXB1EIDH	set	3891
   152  0000                     _RXB1SIDL	set	3890
   153  0000                     _RXB1CONbits	set	3888
   154  0000                     _TXB2D7	set	3853
   155  0000                     _TXB2D6	set	3852
   156  0000                     _TXB2D5	set	3851
   157  0000                     _TXB2D4	set	3850
   158  0000                     _TXB2D3	set	3849
   159  0000                     _TXB2D2	set	3848
   160  0000                     _TXB2D1	set	3847
   161  0000                     _TXB2D0	set	3846
   162  0000                     _TXB2DLC	set	3845
   163  0000                     _TXB2SIDL	set	3842
   164  0000                     _TXB2SIDH	set	3841
   165  0000                     _TXB2EIDL	set	3844
   166  0000                     _TXB2EIDH	set	3843
   167  0000                     _TXB2CONbits	set	3840
   168  0000                     _TXB1D7	set	3869
   169  0000                     _TXB1D6	set	3868
   170  0000                     _TXB1D5	set	3867
   171  0000                     _TXB1D4	set	3866
   172  0000                     _TXB1D3	set	3865
   173  0000                     _TXB1D2	set	3864
   174  0000                     _TXB1D1	set	3863
   175  0000                     _TXB1D0	set	3862
   176  0000                     _TXB1DLC	set	3861
   177  0000                     _TXB1SIDL	set	3858
   178  0000                     _TXB1SIDH	set	3857
   179  0000                     _TXB1EIDL	set	3860
   180  0000                     _TXB1EIDH	set	3859
   181  0000                     _TXB1CONbits	set	3856
   182  0000                     _TXB0D7	set	3885
   183  0000                     _TXB0D6	set	3884
   184  0000                     _TXB0D5	set	3883
   185  0000                     _TXB0D4	set	3882
   186  0000                     _TXB0D3	set	3881
   187  0000                     _TXB0D2	set	3880
   188  0000                     _TXB0D1	set	3879
   189  0000                     _TXB0D0	set	3878
   190  0000                     _TXB0DLC	set	3877
   191  0000                     _TXB0SIDL	set	3874
   192  0000                     _TXB0SIDH	set	3873
   193  0000                     _TXB0EIDL	set	3876
   194  0000                     _TXB0EIDH	set	3875
   195  0000                     _TXB0CONbits	set	3872
   196  0000                     _WPUB	set	3931
   197  0000                     _ANCON1	set	3932
   198  0000                     _ANCON0	set	3933
   199  0000                     _LATFbits	set	3982
   200  0000                     _PORTAbits	set	3968
   201  0000                     _LATBbits	set	3978
   202  0000                     _CIOCONbits	set	3952
   203  0000                     _LATDbits	set	3980
   204  0000                     _T0CONbits	set	4053
   205  0000                     _TMR0L	set	4054
   206  0000                     _TMR0H	set	4055
   207  0000                     _T0CON	set	4053
   208  0000                     _INTCONbits	set	4082
   209  0000                     _RCONbits	set	4048
   210  0000                     _T1GCONbits	set	4010
   211  0000                     _T1CONbits	set	4045
   212  0000                     _PIE1bits	set	3997
   213  0000                     _TMR1L	set	4046
   214  0000                     _TMR1H	set	4047
   215  0000                     _T1GCON	set	4010
   216  0000                     _T1CON	set	4045
   217  0000                     _TXREG1	set	4013
   218  0000                     _RCREG1	set	4014
   219  0000                     _PIR1bits	set	3998
   220  0000                     _RCSTA1bits	set	4011
   221  0000                     _SPBRGH1	set	3965
   222  0000                     _SPBRG1	set	4015
   223  0000                     _TXSTA1	set	4012
   224  0000                     _RCSTA1	set	4011
   225  0000                     _BAUDCON1	set	4007
   226  0000                     _COMSTATbits	set	3953
   227  0000                     _RXB0D7	set	3949
   228  0000                     _RXB0D6	set	3948
   229  0000                     _RXB0D5	set	3947
   230  0000                     _RXB0D4	set	3946
   231  0000                     _RXB0D3	set	3945
   232  0000                     _RXB0D2	set	3944
   233  0000                     _RXB0D1	set	3943
   234  0000                     _RXB0D0	set	3942
   235  0000                     _RXB0DLC	set	3941
   236  0000                     _RXB0SIDH	set	3937
   237  0000                     _RXB0EIDL	set	3940
   238  0000                     _RXB0EIDH	set	3939
   239  0000                     _RXB0SIDL	set	3938
   240  0000                     _RXB0CONbits	set	3936
   241  0000                     _PIE5bits	set	3958
   242  0000                     _PIR5bits	set	3959
   243  0000                     _ECANCON	set	3954
   244  0000                     _CANSTAT	set	3950
   245  0000                     _CANCON	set	3951
   246  0000                     _REFOCON	set	3994
   247  0000                     _OSCTUNE	set	3995
   248  0000                     _OSCCON2	set	4050
   249  0000                     _OSCCON	set	4051
   250  0000                     _TRISD	set	3989
   251  0000                     _TRISC	set	3988
   252  0000                     _TRISB	set	3987
   253  0000                     _TRISG	set	3992
   254  0000                     _TRISA	set	3986
   255  0000                     _TRISF	set	3991
   256  0000                     _TRISE	set	3990
   257  0000                     _LATC	set	3979
   258  0000                     _LATG	set	3983
   259  0000                     _LATB	set	3978
   260  0000                     _LATF	set	3982
   261  0000                     _LATA	set	3977
   262  0000                     _LATD	set	3980
   263  0000                     _LATE	set	3981
   264                           
   265                           ; #config settings
   266  0000                     
   267                           	psect	cinit
   268  000716                     __pcinit:
   269                           	opt stack 0
   270  000716                     start_initialization:
   271                           	opt stack 0
   272  000716                     __initialization:
   273                           	opt stack 0
   274                           
   275                           ; Initialize objects allocated to COMRAM (1 bytes)
   276                           ; load TBLPTR registers with __pidataCOMRAM
   277  000716  0E6A               	movlw	low __pidataCOMRAM
   278  000718  6EF6               	movwf	tblptrl,c
   279  00071A  0E08               	movlw	high __pidataCOMRAM
   280  00071C  6EF7               	movwf	tblptrh,c
   281  00071E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   282  000720  6EF8               	movwf	tblptru,c
   283  000722  0009               	tblrd		*+	;fetch initializer
   284  000724  CFF5 F044          	movff	tablat,__pdataCOMRAM
   285                           
   286                           ; Clear objects allocated to COMRAM (17 bytes)
   287  000728  EE00  F02B         	lfsr	0,__pbssCOMRAM
   288  00072C  0E11               	movlw	17
   289  00072E                     clear_0:
   290  00072E  6AEE               	clrf	postinc0,c
   291  000730  06E8               	decf	wreg,f,c
   292  000732  E1FD               	bnz	clear_0
   293  000734                     end_of_initialization:
   294                           	opt stack 0
   295  000734                     __end_of__initialization:
   296                           	opt stack 0
   297  000734  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   298  000736  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   299  000738  0E00               	movlw	low (__Lmediumconst shr (0+16))
   300  00073A  6EF8               	movwf	tblptru,c
   301  00073C  0100               	movlb	0
   302  00073E  EF14  F002         	goto	_main	;jump to C main() function
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           
   310                           	psect	bssCOMRAM
   311  00002B                     __pbssCOMRAM:
   312                           	opt stack 0
   313  00002B                     TMR1_ISR@CountCallBack:
   314                           	opt stack 0
   315  00002B                     	ds	2
   316  00002D                     _ringing:
   317                           	opt stack 0
   318  00002D                     	ds	1
   319  00002E                     _canMessage:
   320                           	opt stack 0
   321  00002E                     	ds	14
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           
   329                           	psect	dataCOMRAM
   330  000044                     __pdataCOMRAM:
   331                           	opt stack 0
   332  000044                     _CAN_timeout:
   333                           	opt stack 0
   334  000044                     	ds	1
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           
   342                           	psect	cstackCOMRAM
   343  000001                     __pcstackCOMRAM:
   344                           	opt stack 0
   345  000001                     ??_INTERRUPT_InterruptManager:
   346  000001                     
   347                           ; 1 bytes @ 0x0
   348  000001                     	ds	18
   349  000013                     ??_ECAN_Initialize:
   350  000013                     ?_convertReg2ExtendedCANid:
   351                           	opt stack 0
   352  000013                     ?_convertReg2StandardCANid:
   353                           	opt stack 0
   354  000013                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   355                           	opt stack 0
   356  000013                     convertReg2StandardCANid@tempRXBn_SIDL:
   357                           	opt stack 0
   358  000013                     EUSART1_Write@txData:
   359                           	opt stack 0
   360  000013                     TMR1_SetInterruptHandler@InterruptHandler:
   361                           	opt stack 0
   362  000013                     TMR0_SetInterruptHandler@InterruptHandler:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x12
   366  000013                     	ds	1
   367  000014                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x13
   371  000014                     	ds	1
   372  000015                     ??_TMR1_Initialize:
   373  000015                     ??_TMR0_Initialize:
   374  000015                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x14
   378  000015                     	ds	2
   379  000017                     ??_convertReg2ExtendedCANid:
   380  000017                     ??_convertReg2StandardCANid:
   381  000017                     
   382                           ; 1 bytes @ 0x16
   383  000017                     	ds	2
   384  000019                     convertReg2StandardCANid@tempRXBn_SIDH:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x18
   388  000019                     	ds	1
   389  00001A                     convertReg2StandardCANid@returnValue:
   390                           	opt stack 0
   391                           
   392                           ; 4 bytes @ 0x19
   393  00001A                     	ds	1
   394  00001B                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x1A
   398  00001B                     	ds	1
   399  00001C                     convertReg2ExtendedCANid@returnValue:
   400                           	opt stack 0
   401                           
   402                           ; 4 bytes @ 0x1B
   403  00001C                     	ds	2
   404  00001E                     convertReg2StandardCANid@ConvertedID:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x1D
   408  00001E                     	ds	2
   409  000020                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x1F
   413  000020                     	ds	1
   414  000021                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x20
   418  000021                     	ds	1
   419  000022                     convertReg2ExtendedCANid@ConvertedID:
   420                           	opt stack 0
   421                           
   422                           ; 4 bytes @ 0x21
   423  000022                     	ds	4
   424  000026                     CAN_receive@tempCanMsg:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x25
   428  000026                     	ds	2
   429  000028                     CAN_receive@returnValue:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x27
   433  000028                     	ds	1
   434  000029                     ??_main:
   435                           
   436                           ; 1 bytes @ 0x28
   437  000029                     	ds	2
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           
   445 ;;
   446 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   447 ;;
   448 ;; *************** function _main *****************
   449 ;; Defined at:
   450 ;;		line 50 in file "main.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   466 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   467 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   468 ;;Total ram usage:        2 bytes
   469 ;; Hardware stack levels required when called:    7
   470 ;; This function calls:
   471 ;;		_CAN_receive
   472 ;;		_EUSART1_Write
   473 ;;		_SYSTEM_Initialize
   474 ;;		_TMR0_SetInterruptHandler
   475 ;;		_TMR1_Reload
   476 ;;		_TMR1_SetInterruptHandler
   477 ;;		_TMR1_StopTimer
   478 ;;		_setLED_Blue
   479 ;;		_setLED_Cyan
   480 ;;		_setLED_Green
   481 ;;		_setLED_Red
   482 ;; This function is called by:
   483 ;;		Startup code after reset
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text0
   488  000428                     __ptext0:
   489                           	opt stack 0
   490  000428                     _main:
   491                           	opt stack 24
   492                           
   493                           ;main.c: 51: SYSTEM_Initialize();
   494                           
   495                           ;incstack = 0
   496  000428  ECD5  F003         	call	_SYSTEM_Initialize	;wreg free
   497                           
   498                           ;main.c: 52: TMR1_StopTimer();
   499  00042C  EC2B  F004         	call	_TMR1_StopTimer	;wreg free
   500                           
   501                           ;main.c: 55: CIOCONbits.CLKSEL = 1;
   502  000430  8070               	bsf	3952,0,c	;volatile
   503                           
   504                           ;main.c: 56: CIOCONbits.ENDRHI = 1;
   505  000432  8A70               	bsf	3952,5,c	;volatile
   506                           
   507                           ;main.c: 57: CIOCONbits.TX2SRC = 0;
   508  000434  9E70               	bcf	3952,7,c	;volatile
   509                           
   510                           ;main.c: 58: CIOCONbits.TX2EN = 0;
   511  000436  9C70               	bcf	3952,6,c	;volatile
   512                           
   513                           ;main.c: 59: RXF1SIDH = 0xC8;
   514  000438  0EC8               	movlw	200
   515  00043A  010E               	movlb	14	; () banked
   516  00043C  6FE4               	movwf	228,b	;volatile
   517                           
   518                           ; BSR set to: 14
   519                           ;main.c: 60: RXF1SIDL = 0x60;
   520  00043E  0E60               	movlw	96
   521  000440  6FE5               	movwf	229,b	;volatile
   522                           
   523                           ; BSR set to: 14
   524                           ;main.c: 61: TMR1_SetInterruptHandler(&can_receive_timeout);
   525  000442  0E4A               	movlw	low _can_receive_timeout
   526  000444  6E13               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
   527  000446  0E08               	movlw	high _can_receive_timeout
   528  000448  6E14               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
   529  00044A  EC0B  F004         	call	_TMR1_SetInterruptHandler	;wreg free
   530                           
   531                           ;main.c: 62: TMR0_SetInterruptHandler(&ring);
   532  00044E  0E50               	movlw	low _ring
   533  000450  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
   534  000452  0E08               	movlw	high _ring
   535  000454  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
   536  000456  EC10  F004         	call	_TMR0_SetInterruptHandler	;wreg free
   537                           
   538                           ;main.c: 63: (INTCONbits.GIE = 1);
   539  00045A  8EF2               	bsf	intcon,7,c	;volatile
   540                           
   541                           ;main.c: 64: (INTCONbits.PEIE = 1);
   542  00045C  8CF2               	bsf	intcon,6,c	;volatile
   543                           
   544                           ;main.c: 67: _delay((unsigned long)((10000)*(16000000/4000.0)));
   545  00045E  0ECB               	movlw	203
   546  000460  6E2A               	movwf	(??_main+1)& (0+255),c
   547  000462  0EEC               	movlw	236
   548  000464  6E29               	movwf	??_main& (0+255),c
   549  000466  0E84               	movlw	132
   550  000468                     u537:
   551  000468  2EE8               	decfsz	wreg,f,c
   552  00046A  D7FE               	bra	u537
   553  00046C  2E29               	decfsz	??_main& (0+255),f,c
   554  00046E  D7FC               	bra	u537
   555  000470  2E2A               	decfsz	(??_main+1)& (0+255),f,c
   556  000472  D7FA               	bra	u537
   557  000474  D000               	nop2	
   558                           
   559                           ;main.c: 69: do { LATBbits.LATB5 = 0; } while(0);
   560  000476  9A8A               	bcf	3978,5,c	;volatile
   561  000478                     
   562                           ;main.c: 72: if(PORTAbits.RA5 == 0) {
   563                           
   564                           ;main.c: 71: while (1) {
   565  000478  BA80               	btfsc	3968,5,c	;volatile
   566  00047A  D003               	goto	l626
   567                           
   568                           ;main.c: 73: setLED_Cyan();
   569  00047C  EC1D  F004         	call	_setLED_Cyan	;wreg free
   570                           
   571                           ;main.c: 74: } else if (CAN_receive(&canMessage)) {
   572  000480  D033               	goto	l637
   573  000482                     l626:
   574  000482  0E2E               	movlw	low _canMessage
   575  000484  6E26               	movwf	CAN_receive@tempCanMsg,c
   576  000486  0E00               	movlw	high _canMessage
   577  000488  6E27               	movwf	CAN_receive@tempCanMsg+1,c
   578  00048A  EC5D  F000         	call	_CAN_receive	;wreg free
   579  00048E  0900               	iorlw	0
   580  000490  B4D8               	btfsc	status,2,c
   581  000492  D024               	goto	l628
   582                           
   583                           ;main.c: 75: if (canMessage.frame.id == 0x643) {
   584  000494  0E43               	movlw	67
   585  000496  182F               	xorwf	_canMessage+1,w,c
   586  000498  E127               	bnz	l2001
   587  00049A  0E06               	movlw	6
   588  00049C  1830               	xorwf	_canMessage+2,w,c
   589  00049E  1031               	iorwf	_canMessage+3,w,c
   590  0004A0  1032               	iorwf	_canMessage+4,w,c
   591  0004A2  A4D8               	btfss	status,2,c
   592  0004A4  D021               	goto	l637
   593                           
   594                           ;main.c: 76: TMR1_Reload();
   595  0004A6  EC06  F004         	call	_TMR1_Reload	;wreg free
   596                           
   597                           ;main.c: 77: CAN_timeout = 0;
   598  0004AA  0E00               	movlw	0
   599  0004AC  6E44               	movwf	_CAN_timeout,c
   600                           
   601                           ;main.c: 78: if(canMessage.frame.data0 >> 7) {
   602  0004AE  4434               	rlncf	_canMessage+6,w,c
   603  0004B0  0B01               	andlw	1
   604  0004B2  B4D8               	btfsc	status,2,c
   605  0004B4  D00F               	goto	l630
   606                           
   607                           ;main.c: 79: do { LATFbits.LATF2 = 0; } while(0);
   608  0004B6  948E               	bcf	3982,2,c	;volatile
   609                           
   610                           ;main.c: 80: _delay((unsigned long)((600)*(16000000/4000.0)));
   611  0004B8  0E0D               	movlw	13
   612  0004BA  6E2A               	movwf	(??_main+1)& (0+255),c
   613  0004BC  0E2D               	movlw	45
   614  0004BE  6E29               	movwf	??_main& (0+255),c
   615  0004C0  0ED8               	movlw	216
   616  0004C2                     u547:
   617  0004C2  2EE8               	decfsz	wreg,f,c
   618  0004C4  D7FE               	bra	u547
   619  0004C6  2E29               	decfsz	??_main& (0+255),f,c
   620  0004C8  D7FC               	bra	u547
   621  0004CA  2E2A               	decfsz	(??_main+1)& (0+255),f,c
   622  0004CC  D7FA               	bra	u547
   623                           
   624                           ;main.c: 81: setLED_Green();
   625  0004CE  EC19  F004         	call	_setLED_Green	;wreg free
   626                           
   627                           ;main.c: 82: } else {
   628  0004D2  D00A               	goto	l637
   629  0004D4                     l630:
   630                           
   631                           ;main.c: 83: do { LATFbits.LATF2 = 1; } while(0);
   632  0004D4  848E               	bsf	3982,2,c	;volatile
   633                           
   634                           ;main.c: 84: setLED_Blue();
   635  0004D6  EC21  F004         	call	_setLED_Blue	;wreg free
   636                           
   637                           ;main.c: 85: }
   638                           ;main.c: 86: }
   639                           ;main.c: 87: } else if (CAN_timeout) {
   640  0004DA  D006               	goto	l637
   641  0004DC                     l628:
   642  0004DC  5044               	movf	_CAN_timeout,w,c
   643  0004DE  B4D8               	btfsc	status,2,c
   644  0004E0  D003               	goto	l637
   645                           
   646                           ;main.c: 88: do { LATFbits.LATF2 = 1; } while(0);
   647  0004E2  848E               	bsf	3982,2,c	;volatile
   648                           
   649                           ;main.c: 89: setLED_Red();
   650  0004E4  EC15  F004         	call	_setLED_Red	;wreg free
   651  0004E8                     l637:
   652  0004E8                     l2001:
   653                           
   654                           ;main.c: 90: }
   655                           ;main.c: 91: if (ringing) {
   656  0004E8  502D               	movf	_ringing,w,c
   657  0004EA  B4D8               	btfsc	status,2,c
   658  0004EC  D7C5               	goto	l624
   659                           
   660                           ;main.c: 92: EUSART1_Write('S');
   661  0004EE  0E53               	movlw	83
   662  0004F0  EC00  F004         	call	_EUSART1_Write
   663                           
   664                           ;main.c: 93: EUSART1_Write('C');
   665  0004F4  0E43               	movlw	67
   666  0004F6  EC00  F004         	call	_EUSART1_Write
   667                           
   668                           ;main.c: 94: EUSART1_Write('O');
   669  0004FA  0E4F               	movlw	79
   670  0004FC  EC00  F004         	call	_EUSART1_Write
   671                           
   672                           ;main.c: 95: EUSART1_Write(' ');
   673  000500  0E20               	movlw	32
   674  000502  EC00  F004         	call	_EUSART1_Write
   675                           
   676                           ;main.c: 96: EUSART1_Write('O');
   677  000506  0E4F               	movlw	79
   678  000508  EC00  F004         	call	_EUSART1_Write
   679                           
   680                           ;main.c: 97: EUSART1_Write('P');
   681  00050C  0E50               	movlw	80
   682  00050E  EC00  F004         	call	_EUSART1_Write
   683                           
   684                           ;main.c: 98: EUSART1_Write('E');
   685  000512  0E45               	movlw	69
   686  000514  EC00  F004         	call	_EUSART1_Write
   687                           
   688                           ;main.c: 99: EUSART1_Write('N');
   689  000518  0E4E               	movlw	78
   690  00051A  EC00  F004         	call	_EUSART1_Write
   691                           
   692                           ;main.c: 100: EUSART1_Write(' ');
   693  00051E  0E20               	movlw	32
   694  000520  EC00  F004         	call	_EUSART1_Write
   695                           
   696                           ;main.c: 101: EUSART1_Write('0');
   697  000524  0E30               	movlw	48
   698  000526  EC00  F004         	call	_EUSART1_Write
   699                           
   700                           ;main.c: 102: EUSART1_Write('\r');
   701  00052A  0E0D               	movlw	13
   702  00052C  EC00  F004         	call	_EUSART1_Write
   703                           
   704                           ;main.c: 103: ringing = 0;
   705  000530  0E00               	movlw	0
   706  000532  6E2D               	movwf	_ringing,c
   707  000534  D7A1               	goto	l624
   708  000536                     __end_of_main:
   709                           	opt stack 0
   710                           tblptru	equ	0xFF8
   711                           tblptrh	equ	0xFF7
   712                           tblptrl	equ	0xFF6
   713                           tablat	equ	0xFF5
   714                           intcon	equ	0xFF2
   715                           postinc0	equ	0xFEE
   716                           wreg	equ	0xFE8
   717                           status	equ	0xFD8
   718                           
   719 ;; *************** function _setLED_Red *****************
   720 ;; Defined at:
   721 ;;		line 22 in file "main.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;		None
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		None
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   739 ;;Total ram usage:        0 bytes
   740 ;; Hardware stack levels used:    1
   741 ;; Hardware stack levels required when called:    4
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text1
   750  00082A                     __ptext1:
   751                           	opt stack 0
   752  00082A                     _setLED_Red:
   753                           	opt stack 26
   754                           
   755                           ;incstack = 0
   756                           ;main.c: 23: do { LATDbits.LATD6 = 0; } while(0);
   757  00082A  9C8C               	bcf	3980,6,c	;volatile
   758                           
   759                           ;main.c: 24: do { LATDbits.LATD4 = 1; } while(0);
   760  00082C  888C               	bsf	3980,4,c	;volatile
   761                           
   762                           ;main.c: 25: do { LATDbits.LATD5 = 1; } while(0);
   763  00082E  8A8C               	bsf	3980,5,c	;volatile
   764  000830  0012               	return	
   765  000832                     __end_of_setLED_Red:
   766                           	opt stack 0
   767                           tblptru	equ	0xFF8
   768                           tblptrh	equ	0xFF7
   769                           tblptrl	equ	0xFF6
   770                           tablat	equ	0xFF5
   771                           intcon	equ	0xFF2
   772                           postinc0	equ	0xFEE
   773                           wreg	equ	0xFE8
   774                           status	equ	0xFD8
   775                           
   776 ;; *************** function _setLED_Green *****************
   777 ;; Defined at:
   778 ;;		line 28 in file "main.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;		None
   781 ;; Auto vars:     Size  Location     Type
   782 ;;		None
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		None
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   796 ;;Total ram usage:        0 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; Hardware stack levels required when called:    4
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		_main
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text2
   807  000832                     __ptext2:
   808                           	opt stack 0
   809  000832                     _setLED_Green:
   810                           	opt stack 26
   811                           
   812                           ;incstack = 0
   813                           ;main.c: 29: do { LATDbits.LATD5 = 0; } while(0);
   814  000832  9A8C               	bcf	3980,5,c	;volatile
   815                           
   816                           ;main.c: 30: do { LATDbits.LATD6 = 1; } while(0);
   817  000834  8C8C               	bsf	3980,6,c	;volatile
   818                           
   819                           ;main.c: 31: do { LATDbits.LATD4 = 1; } while(0);
   820  000836  888C               	bsf	3980,4,c	;volatile
   821  000838  0012               	return	
   822  00083A                     __end_of_setLED_Green:
   823                           	opt stack 0
   824                           tblptru	equ	0xFF8
   825                           tblptrh	equ	0xFF7
   826                           tblptrl	equ	0xFF6
   827                           tablat	equ	0xFF5
   828                           intcon	equ	0xFF2
   829                           postinc0	equ	0xFEE
   830                           wreg	equ	0xFE8
   831                           status	equ	0xFD8
   832                           
   833 ;; *************** function _setLED_Cyan *****************
   834 ;; Defined at:
   835 ;;		line 34 in file "main.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		None
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   853 ;;Total ram usage:        0 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; Hardware stack levels required when called:    4
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text3
   864  00083A                     __ptext3:
   865                           	opt stack 0
   866  00083A                     _setLED_Cyan:
   867                           	opt stack 26
   868                           
   869                           ;incstack = 0
   870                           ;main.c: 35: do { LATDbits.LATD6 = 1; } while(0);
   871  00083A  8C8C               	bsf	3980,6,c	;volatile
   872                           
   873                           ;main.c: 36: do { LATDbits.LATD4 = 0; } while(0);
   874  00083C  988C               	bcf	3980,4,c	;volatile
   875                           
   876                           ;main.c: 37: do { LATDbits.LATD5 = 0; } while(0);
   877  00083E  9A8C               	bcf	3980,5,c	;volatile
   878  000840  0012               	return	
   879  000842                     __end_of_setLED_Cyan:
   880                           	opt stack 0
   881                           tblptru	equ	0xFF8
   882                           tblptrh	equ	0xFF7
   883                           tblptrl	equ	0xFF6
   884                           tablat	equ	0xFF5
   885                           intcon	equ	0xFF2
   886                           postinc0	equ	0xFEE
   887                           wreg	equ	0xFE8
   888                           status	equ	0xFD8
   889                           
   890 ;; *************** function _setLED_Blue *****************
   891 ;; Defined at:
   892 ;;		line 16 in file "main.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		None
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   910 ;;Total ram usage:        0 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:    4
   913 ;; This function calls:
   914 ;;		Nothing
   915 ;; This function is called by:
   916 ;;		_main
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text4
   921  000842                     __ptext4:
   922                           	opt stack 0
   923  000842                     _setLED_Blue:
   924                           	opt stack 26
   925                           
   926                           ;incstack = 0
   927                           ;main.c: 17: do { LATDbits.LATD4 = 0; } while(0);
   928  000842  988C               	bcf	3980,4,c	;volatile
   929                           
   930                           ;main.c: 18: do { LATDbits.LATD5 = 1; } while(0);
   931  000844  8A8C               	bsf	3980,5,c	;volatile
   932                           
   933                           ;main.c: 19: do { LATDbits.LATD6 = 1; } while(0);
   934  000846  8C8C               	bsf	3980,6,c	;volatile
   935  000848  0012               	return	
   936  00084A                     __end_of_setLED_Blue:
   937                           	opt stack 0
   938                           tblptru	equ	0xFF8
   939                           tblptrh	equ	0xFF7
   940                           tblptrl	equ	0xFF6
   941                           tablat	equ	0xFF5
   942                           intcon	equ	0xFF2
   943                           postinc0	equ	0xFEE
   944                           wreg	equ	0xFE8
   945                           status	equ	0xFD8
   946                           
   947 ;; *************** function _TMR1_StopTimer *****************
   948 ;; Defined at:
   949 ;;		line 101 in file "mcc_generated_files/tmr1.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		None
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    4
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_main
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text5
   978  000856                     __ptext5:
   979                           	opt stack 0
   980  000856                     _TMR1_StopTimer:
   981                           	opt stack 26
   982                           
   983                           ;tmr1.c: 104: T1CONbits.TMR1ON = 0;
   984                           
   985                           ;incstack = 0
   986  000856  90CD               	bcf	4045,0,c	;volatile
   987  000858  0012               	return		;funcret
   988  00085A                     __end_of_TMR1_StopTimer:
   989                           	opt stack 0
   990                           tblptru	equ	0xFF8
   991                           tblptrh	equ	0xFF7
   992                           tblptrl	equ	0xFF6
   993                           tablat	equ	0xFF5
   994                           intcon	equ	0xFF2
   995                           postinc0	equ	0xFEE
   996                           wreg	equ	0xFE8
   997                           status	equ	0xFD8
   998                           
   999 ;; *************** function _TMR1_Reload *****************
  1000 ;; Defined at:
  1001 ;;		line 143 in file "mcc_generated_files/tmr1.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;		None
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, status,2
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1019 ;;Total ram usage:        0 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; Hardware stack levels required when called:    4
  1022 ;; This function calls:
  1023 ;;		Nothing
  1024 ;; This function is called by:
  1025 ;;		_main
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text6
  1030  00080C                     __ptext6:
  1031                           	opt stack 0
  1032  00080C                     _TMR1_Reload:
  1033                           	opt stack 26
  1034                           
  1035                           ;tmr1.c: 146: TMR1H = (timer1ReloadVal >> 8);
  1036                           
  1037                           ;incstack = 0
  1038  00080C  5043               	movf	_timer1ReloadVal+1,w,c	;volatile
  1039  00080E  6ECF               	movwf	4047,c	;volatile
  1040                           
  1041                           ;tmr1.c: 147: TMR1L = timer1ReloadVal;
  1042  000810  C042  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  1043  000814  0012               	return		;funcret
  1044  000816                     __end_of_TMR1_Reload:
  1045                           	opt stack 0
  1046                           tblptru	equ	0xFF8
  1047                           tblptrh	equ	0xFF7
  1048                           tblptrl	equ	0xFF6
  1049                           tablat	equ	0xFF5
  1050                           intcon	equ	0xFF2
  1051                           postinc0	equ	0xFEE
  1052                           wreg	equ	0xFE8
  1053                           status	equ	0xFD8
  1054                           
  1055 ;; *************** function _SYSTEM_Initialize *****************
  1056 ;; Defined at:
  1057 ;;		line 113 in file "mcc_generated_files/mcc.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;		None
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, status,2, status,0, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1075 ;;Total ram usage:        0 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; Hardware stack levels required when called:    6
  1078 ;; This function calls:
  1079 ;;		_ECAN_Initialize
  1080 ;;		_EUSART1_Initialize
  1081 ;;		_INTERRUPT_Initialize
  1082 ;;		_OSCILLATOR_Initialize
  1083 ;;		_PIN_MANAGER_Initialize
  1084 ;;		_TMR0_Initialize
  1085 ;;		_TMR1_Initialize
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text7
  1092  0007AA                     __ptext7:
  1093                           	opt stack 0
  1094  0007AA                     _SYSTEM_Initialize:
  1095                           	opt stack 24
  1096                           
  1097                           ;mcc.c: 116: INTERRUPT_Initialize();
  1098                           
  1099                           ;incstack = 0
  1100  0007AA  EC31  F004         	call	_INTERRUPT_Initialize	;wreg free
  1101                           
  1102                           ;mcc.c: 117: PIN_MANAGER_Initialize();
  1103  0007AE  EC2F  F003         	call	_PIN_MANAGER_Initialize	;wreg free
  1104                           
  1105                           ;mcc.c: 118: OSCILLATOR_Initialize();
  1106  0007B2  ECEF  F003         	call	_OSCILLATOR_Initialize	;wreg free
  1107                           
  1108                           ;mcc.c: 119: TMR1_Initialize();
  1109  0007B6  EC51  F003         	call	_TMR1_Initialize	;wreg free
  1110                           
  1111                           ;mcc.c: 120: TMR0_Initialize();
  1112  0007BA  EC6F  F003         	call	_TMR0_Initialize	;wreg free
  1113                           
  1114                           ;mcc.c: 121: EUSART1_Initialize();
  1115  0007BE  ECE4  F003         	call	_EUSART1_Initialize	;wreg free
  1116                           
  1117                           ;mcc.c: 122: ECAN_Initialize();
  1118  0007C2  EC9B  F002         	call	_ECAN_Initialize	;wreg free
  1119  0007C6  0012               	return		;funcret
  1120  0007C8                     __end_of_SYSTEM_Initialize:
  1121                           	opt stack 0
  1122                           tblptru	equ	0xFF8
  1123                           tblptrh	equ	0xFF7
  1124                           tblptrl	equ	0xFF6
  1125                           tablat	equ	0xFF5
  1126                           intcon	equ	0xFF2
  1127                           postinc0	equ	0xFEE
  1128                           wreg	equ	0xFE8
  1129                           status	equ	0xFD8
  1130                           
  1131 ;; *************** function _TMR1_Initialize *****************
  1132 ;; Defined at:
  1133 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;		None
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;		None
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      void 
  1140 ;; Registers used:
  1141 ;;		wreg, status,2, status,0, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1149 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1150 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1151 ;;Total ram usage:        2 bytes
  1152 ;; Hardware stack levels used:    1
  1153 ;; Hardware stack levels required when called:    5
  1154 ;; This function calls:
  1155 ;;		_TMR1_SetInterruptHandler
  1156 ;;		_TMR1_StartTimer
  1157 ;; This function is called by:
  1158 ;;		_SYSTEM_Initialize
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text8
  1163  0006A2                     __ptext8:
  1164                           	opt stack 0
  1165  0006A2                     _TMR1_Initialize:
  1166                           	opt stack 24
  1167                           
  1168                           ;tmr1.c: 68: T1CON = 0x30;
  1169                           
  1170                           ;incstack = 0
  1171  0006A2  0E30               	movlw	48
  1172  0006A4  6ECD               	movwf	4045,c	;volatile
  1173                           
  1174                           ;tmr1.c: 71: T1GCON = 0x00;
  1175  0006A6  0E00               	movlw	0
  1176  0006A8  6EAA               	movwf	4010,c	;volatile
  1177                           
  1178                           ;tmr1.c: 74: TMR1H = 0x3C;
  1179  0006AA  0E3C               	movlw	60
  1180  0006AC  6ECF               	movwf	4047,c	;volatile
  1181                           
  1182                           ;tmr1.c: 77: TMR1L = 0xB0;
  1183  0006AE  0EB0               	movlw	176
  1184  0006B0  6ECE               	movwf	4046,c	;volatile
  1185                           
  1186                           ;tmr1.c: 80: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1187  0006B2  50CE               	movf	4046,w,c	;volatile
  1188  0006B4  CFCF F015          	movff	4047,??_TMR1_Initialize	;volatile
  1189  0006B8  6A16               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  1190  0006BA  C015  F016         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  1191  0006BE  6A15               	clrf	??_TMR1_Initialize,c
  1192  0006C0  1015               	iorwf	??_TMR1_Initialize,w,c
  1193  0006C2  6E42               	movwf	_timer1ReloadVal,c	;volatile
  1194  0006C4  5016               	movf	??_TMR1_Initialize+1,w,c
  1195  0006C6  6E43               	movwf	_timer1ReloadVal+1,c	;volatile
  1196                           
  1197                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  1198  0006C8  909E               	bcf	3998,0,c	;volatile
  1199                           
  1200                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  1201  0006CA  809D               	bsf	3997,0,c	;volatile
  1202                           
  1203                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  1204  0006CC  0E66               	movlw	low _TMR1_DefaultInterruptHandler
  1205  0006CE  6E13               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  1206  0006D0  0E08               	movlw	high _TMR1_DefaultInterruptHandler
  1207  0006D2  6E14               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  1208  0006D4  EC0B  F004         	call	_TMR1_SetInterruptHandler	;wreg free
  1209                           
  1210                           ;tmr1.c: 92: TMR1_StartTimer();
  1211  0006D8  EC2D  F004         	call	_TMR1_StartTimer	;wreg free
  1212  0006DC  0012               	return		;funcret
  1213  0006DE                     __end_of_TMR1_Initialize:
  1214                           	opt stack 0
  1215                           tblptru	equ	0xFF8
  1216                           tblptrh	equ	0xFF7
  1217                           tblptrl	equ	0xFF6
  1218                           tablat	equ	0xFF5
  1219                           intcon	equ	0xFF2
  1220                           postinc0	equ	0xFEE
  1221                           wreg	equ	0xFE8
  1222                           status	equ	0xFD8
  1223                           
  1224 ;; *************** function _TMR1_StartTimer *****************
  1225 ;; Defined at:
  1226 ;;		line 95 in file "mcc_generated_files/tmr1.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;		None
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;		None
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		None
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1244 ;;Total ram usage:        0 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    4
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_TMR1_Initialize
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text9
  1255  00085A                     __ptext9:
  1256                           	opt stack 0
  1257  00085A                     _TMR1_StartTimer:
  1258                           	opt stack 24
  1259                           
  1260                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
  1261                           
  1262                           ;incstack = 0
  1263  00085A  80CD               	bsf	4045,0,c	;volatile
  1264  00085C  0012               	return		;funcret
  1265  00085E                     __end_of_TMR1_StartTimer:
  1266                           	opt stack 0
  1267                           tblptru	equ	0xFF8
  1268                           tblptrh	equ	0xFF7
  1269                           tblptrl	equ	0xFF6
  1270                           tablat	equ	0xFF5
  1271                           intcon	equ	0xFF2
  1272                           postinc0	equ	0xFEE
  1273                           wreg	equ	0xFE8
  1274                           status	equ	0xFD8
  1275                           
  1276 ;; *************** function _TMR1_SetInterruptHandler *****************
  1277 ;; Defined at:
  1278 ;;		line 190 in file "mcc_generated_files/tmr1.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  1281 ;;		 -> can_receive_timeout(1), TMR1_DefaultInterruptHandler(1), 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1293 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1296 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1297 ;;Total ram usage:        2 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    4
  1300 ;; This function calls:
  1301 ;;		Nothing
  1302 ;; This function is called by:
  1303 ;;		_TMR1_Initialize
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text10
  1309  000816                     __ptext10:
  1310                           	opt stack 0
  1311  000816                     _TMR1_SetInterruptHandler:
  1312                           	opt stack 26
  1313                           
  1314                           ;tmr1.c: 191: TMR1_InterruptHandler = InterruptHandler;
  1315                           
  1316                           ;incstack = 0
  1317  000816  C013  F040         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  1318  00081A  C014  F041         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  1319  00081E  0012               	return		;funcret
  1320  000820                     __end_of_TMR1_SetInterruptHandler:
  1321                           	opt stack 0
  1322                           tblptru	equ	0xFF8
  1323                           tblptrh	equ	0xFF7
  1324                           tblptrl	equ	0xFF6
  1325                           tablat	equ	0xFF5
  1326                           intcon	equ	0xFF2
  1327                           postinc0	equ	0xFEE
  1328                           wreg	equ	0xFE8
  1329                           status	equ	0xFD8
  1330                           
  1331 ;; *************** function _TMR0_Initialize *****************
  1332 ;; Defined at:
  1333 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;		None
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;		None
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      void 
  1340 ;; Registers used:
  1341 ;;		wreg, status,2, status,0, cstack
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1349 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1351 ;;Total ram usage:        2 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; Hardware stack levels required when called:    5
  1354 ;; This function calls:
  1355 ;;		_TMR0_SetInterruptHandler
  1356 ;;		_TMR0_StartTimer
  1357 ;; This function is called by:
  1358 ;;		_SYSTEM_Initialize
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text11
  1363  0006DE                     __ptext11:
  1364                           	opt stack 0
  1365  0006DE                     _TMR0_Initialize:
  1366                           	opt stack 24
  1367                           
  1368                           ;tmr0.c: 71: T0CON = 0x17;
  1369                           
  1370                           ;incstack = 0
  1371  0006DE  0E17               	movlw	23
  1372  0006E0  6ED5               	movwf	4053,c	;volatile
  1373                           
  1374                           ;tmr0.c: 74: TMR0H = 0x0B;
  1375  0006E2  0E0B               	movlw	11
  1376  0006E4  6ED7               	movwf	4055,c	;volatile
  1377                           
  1378                           ;tmr0.c: 77: TMR0L = 0xDB;
  1379  0006E6  0EDB               	movlw	219
  1380  0006E8  6ED6               	movwf	4054,c	;volatile
  1381                           
  1382                           ;tmr0.c: 80: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  1383  0006EA  50D6               	movf	4054,w,c	;volatile
  1384  0006EC  CFD7 F015          	movff	4055,??_TMR0_Initialize	;volatile
  1385  0006F0  6A16               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  1386  0006F2  C015  F016         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1387  0006F6  6A15               	clrf	??_TMR0_Initialize,c
  1388  0006F8  1015               	iorwf	??_TMR0_Initialize,w,c
  1389  0006FA  6E3C               	movwf	_timer0ReloadVal,c	;volatile
  1390  0006FC  5016               	movf	??_TMR0_Initialize+1,w,c
  1391  0006FE  6E3D               	movwf	_timer0ReloadVal+1,c	;volatile
  1392                           
  1393                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
  1394  000700  94F2               	bcf	intcon,2,c	;volatile
  1395                           
  1396                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
  1397  000702  8AF2               	bsf	intcon,5,c	;volatile
  1398                           
  1399                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1400  000704  0E68               	movlw	low _TMR0_DefaultInterruptHandler
  1401  000706  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  1402  000708  0E08               	movlw	high _TMR0_DefaultInterruptHandler
  1403  00070A  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  1404  00070C  EC10  F004         	call	_TMR0_SetInterruptHandler	;wreg free
  1405                           
  1406                           ;tmr0.c: 92: TMR0_StartTimer();
  1407  000710  EC2F  F004         	call	_TMR0_StartTimer	;wreg free
  1408  000714  0012               	return		;funcret
  1409  000716                     __end_of_TMR0_Initialize:
  1410                           	opt stack 0
  1411                           tblptru	equ	0xFF8
  1412                           tblptrh	equ	0xFF7
  1413                           tblptrl	equ	0xFF6
  1414                           tablat	equ	0xFF5
  1415                           intcon	equ	0xFF2
  1416                           postinc0	equ	0xFEE
  1417                           wreg	equ	0xFE8
  1418                           status	equ	0xFD8
  1419                           
  1420 ;; *************** function _TMR0_StartTimer *****************
  1421 ;; Defined at:
  1422 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		None
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1440 ;;Total ram usage:        0 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    4
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_TMR0_Initialize
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text12
  1451  00085E                     __ptext12:
  1452                           	opt stack 0
  1453  00085E                     _TMR0_StartTimer:
  1454                           	opt stack 24
  1455                           
  1456                           ;tmr0.c: 98: T0CONbits.TMR0ON = 1;
  1457                           
  1458                           ;incstack = 0
  1459  00085E  8ED5               	bsf	4053,7,c	;volatile
  1460  000860  0012               	return		;funcret
  1461  000862                     __end_of_TMR0_StartTimer:
  1462                           	opt stack 0
  1463                           tblptru	equ	0xFF8
  1464                           tblptrh	equ	0xFF7
  1465                           tblptrl	equ	0xFF6
  1466                           tablat	equ	0xFF5
  1467                           intcon	equ	0xFF2
  1468                           postinc0	equ	0xFEE
  1469                           wreg	equ	0xFE8
  1470                           status	equ	0xFD8
  1471                           
  1472 ;; *************** function _TMR0_SetInterruptHandler *****************
  1473 ;; Defined at:
  1474 ;;		line 162 in file "mcc_generated_files/tmr0.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  1477 ;;		 -> ring(1), TMR0_DefaultInterruptHandler(1), 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1492 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1493 ;;Total ram usage:        2 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:    4
  1496 ;; This function calls:
  1497 ;;		Nothing
  1498 ;; This function is called by:
  1499 ;;		_TMR0_Initialize
  1500 ;;		_main
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text13
  1505  000820                     __ptext13:
  1506                           	opt stack 0
  1507  000820                     _TMR0_SetInterruptHandler:
  1508                           	opt stack 26
  1509                           
  1510                           ;tmr0.c: 163: TMR0_InterruptHandler = InterruptHandler;
  1511                           
  1512                           ;incstack = 0
  1513  000820  C013  F03E         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1514  000824  C014  F03F         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1515  000828  0012               	return		;funcret
  1516  00082A                     __end_of_TMR0_SetInterruptHandler:
  1517                           	opt stack 0
  1518                           tblptru	equ	0xFF8
  1519                           tblptrh	equ	0xFF7
  1520                           tblptrl	equ	0xFF6
  1521                           tablat	equ	0xFF5
  1522                           intcon	equ	0xFF2
  1523                           postinc0	equ	0xFEE
  1524                           wreg	equ	0xFE8
  1525                           status	equ	0xFD8
  1526                           
  1527 ;; *************** function _PIN_MANAGER_Initialize *****************
  1528 ;; Defined at:
  1529 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1547 ;;Total ram usage:        0 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    4
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_SYSTEM_Initialize
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text14
  1558  00065E                     __ptext14:
  1559                           	opt stack 0
  1560  00065E                     _PIN_MANAGER_Initialize:
  1561                           	opt stack 25
  1562                           
  1563                           ;pin_manager.c: 57: LATE = 0x00;
  1564                           
  1565                           ;incstack = 0
  1566  00065E  0E00               	movlw	0
  1567  000660  6E8D               	movwf	3981,c	;volatile
  1568                           
  1569                           ;pin_manager.c: 58: LATD = 0x30;
  1570  000662  0E30               	movlw	48
  1571  000664  6E8C               	movwf	3980,c	;volatile
  1572                           
  1573                           ;pin_manager.c: 59: LATA = 0x00;
  1574  000666  0E00               	movlw	0
  1575  000668  6E89               	movwf	3977,c	;volatile
  1576                           
  1577                           ;pin_manager.c: 60: LATF = 0x04;
  1578  00066A  0E04               	movlw	4
  1579  00066C  6E8E               	movwf	3982,c	;volatile
  1580                           
  1581                           ;pin_manager.c: 61: LATB = 0x00;
  1582  00066E  0E00               	movlw	0
  1583  000670  6E8A               	movwf	3978,c	;volatile
  1584                           
  1585                           ;pin_manager.c: 62: LATG = 0x00;
  1586  000672  0E00               	movlw	0
  1587  000674  6E8F               	movwf	3983,c	;volatile
  1588                           
  1589                           ;pin_manager.c: 63: LATC = 0x00;
  1590  000676  0E00               	movlw	0
  1591  000678  6E8B               	movwf	3979,c	;volatile
  1592                           
  1593                           ;pin_manager.c: 68: TRISE = 0xF7;
  1594  00067A  0EF7               	movlw	247
  1595  00067C  6E96               	movwf	3990,c	;volatile
  1596                           
  1597                           ;pin_manager.c: 69: TRISF = 0xFB;
  1598  00067E  0EFB               	movlw	251
  1599  000680  6E97               	movwf	3991,c	;volatile
  1600                           
  1601                           ;pin_manager.c: 70: TRISA = 0xEF;
  1602  000682  0EEF               	movlw	239
  1603  000684  6E92               	movwf	3986,c	;volatile
  1604                           
  1605                           ;pin_manager.c: 71: TRISG = 0x17;
  1606  000686  0E17               	movlw	23
  1607  000688  6E98               	movwf	3992,c	;volatile
  1608                           
  1609                           ;pin_manager.c: 72: TRISB = 0xDB;
  1610  00068A  0EDB               	movlw	219
  1611  00068C  6E93               	movwf	3987,c	;volatile
  1612                           
  1613                           ;pin_manager.c: 73: TRISC = 0xFF;
  1614  00068E  6894               	setf	3988,c	;volatile
  1615                           
  1616                           ;pin_manager.c: 74: TRISD = 0x8F;
  1617  000690  0E8F               	movlw	143
  1618  000692  6E95               	movwf	3989,c	;volatile
  1619                           
  1620                           ;pin_manager.c: 79: ANCON0 = 0xEF;
  1621  000694  0EEF               	movlw	239
  1622  000696  010F               	movlb	15	; () banked
  1623  000698  6F5D               	movwf	93,b	;volatile
  1624                           
  1625                           ;pin_manager.c: 80: ANCON1 = 0x7F;
  1626  00069A  0E7F               	movlw	127
  1627  00069C  6F5C               	movwf	92,b	;volatile
  1628                           
  1629                           ; BSR set to: 15
  1630                           ;pin_manager.c: 85: WPUB = 0xFF;
  1631  00069E  695B               	setf	91,b	;volatile
  1632                           
  1633                           ; BSR set to: 15
  1634  0006A0  0012               	return		;funcret
  1635  0006A2                     __end_of_PIN_MANAGER_Initialize:
  1636                           	opt stack 0
  1637                           tblptru	equ	0xFF8
  1638                           tblptrh	equ	0xFF7
  1639                           tblptrl	equ	0xFF6
  1640                           tablat	equ	0xFF5
  1641                           intcon	equ	0xFF2
  1642                           postinc0	equ	0xFEE
  1643                           wreg	equ	0xFE8
  1644                           status	equ	0xFD8
  1645                           
  1646 ;; *************** function _OSCILLATOR_Initialize *****************
  1647 ;; Defined at:
  1648 ;;		line 125 in file "mcc_generated_files/mcc.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1666 ;;Total ram usage:        0 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; Hardware stack levels required when called:    4
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_SYSTEM_Initialize
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text15
  1677  0007DE                     __ptext15:
  1678                           	opt stack 0
  1679  0007DE                     _OSCILLATOR_Initialize:
  1680                           	opt stack 25
  1681                           
  1682                           ;mcc.c: 128: OSCCON = 0x60;
  1683                           
  1684                           ; BSR set to: 15
  1685                           ;incstack = 0
  1686  0007DE  0E60               	movlw	96
  1687  0007E0  6ED3               	movwf	4051,c	;volatile
  1688                           
  1689                           ;mcc.c: 130: OSCCON2 = 0x00;
  1690  0007E2  0E00               	movlw	0
  1691  0007E4  6ED2               	movwf	4050,c	;volatile
  1692                           
  1693                           ;mcc.c: 132: OSCTUNE = 0x00;
  1694  0007E6  0E00               	movlw	0
  1695  0007E8  6E9B               	movwf	3995,c	;volatile
  1696                           
  1697                           ;mcc.c: 134: REFOCON = 0x00;
  1698  0007EA  0E00               	movlw	0
  1699  0007EC  6E9A               	movwf	3994,c	;volatile
  1700  0007EE  0012               	return		;funcret
  1701  0007F0                     __end_of_OSCILLATOR_Initialize:
  1702                           	opt stack 0
  1703                           tblptru	equ	0xFF8
  1704                           tblptrh	equ	0xFF7
  1705                           tblptrl	equ	0xFF6
  1706                           tablat	equ	0xFF5
  1707                           intcon	equ	0xFF2
  1708                           postinc0	equ	0xFEE
  1709                           wreg	equ	0xFE8
  1710                           status	equ	0xFD8
  1711                           
  1712 ;; *************** function _INTERRUPT_Initialize *****************
  1713 ;; Defined at:
  1714 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		None
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1732 ;;Total ram usage:        0 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    4
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_SYSTEM_Initialize
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text16
  1743  000862                     __ptext16:
  1744                           	opt stack 0
  1745  000862                     _INTERRUPT_Initialize:
  1746                           	opt stack 25
  1747                           
  1748                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1749                           
  1750                           ;incstack = 0
  1751  000862  9ED0               	bcf	4048,7,c	;volatile
  1752  000864  0012               	return		;funcret
  1753  000866                     __end_of_INTERRUPT_Initialize:
  1754                           	opt stack 0
  1755                           tblptru	equ	0xFF8
  1756                           tblptrh	equ	0xFF7
  1757                           tblptrl	equ	0xFF6
  1758                           tablat	equ	0xFF5
  1759                           intcon	equ	0xFF2
  1760                           postinc0	equ	0xFEE
  1761                           wreg	equ	0xFE8
  1762                           status	equ	0xFD8
  1763                           
  1764 ;; *************** function _EUSART1_Initialize *****************
  1765 ;; Defined at:
  1766 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1784 ;;Total ram usage:        0 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:    4
  1787 ;; This function calls:
  1788 ;;		Nothing
  1789 ;; This function is called by:
  1790 ;;		_SYSTEM_Initialize
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text17
  1795  0007C8                     __ptext17:
  1796                           	opt stack 0
  1797  0007C8                     _EUSART1_Initialize:
  1798                           	opt stack 25
  1799                           
  1800                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  1801                           
  1802                           ;incstack = 0
  1803  0007C8  0E08               	movlw	8
  1804  0007CA  6EA7               	movwf	4007,c	;volatile
  1805                           
  1806                           ;eusart1.c: 63: RCSTA1 = 0x80;
  1807  0007CC  0E80               	movlw	128
  1808  0007CE  6EAB               	movwf	4011,c	;volatile
  1809                           
  1810                           ;eusart1.c: 66: TXSTA1 = 0x24;
  1811  0007D0  0E24               	movlw	36
  1812  0007D2  6EAC               	movwf	4012,c	;volatile
  1813                           
  1814                           ;eusart1.c: 69: SPBRG1 = 0x22;
  1815  0007D4  0E22               	movlw	34
  1816  0007D6  6EAF               	movwf	4015,c	;volatile
  1817                           
  1818                           ;eusart1.c: 72: SPBRGH1 = 0x00;
  1819  0007D8  0E00               	movlw	0
  1820  0007DA  6E7D               	movwf	3965,c	;volatile
  1821  0007DC  0012               	return		;funcret
  1822  0007DE                     __end_of_EUSART1_Initialize:
  1823                           	opt stack 0
  1824                           tblptru	equ	0xFF8
  1825                           tblptrh	equ	0xFF7
  1826                           tblptrl	equ	0xFF6
  1827                           tablat	equ	0xFF5
  1828                           intcon	equ	0xFF2
  1829                           postinc0	equ	0xFEE
  1830                           wreg	equ	0xFE8
  1831                           status	equ	0xFD8
  1832                           
  1833 ;; *************** function _ECAN_Initialize *****************
  1834 ;; Defined at:
  1835 ;;		line 63 in file "mcc_generated_files/ecan.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;		None
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;		None
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      void 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, status,0
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1851 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1853 ;;Total ram usage:        1 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:    4
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_SYSTEM_Initialize
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text18
  1864  000536                     __ptext18:
  1865                           	opt stack 0
  1866  000536                     _ECAN_Initialize:
  1867                           	opt stack 25
  1868                           
  1869                           ;ecan.c: 65: CANCON = 0x80;
  1870                           
  1871                           ;incstack = 0
  1872  000536  0E80               	movlw	128
  1873  000538  6E6F               	movwf	3951,c	;volatile
  1874  00053A  506E               	movf	3950,w,c	;volatile
  1875  00053C  0BE0               	andlw	224
  1876  00053E  0A80               	xorlw	128
  1877  000540  A4D8               	btfss	status,2,c
  1878  000542  D7FB               	goto	l300
  1879                           
  1880                           ;ecan.c: 71: ECANCON = 0x00;
  1881  000544  0E00               	movlw	0
  1882  000546  6E72               	movwf	3954,c	;volatile
  1883                           
  1884                           ;ecan.c: 85: RXM0EIDH = 0xFF;
  1885  000548  010E               	movlb	14	; () banked
  1886  00054A  69FA               	setf	250,b	;volatile
  1887                           
  1888                           ; BSR set to: 14
  1889                           ;ecan.c: 86: RXM0EIDL = 0xFF;
  1890  00054C  69FB               	setf	251,b	;volatile
  1891                           
  1892                           ; BSR set to: 14
  1893                           ;ecan.c: 87: RXM0SIDH = 0xFF;
  1894  00054E  69F8               	setf	248,b	;volatile
  1895                           
  1896                           ; BSR set to: 14
  1897                           ;ecan.c: 88: RXM0SIDL = 0xFF;
  1898  000550  69F9               	setf	249,b	;volatile
  1899                           
  1900                           ; BSR set to: 14
  1901                           ;ecan.c: 90: RXM1EIDH = 0xFF;
  1902  000552  69FE               	setf	254,b	;volatile
  1903                           
  1904                           ; BSR set to: 14
  1905                           ;ecan.c: 91: RXM1EIDL = 0xFF;
  1906  000554  69FF               	setf	255,b	;volatile
  1907                           
  1908                           ; BSR set to: 14
  1909                           ;ecan.c: 92: RXM1SIDH = 0xFF;
  1910  000556  69FC               	setf	252,b	;volatile
  1911                           
  1912                           ; BSR set to: 14
  1913                           ;ecan.c: 93: RXM1SIDL = 0xFF;
  1914  000558  69FD               	setf	253,b	;volatile
  1915                           
  1916                           ;ecan.c: 99: RXF0EIDH = 0x00;
  1917  00055A  0E00               	movlw	0
  1918  00055C  6FE2               	movwf	226,b	;volatile
  1919                           
  1920                           ;ecan.c: 100: RXF0EIDL = 0x00;
  1921  00055E  0E00               	movlw	0
  1922  000560  6FE3               	movwf	227,b	;volatile
  1923                           
  1924                           ;ecan.c: 101: RXF0SIDH = 0x00;
  1925  000562  0E00               	movlw	0
  1926  000564  6FE0               	movwf	224,b	;volatile
  1927                           
  1928                           ;ecan.c: 102: RXF0SIDL = 0x00;
  1929  000566  0E00               	movlw	0
  1930  000568  6FE1               	movwf	225,b	;volatile
  1931                           
  1932                           ;ecan.c: 104: RXF1EIDH = 0x00;
  1933  00056A  0E00               	movlw	0
  1934  00056C  6FE6               	movwf	230,b	;volatile
  1935                           
  1936                           ;ecan.c: 105: RXF1EIDL = 0x00;
  1937  00056E  0E00               	movlw	0
  1938  000570  6FE7               	movwf	231,b	;volatile
  1939                           
  1940                           ;ecan.c: 106: RXF1SIDH = 0x00;
  1941  000572  0E00               	movlw	0
  1942  000574  6FE4               	movwf	228,b	;volatile
  1943                           
  1944                           ;ecan.c: 107: RXF1SIDL = 0x00;
  1945  000576  0E00               	movlw	0
  1946  000578  6FE5               	movwf	229,b	;volatile
  1947                           
  1948                           ;ecan.c: 109: RXF2EIDH = 0x00;
  1949  00057A  0E00               	movlw	0
  1950  00057C  6FEA               	movwf	234,b	;volatile
  1951                           
  1952                           ;ecan.c: 110: RXF2EIDL = 0x00;
  1953  00057E  0E00               	movlw	0
  1954  000580  6FEB               	movwf	235,b	;volatile
  1955                           
  1956                           ;ecan.c: 111: RXF2SIDH = 0x00;
  1957  000582  0E00               	movlw	0
  1958  000584  6FE8               	movwf	232,b	;volatile
  1959                           
  1960                           ;ecan.c: 112: RXF2SIDL = 0x00;
  1961  000586  0E00               	movlw	0
  1962  000588  6FE9               	movwf	233,b	;volatile
  1963                           
  1964                           ;ecan.c: 114: RXF3EIDH = 0x00;
  1965  00058A  0E00               	movlw	0
  1966  00058C  6FEE               	movwf	238,b	;volatile
  1967                           
  1968                           ;ecan.c: 115: RXF3EIDL = 0x00;
  1969  00058E  0E00               	movlw	0
  1970  000590  6FEF               	movwf	239,b	;volatile
  1971                           
  1972                           ;ecan.c: 116: RXF3SIDH = 0x00;
  1973  000592  0E00               	movlw	0
  1974  000594  6FEC               	movwf	236,b	;volatile
  1975                           
  1976                           ;ecan.c: 117: RXF3SIDL = 0x00;
  1977  000596  0E00               	movlw	0
  1978  000598  6FED               	movwf	237,b	;volatile
  1979                           
  1980                           ;ecan.c: 119: RXF4EIDH = 0x00;
  1981  00059A  0E00               	movlw	0
  1982  00059C  6FF2               	movwf	242,b	;volatile
  1983                           
  1984                           ;ecan.c: 120: RXF4EIDL = 0x00;
  1985  00059E  0E00               	movlw	0
  1986  0005A0  6FF3               	movwf	243,b	;volatile
  1987                           
  1988                           ;ecan.c: 121: RXF4SIDH = 0x00;
  1989  0005A2  0E00               	movlw	0
  1990  0005A4  6FF0               	movwf	240,b	;volatile
  1991                           
  1992                           ;ecan.c: 122: RXF4SIDL = 0x00;
  1993  0005A6  0E00               	movlw	0
  1994  0005A8  6FF1               	movwf	241,b	;volatile
  1995                           
  1996                           ;ecan.c: 124: RXF5EIDH = 0x00;
  1997  0005AA  0E00               	movlw	0
  1998  0005AC  6FF6               	movwf	246,b	;volatile
  1999                           
  2000                           ;ecan.c: 125: RXF5EIDL = 0x00;
  2001  0005AE  0E00               	movlw	0
  2002  0005B0  6FF7               	movwf	247,b	;volatile
  2003                           
  2004                           ;ecan.c: 126: RXF5SIDH = 0x00;
  2005  0005B2  0E00               	movlw	0
  2006  0005B4  6FF4               	movwf	244,b	;volatile
  2007                           
  2008                           ;ecan.c: 127: RXF5SIDL = 0x00;
  2009  0005B6  0E00               	movlw	0
  2010  0005B8  6FF5               	movwf	245,b	;volatile
  2011                           
  2012                           ;ecan.c: 142: BRGCON1 = 0x00;
  2013  0005BA  0E00               	movlw	0
  2014  0005BC  6F43               	movwf	67,b	;volatile
  2015                           
  2016                           ;ecan.c: 143: BRGCON2 = 0x98;
  2017  0005BE  0E98               	movlw	152
  2018  0005C0  6F44               	movwf	68,b	;volatile
  2019                           
  2020                           ;ecan.c: 144: BRGCON3 = 0x01;
  2021  0005C2  0E01               	movlw	1
  2022  0005C4  6F45               	movwf	69,b	;volatile
  2023                           
  2024                           ;ecan.c: 146: CANCON = 0x00;
  2025  0005C6  0E00               	movlw	0
  2026  0005C8  6E6F               	movwf	3951,c	;volatile
  2027  0005CA                     
  2028                           ; BSR set to: 14
  2029                           
  2030                           ; BSR set to: 14
  2031  0005CA  CF6E F013          	movff	3950,??_ECAN_Initialize	;volatile
  2032  0005CE  0EE0               	movlw	224
  2033  0005D0  1613               	andwf	??_ECAN_Initialize,f,c
  2034  0005D2  B4D8               	btfsc	status,2,c
  2035  0005D4  0012               	return	
  2036  0005D6  D7F9               	goto	l303
  2037  0005D8                     __end_of_ECAN_Initialize:
  2038                           	opt stack 0
  2039                           tblptru	equ	0xFF8
  2040                           tblptrh	equ	0xFF7
  2041                           tblptrl	equ	0xFF6
  2042                           tablat	equ	0xFF5
  2043                           intcon	equ	0xFF2
  2044                           postinc0	equ	0xFEE
  2045                           wreg	equ	0xFE8
  2046                           status	equ	0xFD8
  2047                           
  2048 ;; *************** function _EUSART1_Write *****************
  2049 ;; Defined at:
  2050 ;;		line 97 in file "mcc_generated_files/eusart1.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  txData          1    wreg     unsigned char 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  txData          1   18[COMRAM] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2067 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2068 ;;Total ram usage:        1 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; Hardware stack levels required when called:    4
  2071 ;; This function calls:
  2072 ;;		Nothing
  2073 ;; This function is called by:
  2074 ;;		_main
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text19
  2079  000800                     __ptext19:
  2080                           	opt stack 0
  2081  000800                     _EUSART1_Write:
  2082                           	opt stack 26
  2083                           
  2084                           ;incstack = 0
  2085                           ;EUSART1_Write@txData stored from wreg
  2086  000800  6E13               	movwf	EUSART1_Write@txData,c
  2087  000802                     
  2088                           ;eusart1.c: 100: {
  2089                           
  2090                           ;eusart1.c: 99: while(0 == PIR1bits.TX1IF)
  2091  000802  A89E               	btfss	3998,4,c	;volatile
  2092  000804  D7FE               	goto	l1469
  2093                           
  2094                           ;eusart1.c: 101: }
  2095                           ;eusart1.c: 103: TXREG1 = txData;
  2096  000806  C013  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2097  00080A  0012               	return		;funcret
  2098  00080C                     __end_of_EUSART1_Write:
  2099                           	opt stack 0
  2100                           tblptru	equ	0xFF8
  2101                           tblptrh	equ	0xFF7
  2102                           tblptrl	equ	0xFF6
  2103                           tablat	equ	0xFF5
  2104                           intcon	equ	0xFF2
  2105                           postinc0	equ	0xFEE
  2106                           wreg	equ	0xFE8
  2107                           status	equ	0xFD8
  2108                           
  2109 ;; *************** function _CAN_receive *****************
  2110 ;; Defined at:
  2111 ;;		line 239 in file "mcc_generated_files/ecan.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  tempCanMsg      2   37[COMRAM] PTR struct .
  2114 ;;		 -> canMessage(14), 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  returnValue     1   39[COMRAM] unsigned char 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      unsigned char 
  2119 ;; Registers used:
  2120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2129 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2130 ;;Total ram usage:        3 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    5
  2133 ;; This function calls:
  2134 ;;		_convertReg2ExtendedCANid
  2135 ;;		_convertReg2StandardCANid
  2136 ;; This function is called by:
  2137 ;;		_main
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text20
  2142  0000BA                     __ptext20:
  2143                           	opt stack 0
  2144  0000BA                     _CAN_receive:
  2145                           	opt stack 25
  2146                           
  2147                           ;ecan.c: 240: unsigned char returnValue = 0;
  2148                           
  2149                           ;incstack = 0
  2150  0000BA  0E00               	movlw	0
  2151  0000BC  6E28               	movwf	CAN_receive@returnValue,c
  2152                           
  2153                           ;ecan.c: 244: {
  2154                           ;ecan.c: 247: if (RXB0CONbits.RXFUL != 0)
  2155  0000BE  AE60               	btfss	3936,7,c	;volatile
  2156  0000C0  D083               	goto	l322
  2157                           
  2158                           ;ecan.c: 248: {
  2159                           ;ecan.c: 249: if ((RXB0SIDL & 0x08) == 0x08)
  2160  0000C2  A662               	btfss	3938,3,c	;volatile
  2161  0000C4  D01E               	goto	l323
  2162                           
  2163                           ;ecan.c: 250: {
  2164                           ;ecan.c: 252: tempCanMsg->frame.idType = (unsigned char) 2;
  2165  0000C6  C026  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2166  0000CA  C027  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2167  0000CE  0E02               	movlw	2
  2168  0000D0  6EDF               	movwf	indf2,c
  2169                           
  2170                           ;ecan.c: 253: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB0EIDH, RXB0EIDL, RXB0SI
      +                          DH, RXB0SIDL);
  2171  0000D2  CF64 F013          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  2172  0000D6  CF61 F014          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  2173  0000DA  CF62 F015          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  2174  0000DE  5063               	movf	3939,w,c	;volatile
  2175  0000E0  EC70  F001         	call	_convertReg2ExtendedCANid
  2176  0000E4  EE20 F001          	lfsr	2,1
  2177  0000E8  5026               	movf	CAN_receive@tempCanMsg,w,c
  2178  0000EA  26D9               	addwf	fsr2l,f,c
  2179  0000EC  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2180  0000EE  22DA               	addwfc	fsr2h,f,c
  2181  0000F0  C013  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  2182  0000F4  C014  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  2183  0000F8  C015  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  2184  0000FC  C016  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  2185                           
  2186                           ;ecan.c: 254: } else {
  2187  000100  D019               	goto	l324
  2188  000102                     l323:
  2189                           
  2190                           ;ecan.c: 256: tempCanMsg->frame.idType = (unsigned char) 1;
  2191  000102  C026  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2192  000106  C027  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2193  00010A  0E01               	movlw	1
  2194  00010C  6EDF               	movwf	indf2,c
  2195                           
  2196                           ;ecan.c: 257: tempCanMsg->frame.id = convertReg2StandardCANid(RXB0SIDH, RXB0SIDL);
  2197  00010E  CF62 F013          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  2198  000112  5061               	movf	3937,w,c	;volatile
  2199  000114  ECEC  F002         	call	_convertReg2StandardCANid
  2200  000118  EE20 F001          	lfsr	2,1
  2201  00011C  5026               	movf	CAN_receive@tempCanMsg,w,c
  2202  00011E  26D9               	addwf	fsr2l,f,c
  2203  000120  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2204  000122  22DA               	addwfc	fsr2h,f,c
  2205  000124  C013  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  2206  000128  C014  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  2207  00012C  C015  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  2208  000130  C016  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  2209  000134                     l324:
  2210                           
  2211                           ;ecan.c: 258: }
  2212                           ;ecan.c: 260: tempCanMsg->frame.dlc = RXB0DLC;
  2213  000134  EE20 F005          	lfsr	2,5
  2214  000138  5026               	movf	CAN_receive@tempCanMsg,w,c
  2215  00013A  26D9               	addwf	fsr2l,f,c
  2216  00013C  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2217  00013E  22DA               	addwfc	fsr2h,f,c
  2218  000140  CF65 FFDF          	movff	3941,indf2	;volatile
  2219                           
  2220                           ;ecan.c: 261: tempCanMsg->frame.data0 = RXB0D0;
  2221  000144  EE20 F006          	lfsr	2,6
  2222  000148  5026               	movf	CAN_receive@tempCanMsg,w,c
  2223  00014A  26D9               	addwf	fsr2l,f,c
  2224  00014C  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2225  00014E  22DA               	addwfc	fsr2h,f,c
  2226  000150  CF66 FFDF          	movff	3942,indf2	;volatile
  2227                           
  2228                           ;ecan.c: 262: tempCanMsg->frame.data1 = RXB0D1;
  2229  000154  EE20 F007          	lfsr	2,7
  2230  000158  5026               	movf	CAN_receive@tempCanMsg,w,c
  2231  00015A  26D9               	addwf	fsr2l,f,c
  2232  00015C  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2233  00015E  22DA               	addwfc	fsr2h,f,c
  2234  000160  CF67 FFDF          	movff	3943,indf2	;volatile
  2235                           
  2236                           ;ecan.c: 263: tempCanMsg->frame.data2 = RXB0D2;
  2237  000164  EE20 F008          	lfsr	2,8
  2238  000168  5026               	movf	CAN_receive@tempCanMsg,w,c
  2239  00016A  26D9               	addwf	fsr2l,f,c
  2240  00016C  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2241  00016E  22DA               	addwfc	fsr2h,f,c
  2242  000170  CF68 FFDF          	movff	3944,indf2	;volatile
  2243                           
  2244                           ;ecan.c: 264: tempCanMsg->frame.data3 = RXB0D3;
  2245  000174  EE20 F009          	lfsr	2,9
  2246  000178  5026               	movf	CAN_receive@tempCanMsg,w,c
  2247  00017A  26D9               	addwf	fsr2l,f,c
  2248  00017C  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2249  00017E  22DA               	addwfc	fsr2h,f,c
  2250  000180  CF69 FFDF          	movff	3945,indf2	;volatile
  2251                           
  2252                           ;ecan.c: 265: tempCanMsg->frame.data4 = RXB0D4;
  2253  000184  EE20 F00A          	lfsr	2,10
  2254  000188  5026               	movf	CAN_receive@tempCanMsg,w,c
  2255  00018A  26D9               	addwf	fsr2l,f,c
  2256  00018C  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2257  00018E  22DA               	addwfc	fsr2h,f,c
  2258  000190  CF6A FFDF          	movff	3946,indf2	;volatile
  2259                           
  2260                           ;ecan.c: 266: tempCanMsg->frame.data5 = RXB0D5;
  2261  000194  EE20 F00B          	lfsr	2,11
  2262  000198  5026               	movf	CAN_receive@tempCanMsg,w,c
  2263  00019A  26D9               	addwf	fsr2l,f,c
  2264  00019C  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2265  00019E  22DA               	addwfc	fsr2h,f,c
  2266  0001A0  CF6B FFDF          	movff	3947,indf2	;volatile
  2267                           
  2268                           ;ecan.c: 267: tempCanMsg->frame.data6 = RXB0D6;
  2269  0001A4  EE20 F00C          	lfsr	2,12
  2270  0001A8  5026               	movf	CAN_receive@tempCanMsg,w,c
  2271  0001AA  26D9               	addwf	fsr2l,f,c
  2272  0001AC  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2273  0001AE  22DA               	addwfc	fsr2h,f,c
  2274  0001B0  CF6C FFDF          	movff	3948,indf2	;volatile
  2275                           
  2276                           ;ecan.c: 268: tempCanMsg->frame.data7 = RXB0D7;
  2277  0001B4  EE20 F00D          	lfsr	2,13
  2278  0001B8  5026               	movf	CAN_receive@tempCanMsg,w,c
  2279  0001BA  26D9               	addwf	fsr2l,f,c
  2280  0001BC  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2281  0001BE  22DA               	addwfc	fsr2h,f,c
  2282  0001C0  CF6D FFDF          	movff	3949,indf2	;volatile
  2283                           
  2284                           ;ecan.c: 269: RXB0CONbits.RXFUL = 0;
  2285  0001C4  9E60               	bcf	3936,7,c	;volatile
  2286  0001C6  D087               	goto	l1941
  2287  0001C8                     l322:
  2288  0001C8  010F               	movlb	15	; () banked
  2289  0001CA  AF30               	btfss	48,7,b	;volatile
  2290  0001CC  D086               	goto	l326
  2291                           
  2292                           ; BSR set to: 15
  2293                           ;ecan.c: 272: {
  2294                           ;ecan.c: 273: if ((RXB1SIDL & 0x08) == 0x08)
  2295  0001CE  A732               	btfss	50,3,b	;volatile
  2296  0001D0  D01E               	goto	l327
  2297                           
  2298                           ; BSR set to: 15
  2299                           ;ecan.c: 274: {
  2300                           ;ecan.c: 276: tempCanMsg->frame.idType = (unsigned char) 2;
  2301  0001D2  C026  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2302  0001D6  C027  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2303  0001DA  0E02               	movlw	2
  2304  0001DC  6EDF               	movwf	indf2,c
  2305                           
  2306                           ; BSR set to: 15
  2307                           ;ecan.c: 277: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB1EIDH, RXB1EIDL, RXB1SI
      +                          DH, RXB1SIDL);
  2308  0001DE  CF34 F013          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  2309  0001E2  CF31 F014          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  2310  0001E6  CF32 F015          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  2311  0001EA  5133               	movf	51,w,b	;volatile
  2312  0001EC  EC70  F001         	call	_convertReg2ExtendedCANid
  2313  0001F0  EE20 F001          	lfsr	2,1
  2314  0001F4  5026               	movf	CAN_receive@tempCanMsg,w,c
  2315  0001F6  26D9               	addwf	fsr2l,f,c
  2316  0001F8  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2317  0001FA  22DA               	addwfc	fsr2h,f,c
  2318  0001FC  C013  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  2319  000200  C014  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  2320  000204  C015  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  2321  000208  C016  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  2322                           
  2323                           ;ecan.c: 278: }
  2324  00020C  D01A               	goto	l328
  2325  00020E                     l327:
  2326                           
  2327                           ;ecan.c: 279: else
  2328                           ;ecan.c: 280: {
  2329                           ;ecan.c: 282: tempCanMsg->frame.idType = (unsigned char) 1;
  2330  00020E  C026  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2331  000212  C027  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2332  000216  0E01               	movlw	1
  2333  000218  6EDF               	movwf	indf2,c
  2334                           
  2335                           ;ecan.c: 283: tempCanMsg->frame.id = convertReg2StandardCANid(RXB1SIDH, RXB1SIDL);
  2336  00021A  CF32 F013          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  2337  00021E  010F               	movlb	15	; () banked
  2338  000220  5131               	movf	49,w,b	;volatile
  2339  000222  ECEC  F002         	call	_convertReg2StandardCANid
  2340  000226  EE20 F001          	lfsr	2,1
  2341  00022A  5026               	movf	CAN_receive@tempCanMsg,w,c
  2342  00022C  26D9               	addwf	fsr2l,f,c
  2343  00022E  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2344  000230  22DA               	addwfc	fsr2h,f,c
  2345  000232  C013  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  2346  000236  C014  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  2347  00023A  C015  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  2348  00023E  C016  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  2349  000242                     l328:
  2350                           
  2351                           ;ecan.c: 284: }
  2352                           ;ecan.c: 286: tempCanMsg->frame.dlc = RXB1DLC;
  2353  000242  EE20 F005          	lfsr	2,5
  2354  000246  5026               	movf	CAN_receive@tempCanMsg,w,c
  2355  000248  26D9               	addwf	fsr2l,f,c
  2356  00024A  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2357  00024C  22DA               	addwfc	fsr2h,f,c
  2358  00024E  CF35 FFDF          	movff	3893,indf2	;volatile
  2359                           
  2360                           ;ecan.c: 287: tempCanMsg->frame.data0 = RXB1D0;
  2361  000252  EE20 F006          	lfsr	2,6
  2362  000256  5026               	movf	CAN_receive@tempCanMsg,w,c
  2363  000258  26D9               	addwf	fsr2l,f,c
  2364  00025A  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2365  00025C  22DA               	addwfc	fsr2h,f,c
  2366  00025E  CF36 FFDF          	movff	3894,indf2	;volatile
  2367                           
  2368                           ;ecan.c: 288: tempCanMsg->frame.data1 = RXB1D1;
  2369  000262  EE20 F007          	lfsr	2,7
  2370  000266  5026               	movf	CAN_receive@tempCanMsg,w,c
  2371  000268  26D9               	addwf	fsr2l,f,c
  2372  00026A  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2373  00026C  22DA               	addwfc	fsr2h,f,c
  2374  00026E  CF37 FFDF          	movff	3895,indf2	;volatile
  2375                           
  2376                           ;ecan.c: 289: tempCanMsg->frame.data2 = RXB1D2;
  2377  000272  EE20 F008          	lfsr	2,8
  2378  000276  5026               	movf	CAN_receive@tempCanMsg,w,c
  2379  000278  26D9               	addwf	fsr2l,f,c
  2380  00027A  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2381  00027C  22DA               	addwfc	fsr2h,f,c
  2382  00027E  CF38 FFDF          	movff	3896,indf2	;volatile
  2383                           
  2384                           ;ecan.c: 290: tempCanMsg->frame.data3 = RXB1D3;
  2385  000282  EE20 F009          	lfsr	2,9
  2386  000286  5026               	movf	CAN_receive@tempCanMsg,w,c
  2387  000288  26D9               	addwf	fsr2l,f,c
  2388  00028A  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2389  00028C  22DA               	addwfc	fsr2h,f,c
  2390  00028E  CF39 FFDF          	movff	3897,indf2	;volatile
  2391                           
  2392                           ;ecan.c: 291: tempCanMsg->frame.data4 = RXB1D4;
  2393  000292  EE20 F00A          	lfsr	2,10
  2394  000296  5026               	movf	CAN_receive@tempCanMsg,w,c
  2395  000298  26D9               	addwf	fsr2l,f,c
  2396  00029A  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2397  00029C  22DA               	addwfc	fsr2h,f,c
  2398  00029E  CF3A FFDF          	movff	3898,indf2	;volatile
  2399                           
  2400                           ;ecan.c: 292: tempCanMsg->frame.data5 = RXB1D5;
  2401  0002A2  EE20 F00B          	lfsr	2,11
  2402  0002A6  5026               	movf	CAN_receive@tempCanMsg,w,c
  2403  0002A8  26D9               	addwf	fsr2l,f,c
  2404  0002AA  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2405  0002AC  22DA               	addwfc	fsr2h,f,c
  2406  0002AE  CF3B FFDF          	movff	3899,indf2	;volatile
  2407                           
  2408                           ;ecan.c: 293: tempCanMsg->frame.data6 = RXB1D6;
  2409  0002B2  EE20 F00C          	lfsr	2,12
  2410  0002B6  5026               	movf	CAN_receive@tempCanMsg,w,c
  2411  0002B8  26D9               	addwf	fsr2l,f,c
  2412  0002BA  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2413  0002BC  22DA               	addwfc	fsr2h,f,c
  2414  0002BE  CF3C FFDF          	movff	3900,indf2	;volatile
  2415                           
  2416                           ;ecan.c: 294: tempCanMsg->frame.data7 = RXB1D7;
  2417  0002C2  EE20 F00D          	lfsr	2,13
  2418  0002C6  5026               	movf	CAN_receive@tempCanMsg,w,c
  2419  0002C8  26D9               	addwf	fsr2l,f,c
  2420  0002CA  5027               	movf	CAN_receive@tempCanMsg+1,w,c
  2421  0002CC  22DA               	addwfc	fsr2h,f,c
  2422  0002CE  CF3D FFDF          	movff	3901,indf2	;volatile
  2423                           
  2424                           ;ecan.c: 295: RXB1CONbits.RXFUL = 0;
  2425  0002D2  010F               	movlb	15	; () banked
  2426  0002D4  9F30               	bcf	48,7,b	;volatile
  2427  0002D6                     l1941:
  2428                           
  2429                           ; BSR set to: 15
  2430                           ;ecan.c: 296: returnValue = 1;
  2431  0002D6  0E01               	movlw	1
  2432  0002D8  6E28               	movwf	CAN_receive@returnValue,c
  2433  0002DA                     l326:
  2434                           
  2435                           ;ecan.c: 297: }
  2436                           ;ecan.c: 300: PIR5bits.RXB1IF = 0;
  2437                           
  2438                           ; BSR set to: 15
  2439                           
  2440                           ; BSR set to: 15
  2441  0002DA  9277               	bcf	3959,1,c	;volatile
  2442                           
  2443                           ;ecan.c: 301: }
  2444                           ;ecan.c: 304: return (returnValue);
  2445  0002DC  5028               	movf	CAN_receive@returnValue,w,c
  2446  0002DE  0012               	return	
  2447  0002E0                     __end_of_CAN_receive:
  2448                           	opt stack 0
  2449                           tblptru	equ	0xFF8
  2450                           tblptrh	equ	0xFF7
  2451                           tblptrl	equ	0xFF6
  2452                           tablat	equ	0xFF5
  2453                           intcon	equ	0xFF2
  2454                           postinc0	equ	0xFEE
  2455                           wreg	equ	0xFE8
  2456                           indf2	equ	0xFDF
  2457                           postinc2	equ	0xFDE
  2458                           fsr2h	equ	0xFDA
  2459                           fsr2l	equ	0xFD9
  2460                           status	equ	0xFD8
  2461                           
  2462 ;; *************** function _convertReg2StandardCANid *****************
  2463 ;; Defined at:
  2464 ;;		line 385 in file "mcc_generated_files/ecan.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  tempRXBn_SID    1    wreg     unsigned char 
  2467 ;;  tempRXBn_SID    1   18[COMRAM] unsigned char 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  tempRXBn_SID    1   24[COMRAM] unsigned char 
  2470 ;;  ConvertedID     4   29[COMRAM] unsigned long 
  2471 ;;  returnValue     4   25[COMRAM] unsigned long 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  4   18[COMRAM] unsigned long 
  2474 ;; Registers used:
  2475 ;;		wreg, status,2, status,0
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2481 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2482 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2484 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2485 ;;Total ram usage:       15 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    4
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_CAN_receive
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text21
  2496  0005D8                     __ptext21:
  2497                           	opt stack 0
  2498  0005D8                     _convertReg2StandardCANid:
  2499                           	opt stack 25
  2500                           
  2501                           ;incstack = 0
  2502                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  2503  0005D8  6E19               	movwf	convertReg2StandardCANid@tempRXBn_SIDH,c
  2504                           
  2505                           ;ecan.c: 386: unsigned long returnValue = 0;
  2506  0005DA  0E00               	movlw	0
  2507  0005DC  6E1A               	movwf	convertReg2StandardCANid@returnValue,c
  2508  0005DE  0E00               	movlw	0
  2509  0005E0  6E1B               	movwf	convertReg2StandardCANid@returnValue+1,c
  2510  0005E2  0E00               	movlw	0
  2511  0005E4  6E1C               	movwf	convertReg2StandardCANid@returnValue+2,c
  2512  0005E6  0E00               	movlw	0
  2513  0005E8  6E1D               	movwf	convertReg2StandardCANid@returnValue+3,c
  2514                           
  2515                           ;ecan.c: 387: unsigned long ConvertedID;
  2516                           ;ecan.c: 391: ConvertedID = (tempRXBn_SIDH << 3);
  2517  0005EA  5019               	movf	convertReg2StandardCANid@tempRXBn_SIDH,w,c
  2518  0005EC  6E17               	movwf	??_convertReg2StandardCANid& (0+255),c
  2519  0005EE  6A18               	clrf	(??_convertReg2StandardCANid+1)& (0+255),c
  2520  0005F0  90D8               	bcf	status,0,c
  2521  0005F2  3617               	rlcf	??_convertReg2StandardCANid,f,c
  2522  0005F4  3618               	rlcf	??_convertReg2StandardCANid+1,f,c
  2523  0005F6  90D8               	bcf	status,0,c
  2524  0005F8  3617               	rlcf	??_convertReg2StandardCANid,f,c
  2525  0005FA  3618               	rlcf	??_convertReg2StandardCANid+1,f,c
  2526  0005FC  90D8               	bcf	status,0,c
  2527  0005FE  3617               	rlcf	??_convertReg2StandardCANid,f,c
  2528  000600  3618               	rlcf	??_convertReg2StandardCANid+1,f,c
  2529  000602  C017  F01E         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  2530  000606  C018  F01F         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  2531  00060A  0E00               	movlw	0
  2532  00060C  BE1F               	btfsc	convertReg2StandardCANid@ConvertedID+1,7,c
  2533  00060E  0EFF               	movlw	-1
  2534  000610  6E20               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  2535  000612  6E21               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  2536                           
  2537                           ;ecan.c: 392: ConvertedID = ConvertedID + (tempRXBn_SIDL >> 5);
  2538  000614  C013  F017         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  2539  000618  0E05               	movlw	5
  2540  00061A  6E18               	movwf	(??_convertReg2StandardCANid+1)& (0+255),c
  2541  00061C                     u425:
  2542  00061C  90D8               	bcf	status,0,c
  2543  00061E  3217               	rrcf	??_convertReg2StandardCANid,f,c
  2544  000620  2E18               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,c
  2545  000622  D7FC               	goto	u425
  2546  000624  5017               	movf	??_convertReg2StandardCANid,w,c
  2547  000626  241E               	addwf	convertReg2StandardCANid@ConvertedID,w,c
  2548  000628  6E1E               	movwf	convertReg2StandardCANid@ConvertedID,c
  2549  00062A  0E00               	movlw	0
  2550  00062C  201F               	addwfc	convertReg2StandardCANid@ConvertedID+1,w,c
  2551  00062E  6E1F               	movwf	convertReg2StandardCANid@ConvertedID+1,c
  2552  000630  0E00               	movlw	0
  2553  000632  2020               	addwfc	convertReg2StandardCANid@ConvertedID+2,w,c
  2554  000634  6E20               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  2555  000636  0E00               	movlw	0
  2556  000638  2021               	addwfc	convertReg2StandardCANid@ConvertedID+3,w,c
  2557  00063A  6E21               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  2558                           
  2559                           ;ecan.c: 393: returnValue = ConvertedID;
  2560  00063C  C01E  F01A         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  2561  000640  C01F  F01B         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  2562  000644  C020  F01C         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  2563  000648  C021  F01D         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  2564                           
  2565                           ;ecan.c: 394: return (returnValue);
  2566  00064C  C01A  F013         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  2567  000650  C01B  F014         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  2568  000654  C01C  F015         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  2569  000658  C01D  F016         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  2570  00065C  0012               	return	
  2571  00065E                     __end_of_convertReg2StandardCANid:
  2572                           	opt stack 0
  2573                           tblptru	equ	0xFF8
  2574                           tblptrh	equ	0xFF7
  2575                           tblptrl	equ	0xFF6
  2576                           tablat	equ	0xFF5
  2577                           intcon	equ	0xFF2
  2578                           postinc0	equ	0xFEE
  2579                           wreg	equ	0xFE8
  2580                           indf2	equ	0xFDF
  2581                           postinc2	equ	0xFDE
  2582                           fsr2h	equ	0xFDA
  2583                           fsr2l	equ	0xFD9
  2584                           status	equ	0xFD8
  2585                           
  2586 ;; *************** function _convertReg2ExtendedCANid *****************
  2587 ;; Defined at:
  2588 ;;		line 365 in file "mcc_generated_files/ecan.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  tempRXBn_EID    1    wreg     unsigned char 
  2591 ;;  tempRXBn_EID    1   18[COMRAM] unsigned char 
  2592 ;;  tempRXBn_SID    1   19[COMRAM] unsigned char 
  2593 ;;  tempRXBn_SID    1   20[COMRAM] unsigned char 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  tempRXBn_EID    1   26[COMRAM] unsigned char 
  2596 ;;  ConvertedID     4   33[COMRAM] unsigned long 
  2597 ;;  returnValue     4   27[COMRAM] unsigned long 
  2598 ;;  CAN_standard    1   32[COMRAM] unsigned char 
  2599 ;;  CAN_standard    1   31[COMRAM] unsigned char 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  4   18[COMRAM] unsigned long 
  2602 ;; Registers used:
  2603 ;;		wreg, status,2, status,0
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2609 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2610 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2611 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2612 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2613 ;;Total ram usage:       19 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    4
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_CAN_receive
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text22
  2624  0002E0                     __ptext22:
  2625                           	opt stack 0
  2626  0002E0                     _convertReg2ExtendedCANid:
  2627                           	opt stack 25
  2628                           
  2629                           ;incstack = 0
  2630                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  2631  0002E0  6E1B               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH,c
  2632                           
  2633                           ;ecan.c: 366: unsigned long returnValue = 0;
  2634  0002E2  0E00               	movlw	0
  2635  0002E4  6E1C               	movwf	convertReg2ExtendedCANid@returnValue,c
  2636  0002E6  0E00               	movlw	0
  2637  0002E8  6E1D               	movwf	convertReg2ExtendedCANid@returnValue+1,c
  2638  0002EA  0E00               	movlw	0
  2639  0002EC  6E1E               	movwf	convertReg2ExtendedCANid@returnValue+2,c
  2640  0002EE  0E00               	movlw	0
  2641  0002F0  6E1F               	movwf	convertReg2ExtendedCANid@returnValue+3,c
  2642                           
  2643                           ;ecan.c: 367: unsigned long ConvertedID = 0;
  2644  0002F2  0E00               	movlw	0
  2645  0002F4  6E22               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2646  0002F6  0E00               	movlw	0
  2647  0002F8  6E23               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2648  0002FA  0E00               	movlw	0
  2649  0002FC  6E24               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2650  0002FE  0E00               	movlw	0
  2651  000300  6E25               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2652                           
  2653                           ;ecan.c: 368: unsigned char CAN_standardLo_ID_lo2bits;
  2654                           ;ecan.c: 369: unsigned char CAN_standardLo_ID_hi3bits;
  2655                           ;ecan.c: 371: CAN_standardLo_ID_lo2bits = (tempRXBn_SIDL & 0x03);
  2656  000302  5015               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  2657  000304  0B03               	andlw	3
  2658  000306  6E20               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,c
  2659                           
  2660                           ;ecan.c: 372: CAN_standardLo_ID_hi3bits = (tempRXBn_SIDL >> 5);
  2661  000308  3815               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  2662  00030A  42E8               	rrncf	wreg,f,c
  2663  00030C  0B07               	andlw	7
  2664  00030E  6E21               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,c
  2665                           
  2666                           ;ecan.c: 373: ConvertedID = (tempRXBn_SIDH << 3);
  2667  000310  5014               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH,w,c
  2668  000312  6E17               	movwf	??_convertReg2ExtendedCANid& (0+255),c
  2669  000314  6A18               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),c
  2670  000316  90D8               	bcf	status,0,c
  2671  000318  3617               	rlcf	??_convertReg2ExtendedCANid,f,c
  2672  00031A  3618               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2673  00031C  90D8               	bcf	status,0,c
  2674  00031E  3617               	rlcf	??_convertReg2ExtendedCANid,f,c
  2675  000320  3618               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2676  000322  90D8               	bcf	status,0,c
  2677  000324  3617               	rlcf	??_convertReg2ExtendedCANid,f,c
  2678  000326  3618               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2679  000328  C017  F022         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2680  00032C  C018  F023         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2681  000330  0E00               	movlw	0
  2682  000332  BE23               	btfsc	convertReg2ExtendedCANid@ConvertedID+1,7,c
  2683  000334  0EFF               	movlw	-1
  2684  000336  6E24               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2685  000338  6E25               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2686                           
  2687                           ;ecan.c: 374: ConvertedID = ConvertedID + CAN_standardLo_ID_hi3bits;
  2688  00033A  5021               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,w,c
  2689  00033C  2422               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2690  00033E  6E22               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2691  000340  0E00               	movlw	0
  2692  000342  2023               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2693  000344  6E23               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2694  000346  0E00               	movlw	0
  2695  000348  2024               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2696  00034A  6E24               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2697  00034C  0E00               	movlw	0
  2698  00034E  2025               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2699  000350  6E25               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2700                           
  2701                           ;ecan.c: 375: ConvertedID = (ConvertedID << 2);
  2702  000352  C022  F017         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  2703  000356  C023  F018         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  2704  00035A  C024  F019         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  2705  00035E  C025  F01A         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  2706  000362  0E02               	movlw	2
  2707  000364                     u415:
  2708  000364  90D8               	bcf	status,0,c
  2709  000366  3617               	rlcf	??_convertReg2ExtendedCANid,f,c
  2710  000368  3618               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2711  00036A  3619               	rlcf	??_convertReg2ExtendedCANid+2,f,c
  2712  00036C  361A               	rlcf	??_convertReg2ExtendedCANid+3,f,c
  2713  00036E  2EE8               	decfsz	wreg,f,c
  2714  000370  D7F9               	goto	u415
  2715  000372  C017  F022         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2716  000376  C018  F023         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2717  00037A  C019  F024         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2718  00037E  C01A  F025         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2719                           
  2720                           ;ecan.c: 376: ConvertedID = ConvertedID + CAN_standardLo_ID_lo2bits;
  2721  000382  5020               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,w,c
  2722  000384  2422               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2723  000386  6E22               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2724  000388  0E00               	movlw	0
  2725  00038A  2023               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2726  00038C  6E23               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2727  00038E  0E00               	movlw	0
  2728  000390  2024               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2729  000392  6E24               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2730  000394  0E00               	movlw	0
  2731  000396  2025               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2732  000398  6E25               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2733                           
  2734                           ;ecan.c: 377: ConvertedID = (ConvertedID << 8);
  2735  00039A  C022  F018         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  2736  00039E  C023  F019         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  2737  0003A2  C024  F01A         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  2738  0003A6  6A17               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  2739  0003A8  C017  F022         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2740  0003AC  C018  F023         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2741  0003B0  C019  F024         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2742  0003B4  C01A  F025         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2743                           
  2744                           ;ecan.c: 378: ConvertedID = ConvertedID + tempRXBn_EIDH;
  2745  0003B8  501B               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH,w,c
  2746  0003BA  2422               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2747  0003BC  6E22               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2748  0003BE  0E00               	movlw	0
  2749  0003C0  2023               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2750  0003C2  6E23               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2751  0003C4  0E00               	movlw	0
  2752  0003C6  2024               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2753  0003C8  6E24               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2754  0003CA  0E00               	movlw	0
  2755  0003CC  2025               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2756  0003CE  6E25               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2757                           
  2758                           ;ecan.c: 379: ConvertedID = (ConvertedID << 8);
  2759  0003D0  C022  F018         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  2760  0003D4  C023  F019         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  2761  0003D8  C024  F01A         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  2762  0003DC  6A17               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  2763  0003DE  C017  F022         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2764  0003E2  C018  F023         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2765  0003E6  C019  F024         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2766  0003EA  C01A  F025         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2767                           
  2768                           ;ecan.c: 380: ConvertedID = ConvertedID + tempRXBn_EIDL;
  2769  0003EE  5013               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL,w,c
  2770  0003F0  2422               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2771  0003F2  6E22               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2772  0003F4  0E00               	movlw	0
  2773  0003F6  2023               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2774  0003F8  6E23               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2775  0003FA  0E00               	movlw	0
  2776  0003FC  2024               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2777  0003FE  6E24               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2778  000400  0E00               	movlw	0
  2779  000402  2025               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2780  000404  6E25               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2781                           
  2782                           ;ecan.c: 381: returnValue = ConvertedID;
  2783  000406  C022  F01C         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  2784  00040A  C023  F01D         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  2785  00040E  C024  F01E         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  2786  000412  C025  F01F         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  2787                           
  2788                           ;ecan.c: 382: return (returnValue);
  2789  000416  C01C  F013         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  2790  00041A  C01D  F014         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  2791  00041E  C01E  F015         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  2792  000422  C01F  F016         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  2793  000426  0012               	return	
  2794  000428                     __end_of_convertReg2ExtendedCANid:
  2795                           	opt stack 0
  2796                           tblptru	equ	0xFF8
  2797                           tblptrh	equ	0xFF7
  2798                           tblptrl	equ	0xFF6
  2799                           tablat	equ	0xFF5
  2800                           intcon	equ	0xFF2
  2801                           postinc0	equ	0xFEE
  2802                           wreg	equ	0xFE8
  2803                           indf2	equ	0xFDF
  2804                           postinc2	equ	0xFDE
  2805                           fsr2h	equ	0xFDA
  2806                           fsr2l	equ	0xFD9
  2807                           status	equ	0xFD8
  2808                           
  2809 ;; *************** function _INTERRUPT_InterruptManager *****************
  2810 ;; Defined at:
  2811 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;		None
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2827 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2828 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2829 ;;Total ram usage:       18 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    3
  2832 ;; This function calls:
  2833 ;;		_TMR0_ISR
  2834 ;;		_TMR1_ISR
  2835 ;; This function is called by:
  2836 ;;		Interrupt level 2
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	intcode
  2841  000008                     __pintcode:
  2842                           	opt stack 0
  2843  000008                     _INTERRUPT_InterruptManager:
  2844                           	opt stack 24
  2845                           
  2846                           ;incstack = 0
  2847  000008  8245               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2848  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  2849  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2850  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2851  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2852  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2853  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2854  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2855  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2856  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2857  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2858  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2859  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2860  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2861  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2862  000042  C045  F00F         	movff	btemp,??_INTERRUPT_InterruptManager+14
  2863  000046  C046  F010         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  2864  00004A  C047  F011         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  2865  00004E  C048  F012         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  2866                           
  2867                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2868  000052  BAF2               	btfsc	intcon,5,c	;volatile
  2869  000054  A4F2               	btfss	intcon,2,c	;volatile
  2870  000056  D003               	goto	i2l481
  2871                           
  2872                           ;interrupt_manager.c: 61: {
  2873                           ;interrupt_manager.c: 62: TMR0_ISR();
  2874  000058  ECF8  F003         	call	_TMR0_ISR	;wreg free
  2875                           
  2876                           ;interrupt_manager.c: 63: }
  2877  00005C  D006               	goto	i2l483
  2878  00005E                     i2l481:
  2879                           
  2880                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
  2881  00005E  BCF2               	btfsc	intcon,6,c	;volatile
  2882  000060  A09D               	btfss	3997,0,c	;volatile
  2883  000062  D003               	goto	i2l483
  2884  000064  B09E               	btfsc	3998,0,c	;volatile
  2885                           
  2886                           ;interrupt_manager.c: 65: {
  2887                           ;interrupt_manager.c: 66: TMR1_ISR();
  2888  000066  ECA1  F003         	call	_TMR1_ISR	;wreg free
  2889  00006A                     i2l483:
  2890                           
  2891                           ;interrupt_manager.c: 68: else
  2892                           ;interrupt_manager.c: 69: {
  2893  00006A  C012  F048         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  2894  00006E  C011  F047         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  2895  000072  C010  F046         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  2896  000076  C00F  F045         	movff	??_INTERRUPT_InterruptManager+14,btemp
  2897  00007A  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2898  00007E  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2899  000082  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2900  000086  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2901  00008A  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2902  00008E  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2903  000092  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2904  000096  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2905  00009A  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2906  00009E  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2907  0000A2  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2908  0000A6  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2909  0000AA  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2910  0000AE  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2911  0000B2  9245               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2912  0000B4  0011               	retfie		f
  2913  0000B6                     __end_of_INTERRUPT_InterruptManager:
  2914                           	opt stack 0
  2915                           pclatu	equ	0xFFB
  2916                           pclath	equ	0xFFA
  2917                           tblptru	equ	0xFF8
  2918                           tblptrh	equ	0xFF7
  2919                           tblptrl	equ	0xFF6
  2920                           tablat	equ	0xFF5
  2921                           prodh	equ	0xFF4
  2922                           prodl	equ	0xFF3
  2923                           intcon	equ	0xFF2
  2924                           postinc0	equ	0xFEE
  2925                           fsr0h	equ	0xFEA
  2926                           fsr0l	equ	0xFE9
  2927                           wreg	equ	0xFE8
  2928                           fsr1h	equ	0xFE2
  2929                           fsr1l	equ	0xFE1
  2930                           indf2	equ	0xFDF
  2931                           postinc2	equ	0xFDE
  2932                           fsr2h	equ	0xFDA
  2933                           fsr2l	equ	0xFD9
  2934                           status	equ	0xFD8
  2935                           
  2936 ;; *************** function _TMR1_ISR *****************
  2937 ;; Defined at:
  2938 ;;		line 160 in file "mcc_generated_files/tmr1.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;		None
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;		None
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2956 ;;Total ram usage:        0 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    2
  2959 ;; This function calls:
  2960 ;;		_TMR1_CallBack
  2961 ;; This function is called by:
  2962 ;;		_INTERRUPT_InterruptManager
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text24
  2967  000742                     __ptext24:
  2968                           	opt stack 0
  2969  000742                     _TMR1_ISR:
  2970                           	opt stack 24
  2971                           
  2972                           ;tmr1.c: 162: static volatile unsigned int CountCallBack = 0;
  2973                           ;tmr1.c: 165: PIR1bits.TMR1IF = 0;
  2974                           
  2975                           ;incstack = 0
  2976  000742  909E               	bcf	3998,0,c	;volatile
  2977                           
  2978                           ;tmr1.c: 167: TMR1H = (timer1ReloadVal >> 8);
  2979  000744  5043               	movf	_timer1ReloadVal+1,w,c	;volatile
  2980  000746  6ECF               	movwf	4047,c	;volatile
  2981                           
  2982                           ;tmr1.c: 168: TMR1L = timer1ReloadVal;
  2983  000748  C042  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  2984                           
  2985                           ;tmr1.c: 171: if (++CountCallBack >= 50)
  2986  00074C  4A2B               	infsnz	TMR1_ISR@CountCallBack,f,c	;volatile
  2987  00074E  2A2C               	incf	TMR1_ISR@CountCallBack+1,f,c	;volatile
  2988  000750  502C               	movf	TMR1_ISR@CountCallBack+1,w,c	;volatile
  2989  000752  E104               	bnz	i2u14_40
  2990  000754  0E32               	movlw	50
  2991  000756  5C2B               	subwf	TMR1_ISR@CountCallBack,w,c	;volatile
  2992  000758  A0D8               	btfss	status,0,c
  2993  00075A  0012               	return	
  2994  00075C                     i2u14_40:
  2995                           
  2996                           ;tmr1.c: 172: {
  2997                           ;tmr1.c: 174: TMR1_CallBack();
  2998  00075C  ECB5  F003         	call	_TMR1_CallBack	;wreg free
  2999                           
  3000                           ;tmr1.c: 177: CountCallBack = 0;
  3001  000760  0E00               	movlw	0
  3002  000762  6E2C               	movwf	TMR1_ISR@CountCallBack+1,c	;volatile
  3003  000764  0E00               	movlw	0
  3004  000766  6E2B               	movwf	TMR1_ISR@CountCallBack,c	;volatile
  3005  000768  0012               	return	
  3006  00076A                     __end_of_TMR1_ISR:
  3007                           	opt stack 0
  3008                           pclatu	equ	0xFFB
  3009                           pclath	equ	0xFFA
  3010                           tblptru	equ	0xFF8
  3011                           tblptrh	equ	0xFF7
  3012                           tblptrl	equ	0xFF6
  3013                           tablat	equ	0xFF5
  3014                           prodh	equ	0xFF4
  3015                           prodl	equ	0xFF3
  3016                           intcon	equ	0xFF2
  3017                           postinc0	equ	0xFEE
  3018                           fsr0h	equ	0xFEA
  3019                           fsr0l	equ	0xFE9
  3020                           wreg	equ	0xFE8
  3021                           fsr1h	equ	0xFE2
  3022                           fsr1l	equ	0xFE1
  3023                           indf2	equ	0xFDF
  3024                           postinc2	equ	0xFDE
  3025                           fsr2h	equ	0xFDA
  3026                           fsr2l	equ	0xFD9
  3027                           status	equ	0xFD8
  3028                           
  3029 ;; *************** function _TMR1_CallBack *****************
  3030 ;; Defined at:
  3031 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3049 ;;Total ram usage:        0 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    1
  3052 ;; This function calls:
  3053 ;;		Absolute function
  3054 ;;		_TMR1_DefaultInterruptHandler
  3055 ;;		_can_receive_timeout
  3056 ;; This function is called by:
  3057 ;;		_TMR1_ISR
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text25
  3062  00076A                     __ptext25:
  3063                           	opt stack 0
  3064  00076A                     _TMR1_CallBack:
  3065                           	opt stack 24
  3066                           
  3067                           ;tmr1.c: 184: if(TMR1_InterruptHandler)
  3068                           
  3069                           ;incstack = 0
  3070  00076A  5040               	movf	_TMR1_InterruptHandler,w,c
  3071  00076C  1041               	iorwf	_TMR1_InterruptHandler+1,w,c
  3072  00076E  B4D8               	btfsc	status,2,c
  3073  000770  0012               	return	
  3074                           
  3075                           ;tmr1.c: 185: {
  3076                           ;tmr1.c: 186: TMR1_InterruptHandler();
  3077  000772  D801               	call	i2u6_48
  3078  000774  0012               	return	
  3079  000776                     i2u6_48:
  3080  000776  0005               	push	
  3081  000778  6EFA               	movwf	pclath,c
  3082  00077A  5040               	movf	_TMR1_InterruptHandler,w,c
  3083  00077C  6EFD               	movwf	tosl,c
  3084  00077E  5041               	movf	_TMR1_InterruptHandler+1,w,c
  3085  000780  6EFE               	movwf	tosh,c
  3086  000782  50F8               	movf	tblptru,w,c
  3087  000784  6EFF               	movwf	tosu,c
  3088  000786  50FA               	movf	pclath,w,c
  3089  000788  0012               	return		;indir
  3090  00078A                     __end_of_TMR1_CallBack:
  3091                           	opt stack 0
  3092                           tosu	equ	0xFFF
  3093                           tosh	equ	0xFFE
  3094                           tosl	equ	0xFFD
  3095                           pclatu	equ	0xFFB
  3096                           pclath	equ	0xFFA
  3097                           tblptru	equ	0xFF8
  3098                           tblptrh	equ	0xFF7
  3099                           tblptrl	equ	0xFF6
  3100                           tablat	equ	0xFF5
  3101                           prodh	equ	0xFF4
  3102                           prodl	equ	0xFF3
  3103                           intcon	equ	0xFF2
  3104                           postinc0	equ	0xFEE
  3105                           fsr0h	equ	0xFEA
  3106                           fsr0l	equ	0xFE9
  3107                           wreg	equ	0xFE8
  3108                           fsr1h	equ	0xFE2
  3109                           fsr1l	equ	0xFE1
  3110                           indf2	equ	0xFDF
  3111                           postinc2	equ	0xFDE
  3112                           fsr2h	equ	0xFDA
  3113                           fsr2l	equ	0xFD9
  3114                           status	equ	0xFD8
  3115                           
  3116 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  3117 ;; Defined at:
  3118 ;;		line 194 in file "mcc_generated_files/tmr1.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;		None
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;		None
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		None
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3136 ;;Total ram usage:        0 bytes
  3137 ;; Hardware stack levels used:    1
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_TMR1_Initialize
  3142 ;;		_TMR1_CallBack
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text26
  3147  000866                     __ptext26:
  3148                           	opt stack 0
  3149  000866                     _TMR1_DefaultInterruptHandler:
  3150                           	opt stack 24
  3151                           
  3152                           ;incstack = 0
  3153  000866  0012               	return		;funcret
  3154  000868                     __end_of_TMR1_DefaultInterruptHandler:
  3155                           	opt stack 0
  3156                           tosu	equ	0xFFF
  3157                           tosh	equ	0xFFE
  3158                           tosl	equ	0xFFD
  3159                           pclatu	equ	0xFFB
  3160                           pclath	equ	0xFFA
  3161                           tblptru	equ	0xFF8
  3162                           tblptrh	equ	0xFF7
  3163                           tblptrl	equ	0xFF6
  3164                           tablat	equ	0xFF5
  3165                           prodh	equ	0xFF4
  3166                           prodl	equ	0xFF3
  3167                           intcon	equ	0xFF2
  3168                           postinc0	equ	0xFEE
  3169                           fsr0h	equ	0xFEA
  3170                           fsr0l	equ	0xFE9
  3171                           wreg	equ	0xFE8
  3172                           fsr1h	equ	0xFE2
  3173                           fsr1l	equ	0xFE1
  3174                           indf2	equ	0xFDF
  3175                           postinc2	equ	0xFDE
  3176                           fsr2h	equ	0xFDA
  3177                           fsr2l	equ	0xFD9
  3178                           status	equ	0xFD8
  3179                           
  3180 ;; *************** function _can_receive_timeout *****************
  3181 ;; Defined at:
  3182 ;;		line 45 in file "main.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;		None
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		wreg, status,2
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3200 ;;Total ram usage:        0 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_main
  3206 ;;		_TMR1_CallBack
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text27
  3211  00084A                     __ptext27:
  3212                           	opt stack 0
  3213  00084A                     _can_receive_timeout:
  3214                           	opt stack 24
  3215                           
  3216                           ;main.c: 47: CAN_timeout = 1;
  3217                           
  3218                           ;incstack = 0
  3219  00084A  0E01               	movlw	1
  3220  00084C  6E44               	movwf	_CAN_timeout,c
  3221  00084E  0012               	return		;funcret
  3222  000850                     __end_of_can_receive_timeout:
  3223                           	opt stack 0
  3224                           tosu	equ	0xFFF
  3225                           tosh	equ	0xFFE
  3226                           tosl	equ	0xFFD
  3227                           pclatu	equ	0xFFB
  3228                           pclath	equ	0xFFA
  3229                           tblptru	equ	0xFF8
  3230                           tblptrh	equ	0xFF7
  3231                           tblptrl	equ	0xFF6
  3232                           tablat	equ	0xFF5
  3233                           prodh	equ	0xFF4
  3234                           prodl	equ	0xFF3
  3235                           intcon	equ	0xFF2
  3236                           postinc0	equ	0xFEE
  3237                           fsr0h	equ	0xFEA
  3238                           fsr0l	equ	0xFE9
  3239                           wreg	equ	0xFE8
  3240                           fsr1h	equ	0xFE2
  3241                           fsr1l	equ	0xFE1
  3242                           indf2	equ	0xFDF
  3243                           postinc2	equ	0xFDE
  3244                           fsr2h	equ	0xFDA
  3245                           fsr2l	equ	0xFD9
  3246                           status	equ	0xFD8
  3247                           
  3248 ;; *************** function _TMR0_ISR *****************
  3249 ;; Defined at:
  3250 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;		None
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;		None
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3268 ;;Total ram usage:        0 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:    2
  3271 ;; This function calls:
  3272 ;;		_TMR0_CallBack
  3273 ;; This function is called by:
  3274 ;;		_INTERRUPT_InterruptManager
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           	psect	text28
  3279  0007F0                     __ptext28:
  3280                           	opt stack 0
  3281  0007F0                     _TMR0_ISR:
  3282                           	opt stack 24
  3283                           
  3284                           ;tmr0.c: 138: INTCONbits.TMR0IF = 0;
  3285                           
  3286                           ;incstack = 0
  3287  0007F0  94F2               	bcf	intcon,2,c	;volatile
  3288                           
  3289                           ;tmr0.c: 142: TMR0H = timer0ReloadVal >> 8;
  3290  0007F2  503D               	movf	_timer0ReloadVal+1,w,c	;volatile
  3291  0007F4  6ED7               	movwf	4055,c	;volatile
  3292                           
  3293                           ;tmr0.c: 143: TMR0L = (uint8_t) timer0ReloadVal;
  3294  0007F6  C03C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  3295                           
  3296                           ;tmr0.c: 147: TMR0_CallBack();
  3297  0007FA  ECC5  F003         	call	_TMR0_CallBack	;wreg free
  3298  0007FE  0012               	return		;funcret
  3299  000800                     __end_of_TMR0_ISR:
  3300                           	opt stack 0
  3301                           tosu	equ	0xFFF
  3302                           tosh	equ	0xFFE
  3303                           tosl	equ	0xFFD
  3304                           pclatu	equ	0xFFB
  3305                           pclath	equ	0xFFA
  3306                           tblptru	equ	0xFF8
  3307                           tblptrh	equ	0xFF7
  3308                           tblptrl	equ	0xFF6
  3309                           tablat	equ	0xFF5
  3310                           prodh	equ	0xFF4
  3311                           prodl	equ	0xFF3
  3312                           intcon	equ	0xFF2
  3313                           postinc0	equ	0xFEE
  3314                           fsr0h	equ	0xFEA
  3315                           fsr0l	equ	0xFE9
  3316                           wreg	equ	0xFE8
  3317                           fsr1h	equ	0xFE2
  3318                           fsr1l	equ	0xFE1
  3319                           indf2	equ	0xFDF
  3320                           postinc2	equ	0xFDE
  3321                           fsr2h	equ	0xFDA
  3322                           fsr2l	equ	0xFD9
  3323                           status	equ	0xFD8
  3324                           
  3325 ;; *************** function _TMR0_CallBack *****************
  3326 ;; Defined at:
  3327 ;;		line 152 in file "mcc_generated_files/tmr0.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3345 ;;Total ram usage:        0 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    1
  3348 ;; This function calls:
  3349 ;;		Absolute function
  3350 ;;		_TMR0_DefaultInterruptHandler
  3351 ;;		_ring
  3352 ;; This function is called by:
  3353 ;;		_TMR0_ISR
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text29
  3358  00078A                     __ptext29:
  3359                           	opt stack 0
  3360  00078A                     _TMR0_CallBack:
  3361                           	opt stack 24
  3362                           
  3363                           ;tmr0.c: 156: if(TMR0_InterruptHandler)
  3364                           
  3365                           ;incstack = 0
  3366  00078A  503E               	movf	_TMR0_InterruptHandler,w,c
  3367  00078C  103F               	iorwf	_TMR0_InterruptHandler+1,w,c
  3368  00078E  B4D8               	btfsc	status,2,c
  3369  000790  0012               	return	
  3370                           
  3371                           ;tmr0.c: 157: {
  3372                           ;tmr0.c: 158: TMR0_InterruptHandler();
  3373  000792  D801               	call	i2u8_48
  3374  000794  0012               	return	
  3375  000796                     i2u8_48:
  3376  000796  0005               	push	
  3377  000798  6EFA               	movwf	pclath,c
  3378  00079A  503E               	movf	_TMR0_InterruptHandler,w,c
  3379  00079C  6EFD               	movwf	tosl,c
  3380  00079E  503F               	movf	_TMR0_InterruptHandler+1,w,c
  3381  0007A0  6EFE               	movwf	tosh,c
  3382  0007A2  50F8               	movf	tblptru,w,c
  3383  0007A4  6EFF               	movwf	tosu,c
  3384  0007A6  50FA               	movf	pclath,w,c
  3385  0007A8  0012               	return		;indir
  3386  0007AA                     __end_of_TMR0_CallBack:
  3387                           	opt stack 0
  3388                           tosu	equ	0xFFF
  3389                           tosh	equ	0xFFE
  3390                           tosl	equ	0xFFD
  3391                           pclatu	equ	0xFFB
  3392                           pclath	equ	0xFFA
  3393                           tblptru	equ	0xFF8
  3394                           tblptrh	equ	0xFF7
  3395                           tblptrl	equ	0xFF6
  3396                           tablat	equ	0xFF5
  3397                           prodh	equ	0xFF4
  3398                           prodl	equ	0xFF3
  3399                           intcon	equ	0xFF2
  3400                           postinc0	equ	0xFEE
  3401                           fsr0h	equ	0xFEA
  3402                           fsr0l	equ	0xFE9
  3403                           wreg	equ	0xFE8
  3404                           fsr1h	equ	0xFE2
  3405                           fsr1l	equ	0xFE1
  3406                           indf2	equ	0xFDF
  3407                           postinc2	equ	0xFDE
  3408                           fsr2h	equ	0xFDA
  3409                           fsr2l	equ	0xFD9
  3410                           status	equ	0xFD8
  3411                           
  3412 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3413 ;; Defined at:
  3414 ;;		line 166 in file "mcc_generated_files/tmr0.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		None
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3432 ;;Total ram usage:        0 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; This function calls:
  3435 ;;		Nothing
  3436 ;; This function is called by:
  3437 ;;		_TMR0_Initialize
  3438 ;;		_TMR0_CallBack
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text30
  3443  000868                     __ptext30:
  3444                           	opt stack 0
  3445  000868                     _TMR0_DefaultInterruptHandler:
  3446                           	opt stack 24
  3447                           
  3448                           ;incstack = 0
  3449  000868  0012               	return		;funcret
  3450  00086A                     __end_of_TMR0_DefaultInterruptHandler:
  3451                           	opt stack 0
  3452                           tosu	equ	0xFFF
  3453                           tosh	equ	0xFFE
  3454                           tosl	equ	0xFFD
  3455                           pclatu	equ	0xFFB
  3456                           pclath	equ	0xFFA
  3457                           tblptru	equ	0xFF8
  3458                           tblptrh	equ	0xFF7
  3459                           tblptrl	equ	0xFF6
  3460                           tablat	equ	0xFF5
  3461                           prodh	equ	0xFF4
  3462                           prodl	equ	0xFF3
  3463                           intcon	equ	0xFF2
  3464                           postinc0	equ	0xFEE
  3465                           fsr0h	equ	0xFEA
  3466                           fsr0l	equ	0xFE9
  3467                           wreg	equ	0xFE8
  3468                           fsr1h	equ	0xFE2
  3469                           fsr1l	equ	0xFE1
  3470                           indf2	equ	0xFDF
  3471                           postinc2	equ	0xFDE
  3472                           fsr2h	equ	0xFDA
  3473                           fsr2l	equ	0xFD9
  3474                           status	equ	0xFD8
  3475                           
  3476 ;; *************** function _ring *****************
  3477 ;; Defined at:
  3478 ;;		line 40 in file "main.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;		None
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;		None
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  1    wreg      void 
  3485 ;; Registers used:
  3486 ;;		wreg, status,2
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3496 ;;Total ram usage:        0 bytes
  3497 ;; Hardware stack levels used:    1
  3498 ;; This function calls:
  3499 ;;		Nothing
  3500 ;; This function is called by:
  3501 ;;		_main
  3502 ;;		_TMR0_CallBack
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           	psect	text31
  3507  000850                     __ptext31:
  3508                           	opt stack 0
  3509  000850                     _ring:
  3510                           	opt stack 24
  3511                           
  3512                           ;main.c: 42: ringing = 1;
  3513                           
  3514                           ;incstack = 0
  3515  000850  0E01               	movlw	1
  3516  000852  6E2D               	movwf	_ringing,c
  3517  000854  0012               	return		;funcret
  3518  000856                     __end_of_ring:
  3519                           	opt stack 0
  3520  0000                     tosu	equ	0xFFF
  3521                           tosh	equ	0xFFE
  3522                           tosl	equ	0xFFD
  3523                           pclatu	equ	0xFFB
  3524                           pclath	equ	0xFFA
  3525                           tblptru	equ	0xFF8
  3526                           tblptrh	equ	0xFF7
  3527                           tblptrl	equ	0xFF6
  3528                           tablat	equ	0xFF5
  3529                           prodh	equ	0xFF4
  3530                           prodl	equ	0xFF3
  3531                           intcon	equ	0xFF2
  3532                           postinc0	equ	0xFEE
  3533                           fsr0h	equ	0xFEA
  3534                           fsr0l	equ	0xFE9
  3535                           wreg	equ	0xFE8
  3536                           fsr1h	equ	0xFE2
  3537                           fsr1l	equ	0xFE1
  3538                           indf2	equ	0xFDF
  3539                           postinc2	equ	0xFDE
  3540                           fsr2h	equ	0xFDA
  3541                           fsr2l	equ	0xFD9
  3542                           status	equ	0xFD8
  3543                           tosu	equ	0xFFF
  3544                           tosh	equ	0xFFE
  3545                           tosl	equ	0xFFD
  3546                           pclatu	equ	0xFFB
  3547                           pclath	equ	0xFFA
  3548                           tblptru	equ	0xFF8
  3549                           tblptrh	equ	0xFF7
  3550                           tblptrl	equ	0xFF6
  3551                           tablat	equ	0xFF5
  3552                           prodh	equ	0xFF4
  3553                           prodl	equ	0xFF3
  3554                           intcon	equ	0xFF2
  3555                           postinc0	equ	0xFEE
  3556                           fsr0h	equ	0xFEA
  3557                           fsr0l	equ	0xFE9
  3558                           wreg	equ	0xFE8
  3559                           fsr1h	equ	0xFE2
  3560                           fsr1l	equ	0xFE1
  3561                           indf2	equ	0xFDF
  3562                           postinc2	equ	0xFDE
  3563                           fsr2h	equ	0xFDA
  3564                           fsr2l	equ	0xFD9
  3565                           status	equ	0xFD8
  3566                           
  3567                           	psect	text32
  3568  000000                     __ptext32:
  3569                           	opt stack 0
  3570                           tosu	equ	0xFFF
  3571                           tosh	equ	0xFFE
  3572                           tosl	equ	0xFFD
  3573                           pclatu	equ	0xFFB
  3574                           pclath	equ	0xFFA
  3575                           tblptru	equ	0xFF8
  3576                           tblptrh	equ	0xFF7
  3577                           tblptrl	equ	0xFF6
  3578                           tablat	equ	0xFF5
  3579                           prodh	equ	0xFF4
  3580                           prodl	equ	0xFF3
  3581                           intcon	equ	0xFF2
  3582                           postinc0	equ	0xFEE
  3583                           fsr0h	equ	0xFEA
  3584                           fsr0l	equ	0xFE9
  3585                           wreg	equ	0xFE8
  3586                           fsr1h	equ	0xFE2
  3587                           fsr1l	equ	0xFE1
  3588                           indf2	equ	0xFDF
  3589                           postinc2	equ	0xFDE
  3590                           fsr2h	equ	0xFDA
  3591                           fsr2l	equ	0xFD9
  3592                           status	equ	0xFD8
  3593                           
  3594                           	psect	rparam
  3595  0000                     tosu	equ	0xFFF
  3596                           tosh	equ	0xFFE
  3597                           tosl	equ	0xFFD
  3598                           pclatu	equ	0xFFB
  3599                           pclath	equ	0xFFA
  3600                           tblptru	equ	0xFF8
  3601                           tblptrh	equ	0xFF7
  3602                           tblptrl	equ	0xFF6
  3603                           tablat	equ	0xFF5
  3604                           prodh	equ	0xFF4
  3605                           prodl	equ	0xFF3
  3606                           intcon	equ	0xFF2
  3607                           postinc0	equ	0xFEE
  3608                           fsr0h	equ	0xFEA
  3609                           fsr0l	equ	0xFE9
  3610                           wreg	equ	0xFE8
  3611                           fsr1h	equ	0xFE2
  3612                           fsr1l	equ	0xFE1
  3613                           indf2	equ	0xFDF
  3614                           postinc2	equ	0xFDE
  3615                           fsr2h	equ	0xFDA
  3616                           fsr2l	equ	0xFD9
  3617                           status	equ	0xFD8
  3618                           
  3619                           	psect	temp
  3620  000045                     btemp:
  3621                           	opt stack 0
  3622  000045                     	ds	1
  3623  0000                     int$flags	set	btemp
  3624  0000                     wtemp6	set	btemp+1
  3625                           tosu	equ	0xFFF
  3626                           tosh	equ	0xFFE
  3627                           tosl	equ	0xFFD
  3628                           pclatu	equ	0xFFB
  3629                           pclath	equ	0xFFA
  3630                           tblptru	equ	0xFF8
  3631                           tblptrh	equ	0xFF7
  3632                           tblptrl	equ	0xFF6
  3633                           tablat	equ	0xFF5
  3634                           prodh	equ	0xFF4
  3635                           prodl	equ	0xFF3
  3636                           intcon	equ	0xFF2
  3637                           postinc0	equ	0xFEE
  3638                           fsr0h	equ	0xFEA
  3639                           fsr0l	equ	0xFE9
  3640                           wreg	equ	0xFE8
  3641                           fsr1h	equ	0xFE2
  3642                           fsr1l	equ	0xFE1
  3643                           indf2	equ	0xFDF
  3644                           postinc2	equ	0xFDE
  3645                           fsr2h	equ	0xFDA
  3646                           fsr2l	equ	0xFD9
  3647                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         17
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      68
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ring(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ring(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> can_receive_timeout(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> can_receive_timeout(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> canMessage(COMRAM[14]), 


Critical Paths under _main in COMRAM

    _main->_CAN_receive
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2471
                                             40 COMRAM     2     2      0
                        _CAN_receive
                      _EUSART1_Write
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                        _TMR1_Reload
           _TMR1_SetInterruptHandler
                     _TMR1_StopTimer
                        _setLED_Blue
                        _setLED_Cyan
                       _setLED_Green
                         _setLED_Red
 ---------------------------------------------------------------------------------
 (1) _setLED_Red                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setLED_Green                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setLED_Cyan                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setLED_Blue                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     348
                    _ECAN_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     174
                                             20 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             20 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    1760
                                             37 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     266
                                             18 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4     821
                                             18 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0       0
                                              0 COMRAM    18    18      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                _can_receive_timeout *
 ---------------------------------------------------------------------------------
 (7) _can_receive_timeout                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                               _ring *
 ---------------------------------------------------------------------------------
 (7) _ring                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _EUSART1_Write
   _SYSTEM_Initialize
     _ECAN_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
   _TMR0_SetInterruptHandler
   _TMR1_Reload
   _TMR1_SetInterruptHandler
   _TMR1_StopTimer
   _setLED_Blue
   _setLED_Cyan
   _setLED_Green
   _setLED_Red

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _ring *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _can_receive_timeout *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      44       1       72.3%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44       6        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Apr 26 09:05:17 2018

                         __size_of_ECAN_Initialize 00A2                                        __CFG_BORV$3 000000  
                                  _timer0ReloadVal 003C                                       __CFG_CP0$OFF 000000  
                                     __CFG_CP1$OFF 000000                                       __CFG_CP2$OFF 000000  
                                     __CFG_CP3$OFF 000000                                                l300 053A  
                                              l303 05CA                                                l322 01C8  
                                              l323 0102                                                l324 0134  
                                              l326 02DA                                                l327 020E  
                                              l328 0242                                                l630 04D4  
                                              l624 0478                                                l626 0482  
                                              l628 04DC                                                l637 04E8  
                                     __CFG_CPB$OFF 000000                                                u415 0364  
                                              u425 061C                                       __CFG_CPD$OFF 000000  
                                              u537 0468                                                u547 04C2  
                                  _timer1ReloadVal 0042                                                tosl 000FFD  
                                              wreg 000FE8                         ??_convertReg2StandardCANid 0017  
                                             l2001 04E8                                               l1469 0802  
                                             l1941 02D6                                               _LATA 000F89  
                                             _LATB 000F8A                                               _LATC 000F8B  
                                             _LATD 000F8C                                               _LATE 000F8D  
                                             _LATF 000F8E                                               _LATG 000F8F  
                                             _WPUB 000F5B                                      _EUSART1_Write 0800  
                                             _main 0428                                    _TMR0_StartTimer 085E  
                                             _ring 0850                                               fsr0h 000FEA  
                                             fsr1h 000FE2                                               fsr2h 000FDA  
                                             fsr0l 000FE9                                               indf2 000FDF  
                                             fsr1l 000FE1                                               fsr2l 000FD9  
                                             btemp 0045                                               prodh 000FF4  
                                             prodl 000FF3                                               start 00B6  
                                    __CFG_IESO$OFF 000000                                      __CFG_FOSC$HS2 000000  
                       ??_TMR1_SetInterruptHandler 0015                                      __CFG_MCLRE$ON 000000  
                                     ___param_bank 000000                            __end_of_TMR0_Initialize 0716  
                   ??_TMR0_DefaultInterruptHandler 0001                     __size_of_OSCILLATOR_Initialize 0012  
                    __end_of_OSCILLATOR_Initialize 07F0                                              ?_main 0001  
                                            ?_ring 0001                                    _TMR1_StartTimer 085A  
                                            _T0CON 000FD5                                              _T1CON 000FCD  
                                            i2l481 005E                                              i2l483 006A  
                                     ?_setLED_Blue 0001                                              _TMR0H 000FD7  
                                            _TMR1H 000FCF                                              _TMR0L 000FD6  
                                            _TMR1L 000FCE                                       ?_setLED_Cyan 0001  
                                            _TRISA 000F92                                              _TRISB 000F93  
                                            _TRISC 000F94                                              _TRISD 000F95  
                                            _TRISE 000F96                                              _TRISF 000F97  
                                            _TRISG 000F98                  __size_of_TMR0_SetInterruptHandler 000A  
                                    __CFG_WRT0$OFF 000000                                      __CFG_WRT1$OFF 000000  
                                    __CFG_WRT2$OFF 000000                          ?_TMR0_SetInterruptHandler 0013  
                                    __CFG_WRT3$OFF 000000                                     __CFG_EBTR0$OFF 000000  
                                   __CFG_FCMEN$OFF 000000                                     __CFG_EBTR1$OFF 000000  
                            CAN_receive@tempCanMsg 0026                                     __CFG_EBTR2$OFF 000000  
                                   __CFG_EBTR3$OFF 000000                                   __end_of_TMR0_ISR 0800  
                                 __end_of_TMR1_ISR 076A                                      __CFG_WRTB$OFF 000000  
                                    __CFG_WRTC$OFF 000000                                      __CFG_WRTD$OFF 000000  
                                   __CFG_EBTRB$OFF 000000                                     ?_EUSART1_Write 0001  
                          __end_of_TMR1_Initialize 06DE                                              pclath 000FFA  
                                            tablat 000FF5                convertReg2ExtendedCANid@ConvertedID 0022  
                                            status 000FD8                                              wtemp6 0046  
                                  __initialization 0716                               __size_of_CAN_receive 0226  
                       __end_of_EUSART1_Initialize 07DE                                       __end_of_main 0536  
                                     __end_of_ring 0856                        ?_INTERRUPT_InterruptManager 0001  
                                           ??_main 0029                                             ??_ring 0001  
                                    __activetblptr 000002                                     __CFG_RETEN$OFF 000000  
                                ??_ECAN_Initialize 0013                            __end_of_TMR0_StartTimer 0862  
                                           _CANCON 000F6F                                             _ANCON0 000F5D  
                                           _ANCON1 000F5C                                             _T1GCON 000FAA  
                                  __CFG_BBSIZ$BB2K 000000                                     __CFG_WDTEN$OFF 000000  
                                           _RCREG1 000FAE                                             _RCSTA1 000FAB  
                                           _OSCCON 000FD3                                             _RXB0D0 000F66  
                                           _RXB0D1 000F67                                             _RXB0D2 000F68  
                                           _RXB0D3 000F69                                             _RXB0D4 000F6A  
                                           _RXB1D0 000F36                                             _RXB0D5 000F6B  
                                           _RXB1D1 000F37                                             _RXB0D6 000F6C  
                                           _RXB1D2 000F38                                             _RXB0D7 000F6D  
                                           _RXB1D3 000F39                                             _RXB1D4 000F3A  
                                           _RXB1D5 000F3B                                             _RXB1D6 000F3C  
                                           _RXB1D7 000F3D                                             _SPBRG1 000FAF  
                                           _TXB0D0 000F26                                             _TXB0D1 000F27  
                                           _TXB0D2 000F28                                             _TXB0D3 000F29  
                                           _TXB0D4 000F2A                                             _TXB1D0 000F16  
                                           _TXB0D5 000F2B                                             _TXB1D1 000F17  
                                           _TXB0D6 000F2C                                             _TXB1D2 000F18  
                                           _TXB0D7 000F2D                                             _TXB1D3 000F19  
                                           _TXB1D4 000F1A                                             _TXB2D0 000F06  
                                           _TXB1D5 000F1B                                             _TXB2D1 000F07  
                                           _TXB1D6 000F1C                                             _TXB2D2 000F08  
                                           _TXB1D7 000F1D                                             _TXB2D3 000F09  
                                           _TXB2D4 000F0A                                             _TXB2D5 000F0B  
                                           _TXB2D6 000F0C                                             _TXB2D7 000F0D  
                                    ?_setLED_Green 0001                                             i2u6_48 0776  
                                           i2u8_48 0796                                             _TXREG1 000FAD  
                                           _TXSTA1 000FAC                                     __CFG_XINST$OFF 000000  
             __end_of_TMR1_DefaultInterruptHandler 0868              __size_of_TMR1_DefaultInterruptHandler 0002  
                     _TMR1_DefaultInterruptHandler 0866                            __end_of_TMR1_StartTimer 085E  
                                     ?_TMR1_Reload 0001                                     __CFG_STVREN$ON 000000  
                                 ?_TMR0_Initialize 0001                                             clear_0 072E  
                                     __pdataCOMRAM 0044                   __end_of_convertReg2StandardCANid 065E  
                                           tblptrh 000FF7                                             tblptrl 000FF6  
                                           tblptru 000FF8                              __end_of_TMR0_CallBack 07AA  
                                  ??_EUSART1_Write 0013           TMR0_SetInterruptHandler@InterruptHandler 0013  
         TMR1_SetInterruptHandler@InterruptHandler 0013                      __size_of_INTERRUPT_Initialize 0004  
                            __end_of_TMR1_CallBack 078A                                   ?_TMR1_Initialize 0001  
                                _SYSTEM_Initialize 07AA                                     ??_setLED_Green 0013  
                                       __accesstop 0060                            __end_of__initialization 0734  
                     __size_of_can_receive_timeout 0006                                 ?_SYSTEM_Initialize 0001  
                         _convertReg2ExtendedCANid 02E0                             CAN_receive@returnValue 0028  
                                    ___rparam_used 000001                                     __pcstackCOMRAM 0001  
                              ??_SYSTEM_Initialize 0017                                          ?_TMR0_ISR 0001  
                                        ?_TMR1_ISR 0001                      ?_TMR1_DefaultInterruptHandler 0001  
                                       _canMessage 002E                               __size_of_setLED_Blue 0008  
                             __size_of_setLED_Cyan 0008              convertReg2StandardCANid@tempRXBn_SIDH 0019  
            convertReg2StandardCANid@tempRXBn_SIDL 0013                                   ?_TMR0_StartTimer 0001  
                        __end_of_SYSTEM_Initialize 07C8                                    __CFG_PLLCFG$OFF 000000  
                                       __pnvCOMRAM 003C                   __end_of_TMR0_SetInterruptHandler 082A  
                                 ?_TMR1_StartTimer 0001                                         ??_TMR0_ISR 0001  
                                       ??_TMR1_ISR 0001                                            _ECANCON 000F72  
                                          _CANSTAT 000F6E                                            _BRGCON1 000E43  
                                          _BRGCON2 000E44                                            _BRGCON3 000E45  
                          __size_of_TMR1_StopTimer 0004                                   __CFG_CANMX$PORTB 000000  
                                          _REFOCON 000F9A                                            _OSCCON2 000FD2  
                                          i2u14_40 075C                                            _RXB0DLC 000F65  
                                          _RXB1DLC 000F35                                            _OSCTUNE 000F9B  
                                          _SPBRGH1 000F7D                                            _TXB0DLC 000F25  
                                          _TXB1DLC 000F15                                            _TXB2DLC 000F05  
                                  __CFG_PWRTEN$OFF 000000                                            __Hparam 0000  
                                          __Lparam 0000                  __size_of_convertReg2StandardCANid 0086  
                        ?_convertReg2StandardCANid 0013                                    _ECAN_Initialize 0536  
                                       _setLED_Red 082A                               __size_of_TMR1_Reload 000A  
                                          __pcinit 0716                                            __ramtop 0F00  
                                          __ptext0 0428                                            __ptext1 082A  
                                          __ptext2 0832                                            __ptext3 083A  
                                          __ptext4 0842                                            __ptext5 0856  
                             __end_of_setLED_Green 083A                                            __ptext6 080C  
                                          __ptext7 07AA                                            __ptext8 06A2  
                                          __ptext9 085A                                          _T0CONbits 000FD5  
                   ??_TMR1_DefaultInterruptHandler 0001                                          _T1CONbits 000FCD  
                            _OSCILLATOR_Initialize 07DE                  __size_of_TMR1_SetInterruptHandler 000A  
                               _EUSART1_Initialize 07C8                           ??_PIN_MANAGER_Initialize 0013  
                        ?_TMR1_SetInterruptHandler 0013                                  __CFG_MSSPMSK$MSK7 000000  
                                          _ringing 002D                         __size_of_SYSTEM_Initialize 001E  
                             end_of_initialization 0734                                ?_EUSART1_Initialize 0001  
                                    __Lmediumconst 0000                                      ??_CAN_receive 0028  
                                          postinc0 000FEE                                            postinc2 000FDE  
                             ??_EUSART1_Initialize 0013                           _TMR0_SetInterruptHandler 0820  
                                        _PORTAbits 000F80                                _can_receive_timeout 084A  
                       ??_convertReg2ExtendedCANid 0017                                EUSART1_Write@txData 0013  
                             ?_can_receive_timeout 0001                            __end_of_ECAN_Initialize 05D8  
                     __end_of_INTERRUPT_Initialize 0866                                __end_of_CAN_receive 02E0  
                                      ?_setLED_Red 0001                                      __pidataCOMRAM 086A  
                                __size_of_TMR0_ISR 0010                                  __size_of_TMR1_ISR 0028  
                                   _TMR1_StopTimer 0856                             ?_OSCILLATOR_Initialize 0001  
                              start_initialization 0716                           __size_of_TMR0_Initialize 0038  
                  __size_of_PIN_MANAGER_Initialize 0044                              __end_of_EUSART1_Write 080C  
                            ??_can_receive_timeout 0001                convertReg2StandardCANid@returnValue 001A  
                         __size_of_TMR1_Initialize 003C                              __size_of_setLED_Green 0008  
                           __size_of_TMR0_CallBack 0020                             __end_of_TMR1_StopTimer 085A  
                           __size_of_TMR1_CallBack 0020                                      ??_setLED_Blue 0013  
                                    ??_setLED_Cyan 0013                              TMR1_ISR@CountCallBack 002B  
                                      __pbssCOMRAM 002B                                __size_of_setLED_Red 0008  
                                     _setLED_Green 0832                              _TMR0_InterruptHandler 003E  
                         __size_of_TMR0_StartTimer 0004                                        _CAN_receive 00BA  
                                 ?_ECAN_Initialize 0001                             _PIN_MANAGER_Initialize 065E  
                                      _CAN_timeout 0044                                          __pintcode 0008  
                 __end_of_TMR1_SetInterruptHandler 0820                                    ?_TMR1_StopTimer 0001  
                     ??_INTERRUPT_InterruptManager 0001                                           _BAUDCON1 000FA7  
                         __size_of_TMR1_StartTimer 0004                                        _COMSTATbits 000F71  
                 __end_of_convertReg2ExtendedCANid 0428                                      _TMR0_CallBack 078A  
                              __end_of_setLED_Blue 084A                                __end_of_setLED_Cyan 0842  
                             _INTERRUPT_Initialize 0862                                      _TMR1_CallBack 076A  
                                ??_TMR0_Initialize 0015                                           _LATBbits 000F8A  
                                         _LATDbits 000F8C                                           _LATFbits 000F8E  
                                         _PIE1bits 000F9D                                           _PIE5bits 000F76  
              __size_of_INTERRUPT_InterruptManager 00AE                         ??_TMR0_SetInterruptHandler 0015  
                                         _PIR1bits 000F9E                                           _PIR5bits 000F77  
                                         _RXB0EIDH 000F63                                           _RXB0EIDL 000F64  
                                         _RXB1EIDH 000F33                                           _RXB1EIDL 000F34  
                                         _RCONbits 000FD0                                      ??_TMR1_Reload 0013  
                                         _RXB0SIDH 000F61                                           _RXB0SIDL 000F62  
                                         _RXB1SIDH 000F31                                           _RXF0EIDH 000EE2  
                                         _RXB1SIDL 000F32                                           _RXF0EIDL 000EE3  
                                         _RXF1EIDH 000EE6                                           _RXF1EIDL 000EE7  
                                         _RXF2EIDH 000EEA                                           _RXF2EIDL 000EEB  
                                         _RXF3EIDH 000EEE                                           _RXF3EIDL 000EEF  
                                         _RXF4EIDH 000EF2                                           _RXF4EIDL 000EF3  
                                         _RXF5EIDH 000EF6                                           _RXF5EIDL 000EF7  
                                         _RXF0SIDH 000EE0                                           _RXF0SIDL 000EE1  
                                         _TXB0EIDH 000F23                                           _RXF1SIDH 000EE4  
                                         _TXB0EIDL 000F24                                           _RXF1SIDL 000EE5  
                                         _TXB1EIDH 000F13                                           _RXF2SIDH 000EE8  
                                         _TXB1EIDL 000F14                                           _RXF2SIDL 000EE9  
                                         _TXB2EIDH 000F03                                           _RXF3SIDH 000EEC  
                                         _TXB2EIDL 000F04                                           _RXF3SIDL 000EED  
                                         _RXF4SIDH 000EF0                                           _RXF4SIDL 000EF1  
                                         _TMR0_ISR 07F0                                           _RXF5SIDH 000EF4  
                                         _RXF5SIDL 000EF5                                           _TMR1_ISR 0742  
                                         _RXM0EIDH 000EFA                                           _RXM0EIDL 000EFB  
                                         _TXB0SIDH 000F21                                           _RXM1EIDH 000EFE  
                                         _TXB0SIDL 000F22                                           _RXM1EIDL 000EFF  
                                         _TXB1SIDH 000F11                                           _TXB1SIDL 000F12  
                                         _TXB2SIDH 000F01                                           _TXB2SIDL 000F02  
                                         _RXM0SIDH 000EF8                                           _RXM0SIDL 000EF9  
                                         _RXM1SIDH 000EFC                                           _RXM1SIDL 000EFD  
                                ??_TMR1_Initialize 0015                                   __CFG_SOSCSEL$DIG 000000  
                                   ?_TMR0_CallBack 0001                              ?_INTERRUPT_Initialize 0001  
                                   ?_TMR1_CallBack 0001                           _convertReg2StandardCANid 05D8  
            convertReg2ExtendedCANid@tempRXBn_EIDH 001B              convertReg2ExtendedCANid@tempRXBn_EIDL 0013  
            convertReg2ExtendedCANid@tempRXBn_SIDH 0014              convertReg2ExtendedCANid@tempRXBn_SIDL 0015  
                                         __Hrparam 0000                                           __Lrparam 0000  
                               __CFG_BOREN$SBORDIS 000000                            ??_OSCILLATOR_Initialize 0013  
                                ??_TMR0_StartTimer 0013                                         _CIOCONbits 000F70  
                                     ??_setLED_Red 0013                        __size_of_EUSART1_Initialize 0016  
                         _TMR1_SetInterruptHandler 0816  convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 0021  
                              __end_of_TMR1_Reload 0816                              _TMR1_InterruptHandler 0040  
convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 0020                                        _setLED_Blue 0842  
                                      _setLED_Cyan 083A                                           __ptext10 0816  
                                         __ptext11 06DE                                           __ptext20 00BA  
                                         __ptext12 085E                                           __ptext21 05D8  
                                         __ptext13 0820                                         _T1GCONbits 000FAA  
                                         __ptext30 0868                                           __ptext22 02E0  
                                         __ptext14 065E                                           __ptext31 0850  
                                         __ptext15 07DE                                           __ptext32 0000  
                                         __ptext24 0742                                           __ptext16 0862  
                                         __ptext25 076A                                           __ptext17 07C8  
                                         __ptext26 0866                                           __ptext18 0536  
                                         __ptext27 084A                                           __ptext19 0800  
                                         __ptext28 07F0                                           __ptext29 078A  
                                ??_TMR1_StartTimer 0013                convertReg2StandardCANid@ConvertedID 001E  
                                    __size_of_main 010E                                      __size_of_ring 0006  
                               __end_of_setLED_Red 0832               __end_of_TMR0_DefaultInterruptHandler 086A  
            __size_of_TMR0_DefaultInterruptHandler 0002                       _TMR0_DefaultInterruptHandler 0868  
              convertReg2ExtendedCANid@returnValue 001C                  __size_of_convertReg2ExtendedCANid 0148  
                        ?_convertReg2ExtendedCANid 0013                                           int$flags 0045  
               __end_of_INTERRUPT_InterruptManager 00B6                         _INTERRUPT_InterruptManager 0008  
                              __CFG_INTOSCSEL$HIGH 000000                                        _RXB0CONbits 000F60  
                                      _RXB1CONbits 000F30                                         _INTCONbits 000FF2  
                                  ??_TMR0_CallBack 0001                        __end_of_can_receive_timeout 0850  
                           ??_INTERRUPT_Initialize 0013                                    ??_TMR1_CallBack 0001  
                                         intlevel2 0000                                  __CFG_T0CKMX$PORTB 000000  
                          ?_PIN_MANAGER_Initialize 0001                                        _TXB0CONbits 000F20  
                                       _RCSTA1bits 000FAB                                       ?_CAN_receive 0026  
                                      _TXB1CONbits 000F10                                        _TXB2CONbits 000F00  
                                 ??_TMR1_StopTimer 0013                      ?_TMR0_DefaultInterruptHandler 0001  
                                      _TMR1_Reload 080C                                 __CFG_WDTPS$1048576 000000  
                           __size_of_EUSART1_Write 000C                                    _TMR0_Initialize 06DE  
                                __CFG_T3CKMX$PORTG 000000                     __end_of_PIN_MANAGER_Initialize 06A2  
                              __CFG_BORPWR$ZPBORMV 000000                                    _TMR1_Initialize 06A2  
