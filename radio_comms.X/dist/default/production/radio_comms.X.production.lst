

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Fri Jan 12 12:03:51 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F66K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           ; Version 1.42
    35                           ; Generated 13/04/2017 GMT
    36                           ; 
    37                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F66K80 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	nvCOMRAM
    70  000037                     __pnvCOMRAM:
    71                           	opt stack 0
    72  000037                     _TMR1_InterruptHandler:
    73                           	opt stack 0
    74  000037                     	ds	2
    75  000039                     _timer1ReloadVal:
    76                           	opt stack 0
    77  000039                     	ds	2
    78  0000                     _BRGCON3	set	3653
    79  0000                     _BRGCON2	set	3652
    80  0000                     _BRGCON1	set	3651
    81  0000                     _RXF5SIDL	set	3829
    82  0000                     _RXF5SIDH	set	3828
    83  0000                     _RXF5EIDL	set	3831
    84  0000                     _RXF5EIDH	set	3830
    85  0000                     _RXF4SIDL	set	3825
    86  0000                     _RXF4SIDH	set	3824
    87  0000                     _RXF4EIDL	set	3827
    88  0000                     _RXF4EIDH	set	3826
    89  0000                     _RXF3SIDL	set	3821
    90  0000                     _RXF3SIDH	set	3820
    91  0000                     _RXF3EIDL	set	3823
    92  0000                     _RXF3EIDH	set	3822
    93  0000                     _RXF2SIDL	set	3817
    94  0000                     _RXF2SIDH	set	3816
    95  0000                     _RXF2EIDL	set	3819
    96  0000                     _RXF2EIDH	set	3818
    97  0000                     _RXF1SIDL	set	3813
    98  0000                     _RXF1SIDH	set	3812
    99  0000                     _RXF1EIDL	set	3815
   100  0000                     _RXF1EIDH	set	3814
   101  0000                     _RXF0SIDL	set	3809
   102  0000                     _RXF0SIDH	set	3808
   103  0000                     _RXF0EIDL	set	3811
   104  0000                     _RXF0EIDH	set	3810
   105  0000                     _RXM1SIDL	set	3837
   106  0000                     _RXM1SIDH	set	3836
   107  0000                     _RXM1EIDL	set	3839
   108  0000                     _RXM1EIDH	set	3838
   109  0000                     _RXM0SIDL	set	3833
   110  0000                     _RXM0SIDH	set	3832
   111  0000                     _RXM0EIDL	set	3835
   112  0000                     _RXM0EIDH	set	3834
   113  0000                     _RXB1D7	set	3901
   114  0000                     _RXB1D6	set	3900
   115  0000                     _RXB1D5	set	3899
   116  0000                     _RXB1D4	set	3898
   117  0000                     _RXB1D3	set	3897
   118  0000                     _RXB1D2	set	3896
   119  0000                     _RXB1D1	set	3895
   120  0000                     _RXB1D0	set	3894
   121  0000                     _RXB1DLC	set	3893
   122  0000                     _RXB1SIDH	set	3889
   123  0000                     _RXB1EIDL	set	3892
   124  0000                     _RXB1EIDH	set	3891
   125  0000                     _RXB1SIDL	set	3890
   126  0000                     _RXB1CONbits	set	3888
   127  0000                     _TXB2D7	set	3853
   128  0000                     _TXB2D6	set	3852
   129  0000                     _TXB2D5	set	3851
   130  0000                     _TXB2D4	set	3850
   131  0000                     _TXB2D3	set	3849
   132  0000                     _TXB2D2	set	3848
   133  0000                     _TXB2D1	set	3847
   134  0000                     _TXB2D0	set	3846
   135  0000                     _TXB2DLC	set	3845
   136  0000                     _TXB2SIDL	set	3842
   137  0000                     _TXB2SIDH	set	3841
   138  0000                     _TXB2EIDL	set	3844
   139  0000                     _TXB2EIDH	set	3843
   140  0000                     _TXB2CONbits	set	3840
   141  0000                     _TXB1D7	set	3869
   142  0000                     _TXB1D6	set	3868
   143  0000                     _TXB1D5	set	3867
   144  0000                     _TXB1D4	set	3866
   145  0000                     _TXB1D3	set	3865
   146  0000                     _TXB1D2	set	3864
   147  0000                     _TXB1D1	set	3863
   148  0000                     _TXB1D0	set	3862
   149  0000                     _TXB1DLC	set	3861
   150  0000                     _TXB1SIDL	set	3858
   151  0000                     _TXB1SIDH	set	3857
   152  0000                     _TXB1EIDL	set	3860
   153  0000                     _TXB1EIDH	set	3859
   154  0000                     _TXB1CONbits	set	3856
   155  0000                     _TXB0D7	set	3885
   156  0000                     _TXB0D6	set	3884
   157  0000                     _TXB0D5	set	3883
   158  0000                     _TXB0D4	set	3882
   159  0000                     _TXB0D3	set	3881
   160  0000                     _TXB0D2	set	3880
   161  0000                     _TXB0D1	set	3879
   162  0000                     _TXB0D0	set	3878
   163  0000                     _TXB0DLC	set	3877
   164  0000                     _TXB0SIDL	set	3874
   165  0000                     _TXB0SIDH	set	3873
   166  0000                     _TXB0EIDL	set	3876
   167  0000                     _TXB0EIDH	set	3875
   168  0000                     _TXB0CONbits	set	3872
   169  0000                     _WPUB	set	3931
   170  0000                     _ANCON1	set	3932
   171  0000                     _ANCON0	set	3933
   172  0000                     _CIOCONbits	set	3952
   173  0000                     _LATDbits	set	3980
   174  0000                     _LATAbits	set	3977
   175  0000                     _INTCONbits	set	4082
   176  0000                     _RCONbits	set	4048
   177  0000                     _T1GCONbits	set	4010
   178  0000                     _T1CONbits	set	4045
   179  0000                     _PIE1bits	set	3997
   180  0000                     _TMR1L	set	4046
   181  0000                     _TMR1H	set	4047
   182  0000                     _T1GCON	set	4010
   183  0000                     _T1CON	set	4045
   184  0000                     _TXREG1	set	4013
   185  0000                     _RCREG1	set	4014
   186  0000                     _RCSTA1bits	set	4011
   187  0000                     _PIR1bits	set	3998
   188  0000                     _SPBRGH1	set	3965
   189  0000                     _SPBRG1	set	4015
   190  0000                     _TXSTA1	set	4012
   191  0000                     _RCSTA1	set	4011
   192  0000                     _BAUDCON1	set	4007
   193  0000                     _COMSTATbits	set	3953
   194  0000                     _RXB0D7	set	3949
   195  0000                     _RXB0D6	set	3948
   196  0000                     _RXB0D5	set	3947
   197  0000                     _RXB0D4	set	3946
   198  0000                     _RXB0D3	set	3945
   199  0000                     _RXB0D2	set	3944
   200  0000                     _RXB0D1	set	3943
   201  0000                     _RXB0D0	set	3942
   202  0000                     _RXB0DLC	set	3941
   203  0000                     _RXB0SIDH	set	3937
   204  0000                     _RXB0EIDL	set	3940
   205  0000                     _RXB0EIDH	set	3939
   206  0000                     _RXB0SIDL	set	3938
   207  0000                     _RXB0CONbits	set	3936
   208  0000                     _PIE5bits	set	3958
   209  0000                     _PIR5bits	set	3959
   210  0000                     _ECANCON	set	3954
   211  0000                     _CANSTAT	set	3950
   212  0000                     _CANCON	set	3951
   213  0000                     _REFOCON	set	3994
   214  0000                     _OSCTUNE	set	3995
   215  0000                     _OSCCON2	set	4050
   216  0000                     _OSCCON	set	4051
   217  0000                     _TRISD	set	3989
   218  0000                     _TRISC	set	3988
   219  0000                     _TRISB	set	3987
   220  0000                     _TRISG	set	3992
   221  0000                     _TRISA	set	3986
   222  0000                     _TRISF	set	3991
   223  0000                     _TRISE	set	3990
   224  0000                     _LATC	set	3979
   225  0000                     _LATG	set	3983
   226  0000                     _LATB	set	3978
   227  0000                     _LATF	set	3982
   228  0000                     _LATA	set	3977
   229  0000                     _LATD	set	3980
   230  0000                     _LATE	set	3981
   231                           
   232                           ; #config settings
   233  0000                     
   234                           	psect	cinit
   235  0006F0                     __pcinit:
   236                           	opt stack 0
   237  0006F0                     start_initialization:
   238                           	opt stack 0
   239  0006F0                     __initialization:
   240                           	opt stack 0
   241                           
   242                           ; Clear objects allocated to COMRAM (16 bytes)
   243  0006F0  EE00  F027         	lfsr	0,__pbssCOMRAM
   244  0006F4  0E10               	movlw	16
   245  0006F6                     clear_0:
   246  0006F6  6AEE               	clrf	postinc0,c
   247  0006F8  06E8               	decf	wreg,f,c
   248  0006FA  E1FD               	bnz	clear_0
   249  0006FC                     end_of_initialization:
   250                           	opt stack 0
   251  0006FC                     __end_of__initialization:
   252                           	opt stack 0
   253  0006FC  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   254  0006FE  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   255  000700  0E00               	movlw	low (__Lmediumconst shr (0+16))
   256  000702  6EF8               	movwf	tblptru,c
   257  000704  0100               	movlb	0
   258  000706  EF77  F002         	goto	_main	;jump to C main() function
   259                           tblptru	equ	0xFF8
   260                           postinc0	equ	0xFEE
   261                           wreg	equ	0xFE8
   262                           
   263                           	psect	bssCOMRAM
   264  000027                     __pbssCOMRAM:
   265                           	opt stack 0
   266  000027                     TMR1_ISR@CountCallBack:
   267                           	opt stack 0
   268  000027                     	ds	2
   269  000029                     _canMessage:
   270                           	opt stack 0
   271  000029                     	ds	14
   272                           tblptru	equ	0xFF8
   273                           postinc0	equ	0xFEE
   274                           wreg	equ	0xFE8
   275                           
   276                           	psect	cstackCOMRAM
   277  000001                     __pcstackCOMRAM:
   278                           	opt stack 0
   279  000001                     ??_INTERRUPT_InterruptManager:
   280  000001                     
   281                           ; 1 bytes @ 0x0
   282  000001                     	ds	14
   283  00000F                     ??_ECAN_Initialize:
   284  00000F                     ?_convertReg2ExtendedCANid:
   285                           	opt stack 0
   286  00000F                     ?_convertReg2StandardCANid:
   287                           	opt stack 0
   288  00000F                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   289                           	opt stack 0
   290  00000F                     convertReg2StandardCANid@tempRXBn_SIDL:
   291                           	opt stack 0
   292  00000F                     EUSART1_Write@txData:
   293                           	opt stack 0
   294  00000F                     TMR1_SetInterruptHandler@InterruptHandler:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0xE
   298  00000F                     	ds	1
   299  000010                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0xF
   303  000010                     	ds	1
   304  000011                     ??_TMR1_Initialize:
   305  000011                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   306                           	opt stack 0
   307                           
   308                           ; 1 bytes @ 0x10
   309  000011                     	ds	2
   310  000013                     ??_convertReg2ExtendedCANid:
   311  000013                     ??_convertReg2StandardCANid:
   312  000013                     
   313                           ; 1 bytes @ 0x12
   314  000013                     	ds	2
   315  000015                     convertReg2StandardCANid@tempRXBn_SIDH:
   316                           	opt stack 0
   317                           
   318                           ; 1 bytes @ 0x14
   319  000015                     	ds	1
   320  000016                     convertReg2StandardCANid@returnValue:
   321                           	opt stack 0
   322                           
   323                           ; 4 bytes @ 0x15
   324  000016                     	ds	1
   325  000017                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x16
   329  000017                     	ds	1
   330  000018                     convertReg2ExtendedCANid@returnValue:
   331                           	opt stack 0
   332                           
   333                           ; 4 bytes @ 0x17
   334  000018                     	ds	2
   335  00001A                     convertReg2StandardCANid@ConvertedID:
   336                           	opt stack 0
   337                           
   338                           ; 4 bytes @ 0x19
   339  00001A                     	ds	2
   340  00001C                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   341                           	opt stack 0
   342                           
   343                           ; 1 bytes @ 0x1B
   344  00001C                     	ds	1
   345  00001D                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x1C
   349  00001D                     	ds	1
   350  00001E                     convertReg2ExtendedCANid@ConvertedID:
   351                           	opt stack 0
   352                           
   353                           ; 4 bytes @ 0x1D
   354  00001E                     	ds	4
   355  000022                     CAN_receive@tempCanMsg:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x21
   359  000022                     	ds	2
   360  000024                     CAN_receive@returnValue:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x23
   364  000024                     	ds	1
   365  000025                     ??_main:
   366                           
   367                           ; 1 bytes @ 0x24
   368  000025                     	ds	2
   369                           tblptru	equ	0xFF8
   370                           postinc0	equ	0xFEE
   371                           wreg	equ	0xFE8
   372                           
   373 ;;
   374 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   375 ;;
   376 ;; *************** function _main *****************
   377 ;; Defined at:
   378 ;;		line 21 in file "main.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;		None
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   387 ;; Tracked objects:
   388 ;;		On entry : 0/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   394 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   396 ;;Total ram usage:        2 bytes
   397 ;; Hardware stack levels required when called:    7
   398 ;; This function calls:
   399 ;;		_CAN_receive
   400 ;;		_EUSART1_Write
   401 ;;		_SYSTEM_Initialize
   402 ;;		_TMR1_SetInterruptHandler
   403 ;;		_TMR1_StartTimer
   404 ;;		_TMR1_StopTimer
   405 ;; This function is called by:
   406 ;;		Startup code after reset
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410                           	psect	text0
   411  0004EE                     __ptext0:
   412                           	opt stack 0
   413  0004EE                     _main:
   414                           	opt stack 24
   415                           
   416                           ;main.c: 22: SYSTEM_Initialize();
   417                           
   418                           ;incstack = 0
   419  0004EE  EC85  F003         	call	_SYSTEM_Initialize	;wreg free
   420                           
   421                           ;main.c: 25: CIOCONbits.CLKSEL = 1;
   422  0004F2  8070               	bsf	3952,0,c	;volatile
   423                           
   424                           ;main.c: 26: CIOCONbits.ENDRHI = 1;
   425  0004F4  8A70               	bsf	3952,5,c	;volatile
   426                           
   427                           ;main.c: 27: CIOCONbits.TX2SRC = 0;
   428  0004F6  9E70               	bcf	3952,7,c	;volatile
   429                           
   430                           ;main.c: 28: CIOCONbits.TX2EN = 0;
   431  0004F8  9C70               	bcf	3952,6,c	;volatile
   432                           
   433                           ;main.c: 29: TMR1_SetInterruptHandler(&radio_timeout);
   434  0004FA  0E62               	movlw	low _radio_timeout
   435  0004FC  6E0F               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
   436  0004FE  0E07               	movlw	high _radio_timeout
   437  000500  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
   438  000502  ECAC  F003         	call	_TMR1_SetInterruptHandler	;wreg free
   439                           
   440                           ;main.c: 32: _delay((unsigned long)((10000)*(16000000/4000.0)));
   441  000506  0ECB               	movlw	203
   442  000508  6E26               	movwf	(??_main+1)& (0+255),c
   443  00050A  0EEC               	movlw	236
   444  00050C  6E25               	movwf	??_main& (0+255),c
   445  00050E  0E84               	movlw	132
   446  000510                     u437:
   447  000510  2EE8               	decfsz	wreg,f,c
   448  000512  D7FE               	bra	u437
   449  000514  2E25               	decfsz	??_main& (0+255),f,c
   450  000516  D7FC               	bra	u437
   451  000518  2E26               	decfsz	(??_main+1)& (0+255),f,c
   452  00051A  D7FA               	bra	u437
   453  00051C  D000               	nop2	
   454                           
   455                           ;main.c: 33: EUSART1_Write('R');
   456  00051E  0E52               	movlw	82
   457  000520  ECA6  F003         	call	_EUSART1_Write
   458                           
   459                           ;main.c: 34: EUSART1_Write('I');
   460  000524  0E49               	movlw	73
   461  000526  ECA6  F003         	call	_EUSART1_Write
   462                           
   463                           ;main.c: 35: EUSART1_Write('N');
   464  00052A  0E4E               	movlw	78
   465  00052C  ECA6  F003         	call	_EUSART1_Write
   466                           
   467                           ;main.c: 36: EUSART1_Write('G');
   468  000530  0E47               	movlw	71
   469  000532  ECA6  F003         	call	_EUSART1_Write
   470                           
   471                           ;main.c: 37: EUSART1_Write('\n');
   472  000536  0E0A               	movlw	10
   473  000538  ECA6  F003         	call	_EUSART1_Write
   474                           
   475                           ;main.c: 38: EUSART1_Write('\r');
   476  00053C  0E0D               	movlw	13
   477  00053E  ECA6  F003         	call	_EUSART1_Write
   478                           
   479                           ;main.c: 40: do { LATAbits.LATA5 = 0; } while(0);
   480  000542  9A89               	bcf	3977,5,c	;volatile
   481                           
   482                           ;main.c: 41: _delay((unsigned long)((2000)*(16000000/4000.0)));
   483  000544  0E29               	movlw	41
   484  000546  6E26               	movwf	(??_main+1)& (0+255),c
   485  000548  0E96               	movlw	150
   486  00054A  6E25               	movwf	??_main& (0+255),c
   487  00054C  0E7F               	movlw	127
   488  00054E                     u447:
   489  00054E  2EE8               	decfsz	wreg,f,c
   490  000550  D7FE               	bra	u447
   491  000552  2E25               	decfsz	??_main& (0+255),f,c
   492  000554  D7FC               	bra	u447
   493  000556  2E26               	decfsz	(??_main+1)& (0+255),f,c
   494  000558  D7FA               	bra	u447
   495  00055A  F000               	nop	
   496                           
   497                           ;main.c: 42: do { LATAbits.LATA5 = 1; } while(0);
   498  00055C  8A89               	bsf	3977,5,c	;volatile
   499  00055E                     l1784:
   500                           
   501                           ;main.c: 45: if (CAN_receive(&canMessage)) {
   502  00055E  0E29               	movlw	low _canMessage
   503  000560  6E22               	movwf	CAN_receive@tempCanMsg,c
   504  000562  0E00               	movlw	high _canMessage
   505  000564  6E23               	movwf	CAN_receive@tempCanMsg+1,c
   506  000566  EC47  F000         	call	_CAN_receive	;wreg free
   507  00056A  0900               	iorlw	0
   508  00056C  B4D8               	btfsc	status,2,c
   509  00056E  D7F7               	goto	l1784
   510                           
   511                           ;main.c: 46: if (canMessage.frame.id == 0x643) {
   512  000570  0E43               	movlw	67
   513  000572  182A               	xorwf	_canMessage+1,w,c
   514  000574  E1F4               	bnz	l1784
   515  000576  0E06               	movlw	6
   516  000578  182B               	xorwf	_canMessage+2,w,c
   517  00057A  102C               	iorwf	_canMessage+3,w,c
   518  00057C  102D               	iorwf	_canMessage+4,w,c
   519  00057E  A4D8               	btfss	status,2,c
   520  000580  D7EE               	goto	l1784
   521                           
   522                           ;main.c: 47: if(canMessage.frame.data0 >> 7) {
   523  000582  442F               	rlncf	_canMessage+6,w,c
   524  000584  0B01               	andlw	1
   525  000586  B4D8               	btfsc	status,2,c
   526  000588  D006               	goto	l532
   527                           
   528                           ;main.c: 48: do { LATAbits.LATA5 = 0; } while(0);
   529  00058A  9A89               	bcf	3977,5,c	;volatile
   530                           
   531                           ;main.c: 49: do { LATDbits.LATD5 = 0; } while(0);
   532  00058C  9A8C               	bcf	3980,5,c	;volatile
   533                           
   534                           ;main.c: 50: do { LATDbits.LATD4 = 1; } while(0);
   535  00058E  888C               	bsf	3980,4,c	;volatile
   536                           
   537                           ;main.c: 51: TMR1_StartTimer();
   538  000590  ECB8  F003         	call	_TMR1_StartTimer	;wreg free
   539                           
   540                           ;main.c: 52: } else {
   541  000594  D7E4               	goto	l1784
   542  000596                     l532:
   543  000596  8A89               	bsf	3977,5,c	;volatile
   544                           
   545                           ;main.c: 54: do { LATDbits.LATD4 = 0; } while(0);
   546  000598  988C               	bcf	3980,4,c	;volatile
   547                           
   548                           ;main.c: 55: do { LATDbits.LATD5 = 1; } while(0);
   549  00059A  8A8C               	bsf	3980,5,c	;volatile
   550                           
   551                           ;main.c: 56: TMR1_StopTimer();
   552  00059C  ECB6  F003         	call	_TMR1_StopTimer	;wreg free
   553  0005A0  D7DE               	goto	l1784
   554  0005A2                     __end_of_main:
   555                           	opt stack 0
   556                           tblptru	equ	0xFF8
   557                           postinc0	equ	0xFEE
   558                           wreg	equ	0xFE8
   559                           status	equ	0xFD8
   560                           
   561 ;; *************** function _TMR1_StopTimer *****************
   562 ;; Defined at:
   563 ;;		line 101 in file "mcc_generated_files/tmr1.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		None
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   581 ;;Total ram usage:        0 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; Hardware stack levels required when called:    4
   584 ;; This function calls:
   585 ;;		Nothing
   586 ;; This function is called by:
   587 ;;		_main
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text1
   592  00076C                     __ptext1:
   593                           	opt stack 0
   594  00076C                     _TMR1_StopTimer:
   595                           	opt stack 26
   596                           
   597                           ;tmr1.c: 104: T1CONbits.TMR1ON = 0;
   598                           
   599                           ;incstack = 0
   600  00076C  90CD               	bcf	4045,0,c	;volatile
   601  00076E  0012               	return		;funcret
   602  000770                     __end_of_TMR1_StopTimer:
   603                           	opt stack 0
   604                           tblptru	equ	0xFF8
   605                           postinc0	equ	0xFEE
   606                           wreg	equ	0xFE8
   607                           status	equ	0xFD8
   608                           
   609 ;; *************** function _SYSTEM_Initialize *****************
   610 ;; Defined at:
   611 ;;		line 113 in file "mcc_generated_files/mcc.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, status,2, status,0, cstack
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   629 ;;Total ram usage:        0 bytes
   630 ;; Hardware stack levels used:    1
   631 ;; Hardware stack levels required when called:    6
   632 ;; This function calls:
   633 ;;		_ECAN_Initialize
   634 ;;		_EUSART1_Initialize
   635 ;;		_INTERRUPT_Initialize
   636 ;;		_OSCILLATOR_Initialize
   637 ;;		_PIN_MANAGER_Initialize
   638 ;;		_TMR1_Initialize
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text2
   645  00070A                     __ptext2:
   646                           	opt stack 0
   647  00070A                     _SYSTEM_Initialize:
   648                           	opt stack 24
   649                           
   650                           ;mcc.c: 116: INTERRUPT_Initialize();
   651                           
   652                           ;incstack = 0
   653  00070A  ECBA  F003         	call	_INTERRUPT_Initialize	;wreg free
   654                           
   655                           ;mcc.c: 117: PIN_MANAGER_Initialize();
   656  00070E  EC14  F003         	call	_PIN_MANAGER_Initialize	;wreg free
   657                           
   658                           ;mcc.c: 118: OSCILLATOR_Initialize();
   659  000712  EC9D  F003         	call	_OSCILLATOR_Initialize	;wreg free
   660                           
   661                           ;mcc.c: 119: TMR1_Initialize();
   662  000716  EC36  F003         	call	_TMR1_Initialize	;wreg free
   663                           
   664                           ;mcc.c: 120: EUSART1_Initialize();
   665  00071A  EC92  F003         	call	_EUSART1_Initialize	;wreg free
   666                           
   667                           ;mcc.c: 121: ECAN_Initialize();
   668  00071E  EC00  F002         	call	_ECAN_Initialize	;wreg free
   669  000722  0012               	return		;funcret
   670  000724                     __end_of_SYSTEM_Initialize:
   671                           	opt stack 0
   672                           tblptru	equ	0xFF8
   673                           postinc0	equ	0xFEE
   674                           wreg	equ	0xFE8
   675                           status	equ	0xFD8
   676                           
   677 ;; *************** function _TMR1_Initialize *****************
   678 ;; Defined at:
   679 ;;		line 63 in file "mcc_generated_files/tmr1.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;		None
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg, status,2, status,0, cstack
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   695 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   697 ;;Total ram usage:        2 bytes
   698 ;; Hardware stack levels used:    1
   699 ;; Hardware stack levels required when called:    5
   700 ;; This function calls:
   701 ;;		_TMR1_SetInterruptHandler
   702 ;;		_TMR1_StartTimer
   703 ;; This function is called by:
   704 ;;		_SYSTEM_Initialize
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text3
   709  00066C                     __ptext3:
   710                           	opt stack 0
   711  00066C                     _TMR1_Initialize:
   712                           	opt stack 24
   713                           
   714                           ;tmr1.c: 68: T1CON = 0x30;
   715                           
   716                           ;incstack = 0
   717  00066C  0E30               	movlw	48
   718  00066E  6ECD               	movwf	4045,c	;volatile
   719                           
   720                           ;tmr1.c: 71: T1GCON = 0x00;
   721  000670  0E00               	movlw	0
   722  000672  6EAA               	movwf	4010,c	;volatile
   723                           
   724                           ;tmr1.c: 74: TMR1H = 0x3C;
   725  000674  0E3C               	movlw	60
   726  000676  6ECF               	movwf	4047,c	;volatile
   727                           
   728                           ;tmr1.c: 77: TMR1L = 0xB0;
   729  000678  0EB0               	movlw	176
   730  00067A  6ECE               	movwf	4046,c	;volatile
   731                           
   732                           ;tmr1.c: 80: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
   733  00067C  50CE               	movf	4046,w,c	;volatile
   734  00067E  CFCF F011          	movff	4047,??_TMR1_Initialize	;volatile
   735  000682  6A12               	clrf	(??_TMR1_Initialize+1)& (0+255),c
   736  000684  C011  F012         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
   737  000688  6A11               	clrf	??_TMR1_Initialize,c
   738  00068A  1011               	iorwf	??_TMR1_Initialize,w,c
   739  00068C  6E39               	movwf	_timer1ReloadVal,c	;volatile
   740  00068E  5012               	movf	??_TMR1_Initialize+1,w,c
   741  000690  6E3A               	movwf	_timer1ReloadVal+1,c	;volatile
   742                           
   743                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
   744  000692  909E               	bcf	3998,0,c	;volatile
   745                           
   746                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
   747  000694  809D               	bsf	3997,0,c	;volatile
   748                           
   749                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
   750  000696  0E78               	movlw	low _TMR1_DefaultInterruptHandler
   751  000698  6E0F               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
   752  00069A  0E07               	movlw	high _TMR1_DefaultInterruptHandler
   753  00069C  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
   754  00069E  ECAC  F003         	call	_TMR1_SetInterruptHandler	;wreg free
   755                           
   756                           ;tmr1.c: 92: TMR1_StartTimer();
   757  0006A2  ECB8  F003         	call	_TMR1_StartTimer	;wreg free
   758  0006A6  0012               	return		;funcret
   759  0006A8                     __end_of_TMR1_Initialize:
   760                           	opt stack 0
   761                           tblptru	equ	0xFF8
   762                           postinc0	equ	0xFEE
   763                           wreg	equ	0xFE8
   764                           status	equ	0xFD8
   765                           
   766 ;; *************** function _TMR1_StartTimer *****************
   767 ;; Defined at:
   768 ;;		line 95 in file "mcc_generated_files/tmr1.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		None
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   786 ;;Total ram usage:        0 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    4
   789 ;; This function calls:
   790 ;;		Nothing
   791 ;; This function is called by:
   792 ;;		_TMR1_Initialize
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text4
   798  000770                     __ptext4:
   799                           	opt stack 0
   800  000770                     _TMR1_StartTimer:
   801                           	opt stack 26
   802                           
   803                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
   804                           
   805                           ;incstack = 0
   806  000770  80CD               	bsf	4045,0,c	;volatile
   807  000772  0012               	return		;funcret
   808  000774                     __end_of_TMR1_StartTimer:
   809                           	opt stack 0
   810                           tblptru	equ	0xFF8
   811                           postinc0	equ	0xFEE
   812                           wreg	equ	0xFE8
   813                           status	equ	0xFD8
   814                           
   815 ;; *************** function _TMR1_SetInterruptHandler *****************
   816 ;; Defined at:
   817 ;;		line 190 in file "mcc_generated_files/tmr1.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;  InterruptHan    2   14[COMRAM] PTR FTN()void 
   820 ;;		 -> radio_timeout(1), TMR1_DefaultInterruptHandler(1), 
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2, status,0
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   836 ;;Total ram usage:        2 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; Hardware stack levels required when called:    4
   839 ;; This function calls:
   840 ;;		Nothing
   841 ;; This function is called by:
   842 ;;		_TMR1_Initialize
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text5
   848  000758                     __ptext5:
   849                           	opt stack 0
   850  000758                     _TMR1_SetInterruptHandler:
   851                           	opt stack 26
   852                           
   853                           ;tmr1.c: 191: TMR1_InterruptHandler = InterruptHandler;
   854                           
   855                           ;incstack = 0
   856  000758  C00F  F037         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
   857  00075C  C010  F038         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
   858  000760  0012               	return		;funcret
   859  000762                     __end_of_TMR1_SetInterruptHandler:
   860                           	opt stack 0
   861                           tblptru	equ	0xFF8
   862                           postinc0	equ	0xFEE
   863                           wreg	equ	0xFE8
   864                           status	equ	0xFD8
   865                           
   866 ;; *************** function _PIN_MANAGER_Initialize *****************
   867 ;; Defined at:
   868 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, status,2
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   886 ;;Total ram usage:        0 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; Hardware stack levels required when called:    4
   889 ;; This function calls:
   890 ;;		Nothing
   891 ;; This function is called by:
   892 ;;		_SYSTEM_Initialize
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           	psect	text6
   897  000628                     __ptext6:
   898                           	opt stack 0
   899  000628                     _PIN_MANAGER_Initialize:
   900                           	opt stack 25
   901                           
   902                           ;pin_manager.c: 57: LATE = 0x00;
   903                           
   904                           ;incstack = 0
   905  000628  0E00               	movlw	0
   906  00062A  6E8D               	movwf	3981,c	;volatile
   907                           
   908                           ;pin_manager.c: 58: LATD = 0x70;
   909  00062C  0E70               	movlw	112
   910  00062E  6E8C               	movwf	3980,c	;volatile
   911                           
   912                           ;pin_manager.c: 59: LATA = 0x20;
   913  000630  0E20               	movlw	32
   914  000632  6E89               	movwf	3977,c	;volatile
   915                           
   916                           ;pin_manager.c: 60: LATF = 0x00;
   917  000634  0E00               	movlw	0
   918  000636  6E8E               	movwf	3982,c	;volatile
   919                           
   920                           ;pin_manager.c: 61: LATB = 0x00;
   921  000638  0E00               	movlw	0
   922  00063A  6E8A               	movwf	3978,c	;volatile
   923                           
   924                           ;pin_manager.c: 62: LATG = 0x00;
   925  00063C  0E00               	movlw	0
   926  00063E  6E8F               	movwf	3983,c	;volatile
   927                           
   928                           ;pin_manager.c: 63: LATC = 0x00;
   929  000640  0E00               	movlw	0
   930  000642  6E8B               	movwf	3979,c	;volatile
   931                           
   932                           ;pin_manager.c: 68: TRISE = 0xF7;
   933  000644  0EF7               	movlw	247
   934  000646  6E96               	movwf	3990,c	;volatile
   935                           
   936                           ;pin_manager.c: 69: TRISF = 0xFF;
   937  000648  6897               	setf	3991,c	;volatile
   938                           
   939                           ;pin_manager.c: 70: TRISA = 0xCF;
   940  00064A  0ECF               	movlw	207
   941  00064C  6E92               	movwf	3986,c	;volatile
   942                           
   943                           ;pin_manager.c: 71: TRISG = 0x17;
   944  00064E  0E17               	movlw	23
   945  000650  6E98               	movwf	3992,c	;volatile
   946                           
   947                           ;pin_manager.c: 72: TRISB = 0xFB;
   948  000652  0EFB               	movlw	251
   949  000654  6E93               	movwf	3987,c	;volatile
   950                           
   951                           ;pin_manager.c: 73: TRISC = 0xFF;
   952  000656  6894               	setf	3988,c	;volatile
   953                           
   954                           ;pin_manager.c: 74: TRISD = 0x8F;
   955  000658  0E8F               	movlw	143
   956  00065A  6E95               	movwf	3989,c	;volatile
   957                           
   958                           ;pin_manager.c: 79: ANCON0 = 0xFF;
   959  00065C  010F               	movlb	15	; () banked
   960  00065E  695D               	setf	93,b	;volatile
   961                           
   962                           ;pin_manager.c: 80: ANCON1 = 0x7F;
   963  000660  0E7F               	movlw	127
   964  000662  010F               	movlb	15	; () banked
   965  000664  6F5C               	movwf	92,b	;volatile
   966                           
   967                           ; BSR set to: 15
   968                           ;pin_manager.c: 85: WPUB = 0xFF;
   969  000666  010F               	movlb	15	; () banked
   970  000668  695B               	setf	91,b	;volatile
   971                           
   972                           ; BSR set to: 15
   973  00066A  0012               	return		;funcret
   974  00066C                     __end_of_PIN_MANAGER_Initialize:
   975                           	opt stack 0
   976                           tblptru	equ	0xFF8
   977                           postinc0	equ	0xFEE
   978                           wreg	equ	0xFE8
   979                           status	equ	0xFD8
   980                           
   981 ;; *************** function _OSCILLATOR_Initialize *****************
   982 ;; Defined at:
   983 ;;		line 124 in file "mcc_generated_files/mcc.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1001 ;;Total ram usage:        0 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; Hardware stack levels required when called:    4
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_SYSTEM_Initialize
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text7
  1012  00073A                     __ptext7:
  1013                           	opt stack 0
  1014  00073A                     _OSCILLATOR_Initialize:
  1015                           	opt stack 25
  1016                           
  1017                           ;mcc.c: 127: OSCCON = 0x60;
  1018                           
  1019                           ; BSR set to: 15
  1020                           ;incstack = 0
  1021  00073A  0E60               	movlw	96
  1022  00073C  6ED3               	movwf	4051,c	;volatile
  1023                           
  1024                           ;mcc.c: 129: OSCCON2 = 0x00;
  1025  00073E  0E00               	movlw	0
  1026  000740  6ED2               	movwf	4050,c	;volatile
  1027                           
  1028                           ;mcc.c: 131: OSCTUNE = 0x00;
  1029  000742  0E00               	movlw	0
  1030  000744  6E9B               	movwf	3995,c	;volatile
  1031                           
  1032                           ;mcc.c: 133: REFOCON = 0x00;
  1033  000746  0E00               	movlw	0
  1034  000748  6E9A               	movwf	3994,c	;volatile
  1035  00074A  0012               	return		;funcret
  1036  00074C                     __end_of_OSCILLATOR_Initialize:
  1037                           	opt stack 0
  1038                           tblptru	equ	0xFF8
  1039                           postinc0	equ	0xFEE
  1040                           wreg	equ	0xFE8
  1041                           status	equ	0xFD8
  1042                           
  1043 ;; *************** function _INTERRUPT_Initialize *****************
  1044 ;; Defined at:
  1045 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		None
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1063 ;;Total ram usage:        0 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    4
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_SYSTEM_Initialize
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text8
  1074  000774                     __ptext8:
  1075                           	opt stack 0
  1076  000774                     _INTERRUPT_Initialize:
  1077                           	opt stack 25
  1078                           
  1079                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1080                           
  1081                           ;incstack = 0
  1082  000774  9ED0               	bcf	4048,7,c	;volatile
  1083  000776  0012               	return		;funcret
  1084  000778                     __end_of_INTERRUPT_Initialize:
  1085                           	opt stack 0
  1086                           tblptru	equ	0xFF8
  1087                           postinc0	equ	0xFEE
  1088                           wreg	equ	0xFE8
  1089                           status	equ	0xFD8
  1090                           
  1091 ;; *************** function _EUSART1_Initialize *****************
  1092 ;; Defined at:
  1093 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1111 ;;Total ram usage:        0 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    4
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		_SYSTEM_Initialize
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text9
  1122  000724                     __ptext9:
  1123                           	opt stack 0
  1124  000724                     _EUSART1_Initialize:
  1125                           	opt stack 25
  1126                           
  1127                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  1128                           
  1129                           ;incstack = 0
  1130  000724  0E08               	movlw	8
  1131  000726  6EA7               	movwf	4007,c	;volatile
  1132                           
  1133                           ;eusart1.c: 63: RCSTA1 = 0x90;
  1134  000728  0E90               	movlw	144
  1135  00072A  6EAB               	movwf	4011,c	;volatile
  1136                           
  1137                           ;eusart1.c: 66: TXSTA1 = 0x24;
  1138  00072C  0E24               	movlw	36
  1139  00072E  6EAC               	movwf	4012,c	;volatile
  1140                           
  1141                           ;eusart1.c: 69: SPBRG1 = 0x22;
  1142  000730  0E22               	movlw	34
  1143  000732  6EAF               	movwf	4015,c	;volatile
  1144                           
  1145                           ;eusart1.c: 72: SPBRGH1 = 0x00;
  1146  000734  0E00               	movlw	0
  1147  000736  6E7D               	movwf	3965,c	;volatile
  1148  000738  0012               	return		;funcret
  1149  00073A                     __end_of_EUSART1_Initialize:
  1150                           	opt stack 0
  1151                           tblptru	equ	0xFF8
  1152                           postinc0	equ	0xFEE
  1153                           wreg	equ	0xFE8
  1154                           status	equ	0xFD8
  1155                           
  1156 ;; *************** function _ECAN_Initialize *****************
  1157 ;; Defined at:
  1158 ;;		line 63 in file "mcc_generated_files/ecan.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1174 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1176 ;;Total ram usage:        1 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    4
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		_SYSTEM_Initialize
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text10
  1187  000400                     __ptext10:
  1188                           	opt stack 0
  1189  000400                     _ECAN_Initialize:
  1190                           	opt stack 25
  1191                           
  1192                           ;ecan.c: 65: CANCON = 0x80;
  1193                           
  1194                           ;incstack = 0
  1195  000400  0E80               	movlw	128
  1196  000402  6E6F               	movwf	3951,c	;volatile
  1197  000404                     l1196:
  1198  000404  506E               	movf	3950,w,c	;volatile
  1199  000406  0BE0               	andlw	224
  1200  000408  0A80               	xorlw	128
  1201  00040A  A4D8               	btfss	status,2,c
  1202  00040C  D7FB               	goto	l1196
  1203                           
  1204                           ;ecan.c: 71: ECANCON = 0x00;
  1205  00040E  0E00               	movlw	0
  1206  000410  6E72               	movwf	3954,c	;volatile
  1207                           
  1208                           ;ecan.c: 88: RXM0EIDH = 0x00;
  1209  000412  0E00               	movlw	0
  1210  000414  010E               	movlb	14	; () banked
  1211  000416  6FFA               	movwf	250,b	;volatile
  1212                           
  1213                           ;ecan.c: 89: RXM0EIDL = 0x00;
  1214  000418  0E00               	movlw	0
  1215  00041A  010E               	movlb	14	; () banked
  1216  00041C  6FFB               	movwf	251,b	;volatile
  1217                           
  1218                           ;ecan.c: 90: RXM0SIDH = 0x00;
  1219  00041E  0E00               	movlw	0
  1220  000420  010E               	movlb	14	; () banked
  1221  000422  6FF8               	movwf	248,b	;volatile
  1222                           
  1223                           ;ecan.c: 91: RXM0SIDL = 0x00;
  1224  000424  0E00               	movlw	0
  1225  000426  010E               	movlb	14	; () banked
  1226  000428  6FF9               	movwf	249,b	;volatile
  1227                           
  1228                           ; BSR set to: 14
  1229                           ;ecan.c: 93: RXM1EIDH = 0xFF;
  1230  00042A  010E               	movlb	14	; () banked
  1231  00042C  69FE               	setf	254,b	;volatile
  1232                           
  1233                           ; BSR set to: 14
  1234                           ;ecan.c: 94: RXM1EIDL = 0xFF;
  1235  00042E  010E               	movlb	14	; () banked
  1236  000430  69FF               	setf	255,b	;volatile
  1237                           
  1238                           ; BSR set to: 14
  1239                           ;ecan.c: 95: RXM1SIDH = 0xFF;
  1240  000432  010E               	movlb	14	; () banked
  1241  000434  69FC               	setf	252,b	;volatile
  1242                           
  1243                           ; BSR set to: 14
  1244                           ;ecan.c: 96: RXM1SIDL = 0xFF;
  1245  000436  010E               	movlb	14	; () banked
  1246  000438  69FD               	setf	253,b	;volatile
  1247                           
  1248                           ;ecan.c: 102: RXF0EIDH = 0x00;
  1249  00043A  0E00               	movlw	0
  1250  00043C  010E               	movlb	14	; () banked
  1251  00043E  6FE2               	movwf	226,b	;volatile
  1252                           
  1253                           ;ecan.c: 103: RXF0EIDL = 0x00;
  1254  000440  0E00               	movlw	0
  1255  000442  010E               	movlb	14	; () banked
  1256  000444  6FE3               	movwf	227,b	;volatile
  1257                           
  1258                           ;ecan.c: 104: RXF0SIDH = 0x88;
  1259  000446  0E88               	movlw	136
  1260  000448  010E               	movlb	14	; () banked
  1261  00044A  6FE0               	movwf	224,b	;volatile
  1262                           
  1263                           ;ecan.c: 105: RXF0SIDL = 0x80;
  1264  00044C  0E80               	movlw	128
  1265  00044E  010E               	movlb	14	; () banked
  1266  000450  6FE1               	movwf	225,b	;volatile
  1267                           
  1268                           ;ecan.c: 107: RXF1EIDH = 0x00;
  1269  000452  0E00               	movlw	0
  1270  000454  010E               	movlb	14	; () banked
  1271  000456  6FE6               	movwf	230,b	;volatile
  1272                           
  1273                           ;ecan.c: 108: RXF1EIDL = 0x00;
  1274  000458  0E00               	movlw	0
  1275  00045A  010E               	movlb	14	; () banked
  1276  00045C  6FE7               	movwf	231,b	;volatile
  1277                           
  1278                           ;ecan.c: 109: RXF1SIDH = 0xCC;
  1279  00045E  0ECC               	movlw	204
  1280  000460  010E               	movlb	14	; () banked
  1281  000462  6FE4               	movwf	228,b	;volatile
  1282                           
  1283                           ;ecan.c: 110: RXF1SIDL = 0xC0;
  1284  000464  0EC0               	movlw	192
  1285  000466  010E               	movlb	14	; () banked
  1286  000468  6FE5               	movwf	229,b	;volatile
  1287                           
  1288                           ;ecan.c: 112: RXF2EIDH = 0x00;
  1289  00046A  0E00               	movlw	0
  1290  00046C  010E               	movlb	14	; () banked
  1291  00046E  6FEA               	movwf	234,b	;volatile
  1292                           
  1293                           ;ecan.c: 113: RXF2EIDL = 0x00;
  1294  000470  0E00               	movlw	0
  1295  000472  010E               	movlb	14	; () banked
  1296  000474  6FEB               	movwf	235,b	;volatile
  1297                           
  1298                           ;ecan.c: 114: RXF2SIDH = 0x00;
  1299  000476  0E00               	movlw	0
  1300  000478  010E               	movlb	14	; () banked
  1301  00047A  6FE8               	movwf	232,b	;volatile
  1302                           
  1303                           ;ecan.c: 115: RXF2SIDL = 0x00;
  1304  00047C  0E00               	movlw	0
  1305  00047E  010E               	movlb	14	; () banked
  1306  000480  6FE9               	movwf	233,b	;volatile
  1307                           
  1308                           ;ecan.c: 117: RXF3EIDH = 0x00;
  1309  000482  0E00               	movlw	0
  1310  000484  010E               	movlb	14	; () banked
  1311  000486  6FEE               	movwf	238,b	;volatile
  1312                           
  1313                           ;ecan.c: 118: RXF3EIDL = 0x00;
  1314  000488  0E00               	movlw	0
  1315  00048A  010E               	movlb	14	; () banked
  1316  00048C  6FEF               	movwf	239,b	;volatile
  1317                           
  1318                           ;ecan.c: 119: RXF3SIDH = 0x00;
  1319  00048E  0E00               	movlw	0
  1320  000490  010E               	movlb	14	; () banked
  1321  000492  6FEC               	movwf	236,b	;volatile
  1322                           
  1323                           ;ecan.c: 120: RXF3SIDL = 0x00;
  1324  000494  0E00               	movlw	0
  1325  000496  010E               	movlb	14	; () banked
  1326  000498  6FED               	movwf	237,b	;volatile
  1327                           
  1328                           ;ecan.c: 122: RXF4EIDH = 0x00;
  1329  00049A  0E00               	movlw	0
  1330  00049C  010E               	movlb	14	; () banked
  1331  00049E  6FF2               	movwf	242,b	;volatile
  1332                           
  1333                           ;ecan.c: 123: RXF4EIDL = 0x00;
  1334  0004A0  0E00               	movlw	0
  1335  0004A2  010E               	movlb	14	; () banked
  1336  0004A4  6FF3               	movwf	243,b	;volatile
  1337                           
  1338                           ;ecan.c: 124: RXF4SIDH = 0x00;
  1339  0004A6  0E00               	movlw	0
  1340  0004A8  010E               	movlb	14	; () banked
  1341  0004AA  6FF0               	movwf	240,b	;volatile
  1342                           
  1343                           ;ecan.c: 125: RXF4SIDL = 0x00;
  1344  0004AC  0E00               	movlw	0
  1345  0004AE  010E               	movlb	14	; () banked
  1346  0004B0  6FF1               	movwf	241,b	;volatile
  1347                           
  1348                           ;ecan.c: 127: RXF5EIDH = 0x00;
  1349  0004B2  0E00               	movlw	0
  1350  0004B4  010E               	movlb	14	; () banked
  1351  0004B6  6FF6               	movwf	246,b	;volatile
  1352                           
  1353                           ;ecan.c: 128: RXF5EIDL = 0x00;
  1354  0004B8  0E00               	movlw	0
  1355  0004BA  010E               	movlb	14	; () banked
  1356  0004BC  6FF7               	movwf	247,b	;volatile
  1357                           
  1358                           ;ecan.c: 129: RXF5SIDH = 0x00;
  1359  0004BE  0E00               	movlw	0
  1360  0004C0  010E               	movlb	14	; () banked
  1361  0004C2  6FF4               	movwf	244,b	;volatile
  1362                           
  1363                           ;ecan.c: 130: RXF5SIDL = 0x00;
  1364  0004C4  0E00               	movlw	0
  1365  0004C6  010E               	movlb	14	; () banked
  1366  0004C8  6FF5               	movwf	245,b	;volatile
  1367                           
  1368                           ;ecan.c: 145: BRGCON1 = 0x00;
  1369  0004CA  0E00               	movlw	0
  1370  0004CC  010E               	movlb	14	; () banked
  1371  0004CE  6F43               	movwf	67,b	;volatile
  1372                           
  1373                           ;ecan.c: 146: BRGCON2 = 0x98;
  1374  0004D0  0E98               	movlw	152
  1375  0004D2  010E               	movlb	14	; () banked
  1376  0004D4  6F44               	movwf	68,b	;volatile
  1377                           
  1378                           ;ecan.c: 147: BRGCON3 = 0x01;
  1379  0004D6  0E01               	movlw	1
  1380  0004D8  010E               	movlb	14	; () banked
  1381  0004DA  6F45               	movwf	69,b	;volatile
  1382                           
  1383                           ;ecan.c: 149: CANCON = 0x00;
  1384  0004DC  0E00               	movlw	0
  1385  0004DE  6E6F               	movwf	3951,c	;volatile
  1386  0004E0                     l1208:
  1387  0004E0  CF6E F00F          	movff	3950,??_ECAN_Initialize	;volatile
  1388  0004E4  0EE0               	movlw	224
  1389  0004E6  160F               	andwf	??_ECAN_Initialize,f,c
  1390  0004E8  B4D8               	btfsc	status,2,c
  1391  0004EA  0012               	return	
  1392  0004EC  D7F9               	goto	l1208
  1393  0004EE                     __end_of_ECAN_Initialize:
  1394                           	opt stack 0
  1395                           tblptru	equ	0xFF8
  1396                           postinc0	equ	0xFEE
  1397                           wreg	equ	0xFE8
  1398                           status	equ	0xFD8
  1399                           
  1400 ;; *************** function _EUSART1_Write *****************
  1401 ;; Defined at:
  1402 ;;		line 96 in file "mcc_generated_files/eusart1.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  txData          1    wreg     unsigned char 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  txData          1   14[COMRAM] unsigned char 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1420 ;;Total ram usage:        1 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    4
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_main
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text11
  1431  00074C                     __ptext11:
  1432                           	opt stack 0
  1433  00074C                     _EUSART1_Write:
  1434                           	opt stack 26
  1435                           
  1436                           ;incstack = 0
  1437                           ;EUSART1_Write@txData stored from wreg
  1438  00074C  6E0F               	movwf	EUSART1_Write@txData,c
  1439  00074E                     l386:
  1440  00074E  A89E               	btfss	3998,4,c	;volatile
  1441  000750  D7FE               	goto	l386
  1442                           
  1443                           ;eusart1.c: 100: }
  1444                           ;eusart1.c: 102: TXREG1 = txData;
  1445  000752  C00F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  1446  000756  0012               	return		;funcret
  1447  000758                     __end_of_EUSART1_Write:
  1448                           	opt stack 0
  1449                           tblptru	equ	0xFF8
  1450                           postinc0	equ	0xFEE
  1451                           wreg	equ	0xFE8
  1452                           status	equ	0xFD8
  1453                           
  1454 ;; *************** function _CAN_receive *****************
  1455 ;; Defined at:
  1456 ;;		line 242 in file "mcc_generated_files/ecan.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  tempCanMsg      2   33[COMRAM] PTR struct .
  1459 ;;		 -> canMessage(14), 
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;  returnValue     1   35[COMRAM] unsigned char 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      unsigned char 
  1464 ;; Registers used:
  1465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1474 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1475 ;;Total ram usage:        3 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    5
  1478 ;; This function calls:
  1479 ;;		_convertReg2ExtendedCANid
  1480 ;;		_convertReg2StandardCANid
  1481 ;; This function is called by:
  1482 ;;		_main
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text12
  1487  00008E                     __ptext12:
  1488                           	opt stack 0
  1489  00008E                     _CAN_receive:
  1490                           	opt stack 25
  1491                           
  1492                           ;ecan.c: 243: unsigned char returnValue = 0;
  1493                           
  1494                           ;incstack = 0
  1495  00008E  0E00               	movlw	0
  1496  000090  6E24               	movwf	CAN_receive@returnValue,c
  1497                           
  1498                           ;ecan.c: 247: {
  1499                           ;ecan.c: 250: if (RXB0CONbits.RXFUL != 0)
  1500  000092  AE60               	btfss	3936,7,c	;volatile
  1501  000094  D083               	goto	l320
  1502                           
  1503                           ;ecan.c: 251: {
  1504                           ;ecan.c: 252: if ((RXB0SIDL & 0x08) == 0x08)
  1505  000096  A662               	btfss	3938,3,c	;volatile
  1506  000098  D01E               	goto	l1690
  1507                           
  1508                           ;ecan.c: 253: {
  1509                           ;ecan.c: 255: tempCanMsg->frame.idType = (unsigned char) 2;
  1510  00009A  C022  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  1511  00009E  C023  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  1512  0000A2  0E02               	movlw	2
  1513  0000A4  6EDF               	movwf	indf2,c
  1514                           
  1515                           ;ecan.c: 256: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB0EIDH, RXB0EIDL, RXB0SI
      +                          DH, RXB0SIDL);
  1516  0000A6  CF64 F00F          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  1517  0000AA  CF61 F010          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  1518  0000AE  CF62 F011          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  1519  0000B2  5063               	movf	3939,w,c	;volatile
  1520  0000B4  EC5C  F001         	call	_convertReg2ExtendedCANid
  1521  0000B8  EE20 F001          	lfsr	2,1
  1522  0000BC  5022               	movf	CAN_receive@tempCanMsg,w,c
  1523  0000BE  26D9               	addwf	fsr2l,f,c
  1524  0000C0  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1525  0000C2  22DA               	addwfc	fsr2h,f,c
  1526  0000C4  C00F  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  1527  0000C8  C010  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  1528  0000CC  C011  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  1529  0000D0  C012  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  1530                           
  1531                           ;ecan.c: 257: } else {
  1532  0000D4  D019               	goto	l1694
  1533  0000D6                     l1690:
  1534                           
  1535                           ;ecan.c: 259: tempCanMsg->frame.idType = (unsigned char) 1;
  1536  0000D6  C022  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  1537  0000DA  C023  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  1538  0000DE  0E01               	movlw	1
  1539  0000E0  6EDF               	movwf	indf2,c
  1540                           
  1541                           ;ecan.c: 260: tempCanMsg->frame.id = convertReg2StandardCANid(RXB0SIDH, RXB0SIDL);
  1542  0000E2  CF62 F00F          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  1543  0000E6  5061               	movf	3937,w,c	;volatile
  1544  0000E8  ECD1  F002         	call	_convertReg2StandardCANid
  1545  0000EC  EE20 F001          	lfsr	2,1
  1546  0000F0  5022               	movf	CAN_receive@tempCanMsg,w,c
  1547  0000F2  26D9               	addwf	fsr2l,f,c
  1548  0000F4  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1549  0000F6  22DA               	addwfc	fsr2h,f,c
  1550  0000F8  C00F  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  1551  0000FC  C010  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  1552  000100  C011  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  1553  000104  C012  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  1554  000108                     l1694:
  1555                           
  1556                           ;ecan.c: 261: }
  1557                           ;ecan.c: 263: tempCanMsg->frame.dlc = RXB0DLC;
  1558  000108  EE20 F005          	lfsr	2,5
  1559  00010C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1560  00010E  26D9               	addwf	fsr2l,f,c
  1561  000110  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1562  000112  22DA               	addwfc	fsr2h,f,c
  1563  000114  CF65 FFDF          	movff	3941,indf2	;volatile
  1564                           
  1565                           ;ecan.c: 264: tempCanMsg->frame.data0 = RXB0D0;
  1566  000118  EE20 F006          	lfsr	2,6
  1567  00011C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1568  00011E  26D9               	addwf	fsr2l,f,c
  1569  000120  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1570  000122  22DA               	addwfc	fsr2h,f,c
  1571  000124  CF66 FFDF          	movff	3942,indf2	;volatile
  1572                           
  1573                           ;ecan.c: 265: tempCanMsg->frame.data1 = RXB0D1;
  1574  000128  EE20 F007          	lfsr	2,7
  1575  00012C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1576  00012E  26D9               	addwf	fsr2l,f,c
  1577  000130  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1578  000132  22DA               	addwfc	fsr2h,f,c
  1579  000134  CF67 FFDF          	movff	3943,indf2	;volatile
  1580                           
  1581                           ;ecan.c: 266: tempCanMsg->frame.data2 = RXB0D2;
  1582  000138  EE20 F008          	lfsr	2,8
  1583  00013C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1584  00013E  26D9               	addwf	fsr2l,f,c
  1585  000140  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1586  000142  22DA               	addwfc	fsr2h,f,c
  1587  000144  CF68 FFDF          	movff	3944,indf2	;volatile
  1588                           
  1589                           ;ecan.c: 267: tempCanMsg->frame.data3 = RXB0D3;
  1590  000148  EE20 F009          	lfsr	2,9
  1591  00014C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1592  00014E  26D9               	addwf	fsr2l,f,c
  1593  000150  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1594  000152  22DA               	addwfc	fsr2h,f,c
  1595  000154  CF69 FFDF          	movff	3945,indf2	;volatile
  1596                           
  1597                           ;ecan.c: 268: tempCanMsg->frame.data4 = RXB0D4;
  1598  000158  EE20 F00A          	lfsr	2,10
  1599  00015C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1600  00015E  26D9               	addwf	fsr2l,f,c
  1601  000160  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1602  000162  22DA               	addwfc	fsr2h,f,c
  1603  000164  CF6A FFDF          	movff	3946,indf2	;volatile
  1604                           
  1605                           ;ecan.c: 269: tempCanMsg->frame.data5 = RXB0D5;
  1606  000168  EE20 F00B          	lfsr	2,11
  1607  00016C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1608  00016E  26D9               	addwf	fsr2l,f,c
  1609  000170  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1610  000172  22DA               	addwfc	fsr2h,f,c
  1611  000174  CF6B FFDF          	movff	3947,indf2	;volatile
  1612                           
  1613                           ;ecan.c: 270: tempCanMsg->frame.data6 = RXB0D6;
  1614  000178  EE20 F00C          	lfsr	2,12
  1615  00017C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1616  00017E  26D9               	addwf	fsr2l,f,c
  1617  000180  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1618  000182  22DA               	addwfc	fsr2h,f,c
  1619  000184  CF6C FFDF          	movff	3948,indf2	;volatile
  1620                           
  1621                           ;ecan.c: 271: tempCanMsg->frame.data7 = RXB0D7;
  1622  000188  EE20 F00D          	lfsr	2,13
  1623  00018C  5022               	movf	CAN_receive@tempCanMsg,w,c
  1624  00018E  26D9               	addwf	fsr2l,f,c
  1625  000190  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1626  000192  22DA               	addwfc	fsr2h,f,c
  1627  000194  CF6D FFDF          	movff	3949,indf2	;volatile
  1628                           
  1629                           ;ecan.c: 272: RXB0CONbits.RXFUL = 0;
  1630  000198  9E60               	bcf	3936,7,c	;volatile
  1631  00019A  D089               	goto	l1746
  1632  00019C                     l320:
  1633  00019C  010F               	movlb	15	; () banked
  1634  00019E  AF30               	btfss	48,7,b	;volatile
  1635  0001A0  D088               	goto	l1748
  1636                           
  1637                           ; BSR set to: 15
  1638                           ;ecan.c: 275: {
  1639                           ;ecan.c: 276: if ((RXB1SIDL & 0x08) == 0x08)
  1640  0001A2  010F               	movlb	15	; () banked
  1641  0001A4  A732               	btfss	50,3,b	;volatile
  1642  0001A6  D01F               	goto	l1722
  1643                           
  1644                           ; BSR set to: 15
  1645                           ;ecan.c: 277: {
  1646                           ;ecan.c: 279: tempCanMsg->frame.idType = (unsigned char) 2;
  1647  0001A8  C022  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  1648  0001AC  C023  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  1649  0001B0  0E02               	movlw	2
  1650  0001B2  6EDF               	movwf	indf2,c
  1651                           
  1652                           ; BSR set to: 15
  1653                           ;ecan.c: 280: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB1EIDH, RXB1EIDL, RXB1SI
      +                          DH, RXB1SIDL);
  1654  0001B4  CF34 F00F          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  1655  0001B8  CF31 F010          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  1656  0001BC  CF32 F011          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  1657  0001C0  010F               	movlb	15	; () banked
  1658  0001C2  5133               	movf	51,w,b	;volatile
  1659  0001C4  EC5C  F001         	call	_convertReg2ExtendedCANid
  1660  0001C8  EE20 F001          	lfsr	2,1
  1661  0001CC  5022               	movf	CAN_receive@tempCanMsg,w,c
  1662  0001CE  26D9               	addwf	fsr2l,f,c
  1663  0001D0  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1664  0001D2  22DA               	addwfc	fsr2h,f,c
  1665  0001D4  C00F  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  1666  0001D8  C010  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  1667  0001DC  C011  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  1668  0001E0  C012  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  1669                           
  1670                           ;ecan.c: 281: }
  1671  0001E4  D01A               	goto	l1726
  1672  0001E6                     l1722:
  1673                           
  1674                           ;ecan.c: 282: else
  1675                           ;ecan.c: 283: {
  1676                           ;ecan.c: 285: tempCanMsg->frame.idType = (unsigned char) 1;
  1677  0001E6  C022  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  1678  0001EA  C023  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  1679  0001EE  0E01               	movlw	1
  1680  0001F0  6EDF               	movwf	indf2,c
  1681                           
  1682                           ;ecan.c: 286: tempCanMsg->frame.id = convertReg2StandardCANid(RXB1SIDH, RXB1SIDL);
  1683  0001F2  CF32 F00F          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  1684  0001F6  010F               	movlb	15	; () banked
  1685  0001F8  5131               	movf	49,w,b	;volatile
  1686  0001FA  ECD1  F002         	call	_convertReg2StandardCANid
  1687  0001FE  EE20 F001          	lfsr	2,1
  1688  000202  5022               	movf	CAN_receive@tempCanMsg,w,c
  1689  000204  26D9               	addwf	fsr2l,f,c
  1690  000206  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1691  000208  22DA               	addwfc	fsr2h,f,c
  1692  00020A  C00F  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  1693  00020E  C010  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  1694  000212  C011  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  1695  000216  C012  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  1696  00021A                     l1726:
  1697                           
  1698                           ;ecan.c: 287: }
  1699                           ;ecan.c: 289: tempCanMsg->frame.dlc = RXB1DLC;
  1700  00021A  EE20 F005          	lfsr	2,5
  1701  00021E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1702  000220  26D9               	addwf	fsr2l,f,c
  1703  000222  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1704  000224  22DA               	addwfc	fsr2h,f,c
  1705  000226  CF35 FFDF          	movff	3893,indf2	;volatile
  1706                           
  1707                           ;ecan.c: 290: tempCanMsg->frame.data0 = RXB1D0;
  1708  00022A  EE20 F006          	lfsr	2,6
  1709  00022E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1710  000230  26D9               	addwf	fsr2l,f,c
  1711  000232  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1712  000234  22DA               	addwfc	fsr2h,f,c
  1713  000236  CF36 FFDF          	movff	3894,indf2	;volatile
  1714                           
  1715                           ;ecan.c: 291: tempCanMsg->frame.data1 = RXB1D1;
  1716  00023A  EE20 F007          	lfsr	2,7
  1717  00023E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1718  000240  26D9               	addwf	fsr2l,f,c
  1719  000242  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1720  000244  22DA               	addwfc	fsr2h,f,c
  1721  000246  CF37 FFDF          	movff	3895,indf2	;volatile
  1722                           
  1723                           ;ecan.c: 292: tempCanMsg->frame.data2 = RXB1D2;
  1724  00024A  EE20 F008          	lfsr	2,8
  1725  00024E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1726  000250  26D9               	addwf	fsr2l,f,c
  1727  000252  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1728  000254  22DA               	addwfc	fsr2h,f,c
  1729  000256  CF38 FFDF          	movff	3896,indf2	;volatile
  1730                           
  1731                           ;ecan.c: 293: tempCanMsg->frame.data3 = RXB1D3;
  1732  00025A  EE20 F009          	lfsr	2,9
  1733  00025E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1734  000260  26D9               	addwf	fsr2l,f,c
  1735  000262  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1736  000264  22DA               	addwfc	fsr2h,f,c
  1737  000266  CF39 FFDF          	movff	3897,indf2	;volatile
  1738                           
  1739                           ;ecan.c: 294: tempCanMsg->frame.data4 = RXB1D4;
  1740  00026A  EE20 F00A          	lfsr	2,10
  1741  00026E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1742  000270  26D9               	addwf	fsr2l,f,c
  1743  000272  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1744  000274  22DA               	addwfc	fsr2h,f,c
  1745  000276  CF3A FFDF          	movff	3898,indf2	;volatile
  1746                           
  1747                           ;ecan.c: 295: tempCanMsg->frame.data5 = RXB1D5;
  1748  00027A  EE20 F00B          	lfsr	2,11
  1749  00027E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1750  000280  26D9               	addwf	fsr2l,f,c
  1751  000282  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1752  000284  22DA               	addwfc	fsr2h,f,c
  1753  000286  CF3B FFDF          	movff	3899,indf2	;volatile
  1754                           
  1755                           ;ecan.c: 296: tempCanMsg->frame.data6 = RXB1D6;
  1756  00028A  EE20 F00C          	lfsr	2,12
  1757  00028E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1758  000290  26D9               	addwf	fsr2l,f,c
  1759  000292  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1760  000294  22DA               	addwfc	fsr2h,f,c
  1761  000296  CF3C FFDF          	movff	3900,indf2	;volatile
  1762                           
  1763                           ;ecan.c: 297: tempCanMsg->frame.data7 = RXB1D7;
  1764  00029A  EE20 F00D          	lfsr	2,13
  1765  00029E  5022               	movf	CAN_receive@tempCanMsg,w,c
  1766  0002A0  26D9               	addwf	fsr2l,f,c
  1767  0002A2  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  1768  0002A4  22DA               	addwfc	fsr2h,f,c
  1769  0002A6  CF3D FFDF          	movff	3901,indf2	;volatile
  1770                           
  1771                           ;ecan.c: 298: RXB1CONbits.RXFUL = 0;
  1772  0002AA  010F               	movlb	15	; () banked
  1773  0002AC  9F30               	bcf	48,7,b	;volatile
  1774  0002AE                     l1746:
  1775                           
  1776                           ; BSR set to: 15
  1777                           ;ecan.c: 299: returnValue = 1;
  1778  0002AE  0E01               	movlw	1
  1779  0002B0  6E24               	movwf	CAN_receive@returnValue,c
  1780  0002B2                     l1748:
  1781                           
  1782                           ;ecan.c: 300: }
  1783                           ;ecan.c: 303: PIR5bits.RXB1IF = 0;
  1784  0002B2  9277               	bcf	3959,1,c	;volatile
  1785                           
  1786                           ;ecan.c: 304: }
  1787                           ;ecan.c: 307: return (returnValue);
  1788  0002B4  5024               	movf	CAN_receive@returnValue,w,c
  1789  0002B6  0012               	return	
  1790  0002B8                     __end_of_CAN_receive:
  1791                           	opt stack 0
  1792                           tblptru	equ	0xFF8
  1793                           postinc0	equ	0xFEE
  1794                           wreg	equ	0xFE8
  1795                           indf2	equ	0xFDF
  1796                           postinc2	equ	0xFDE
  1797                           fsr2h	equ	0xFDA
  1798                           fsr2l	equ	0xFD9
  1799                           status	equ	0xFD8
  1800                           
  1801 ;; *************** function _convertReg2StandardCANid *****************
  1802 ;; Defined at:
  1803 ;;		line 388 in file "mcc_generated_files/ecan.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  tempRXBn_SID    1    wreg     unsigned char 
  1806 ;;  tempRXBn_SID    1   14[COMRAM] unsigned char 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  tempRXBn_SID    1   20[COMRAM] unsigned char 
  1809 ;;  ConvertedID     4   25[COMRAM] unsigned long 
  1810 ;;  returnValue     4   21[COMRAM] unsigned long 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  4   14[COMRAM] unsigned long 
  1813 ;; Registers used:
  1814 ;;		wreg, status,2, status,0
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1821 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1822 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1823 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1824 ;;Total ram usage:       15 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    4
  1827 ;; This function calls:
  1828 ;;		Nothing
  1829 ;; This function is called by:
  1830 ;;		_CAN_receive
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text13
  1835  0005A2                     __ptext13:
  1836                           	opt stack 0
  1837  0005A2                     _convertReg2StandardCANid:
  1838                           	opt stack 25
  1839                           
  1840                           ;incstack = 0
  1841                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  1842  0005A2  6E15               	movwf	convertReg2StandardCANid@tempRXBn_SIDH,c
  1843                           
  1844                           ;ecan.c: 389: unsigned long returnValue = 0;
  1845  0005A4  0E00               	movlw	0
  1846  0005A6  6E16               	movwf	convertReg2StandardCANid@returnValue,c
  1847  0005A8  0E00               	movlw	0
  1848  0005AA  6E17               	movwf	convertReg2StandardCANid@returnValue+1,c
  1849  0005AC  0E00               	movlw	0
  1850  0005AE  6E18               	movwf	convertReg2StandardCANid@returnValue+2,c
  1851  0005B0  0E00               	movlw	0
  1852  0005B2  6E19               	movwf	convertReg2StandardCANid@returnValue+3,c
  1853                           
  1854                           ;ecan.c: 390: unsigned long ConvertedID;
  1855                           ;ecan.c: 394: ConvertedID = (tempRXBn_SIDH << 3);
  1856  0005B4  5015               	movf	convertReg2StandardCANid@tempRXBn_SIDH,w,c
  1857  0005B6  6E13               	movwf	??_convertReg2StandardCANid& (0+255),c
  1858  0005B8  6A14               	clrf	(??_convertReg2StandardCANid+1)& (0+255),c
  1859  0005BA  90D8               	bcf	status,0,c
  1860  0005BC  3613               	rlcf	??_convertReg2StandardCANid,f,c
  1861  0005BE  3614               	rlcf	??_convertReg2StandardCANid+1,f,c
  1862  0005C0  90D8               	bcf	status,0,c
  1863  0005C2  3613               	rlcf	??_convertReg2StandardCANid,f,c
  1864  0005C4  3614               	rlcf	??_convertReg2StandardCANid+1,f,c
  1865  0005C6  90D8               	bcf	status,0,c
  1866  0005C8  3613               	rlcf	??_convertReg2StandardCANid,f,c
  1867  0005CA  3614               	rlcf	??_convertReg2StandardCANid+1,f,c
  1868  0005CC  C013  F01A         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  1869  0005D0  C014  F01B         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  1870  0005D4  0E00               	movlw	0
  1871  0005D6  BE1B               	btfsc	convertReg2StandardCANid@ConvertedID+1,7,c
  1872  0005D8  0EFF               	movlw	-1
  1873  0005DA  6E1C               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  1874  0005DC  6E1D               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  1875                           
  1876                           ;ecan.c: 395: ConvertedID = ConvertedID + (tempRXBn_SIDL >> 5);
  1877  0005DE  C00F  F013         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  1878  0005E2  0E05               	movlw	5
  1879  0005E4  6E14               	movwf	(??_convertReg2StandardCANid+1)& (0+255),c
  1880  0005E6                     u355:
  1881  0005E6  90D8               	bcf	status,0,c
  1882  0005E8  3213               	rrcf	??_convertReg2StandardCANid,f,c
  1883  0005EA  2E14               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,c
  1884  0005EC  D7FC               	goto	u355
  1885  0005EE  5013               	movf	??_convertReg2StandardCANid,w,c
  1886  0005F0  241A               	addwf	convertReg2StandardCANid@ConvertedID,w,c
  1887  0005F2  6E1A               	movwf	convertReg2StandardCANid@ConvertedID,c
  1888  0005F4  0E00               	movlw	0
  1889  0005F6  201B               	addwfc	convertReg2StandardCANid@ConvertedID+1,w,c
  1890  0005F8  6E1B               	movwf	convertReg2StandardCANid@ConvertedID+1,c
  1891  0005FA  0E00               	movlw	0
  1892  0005FC  201C               	addwfc	convertReg2StandardCANid@ConvertedID+2,w,c
  1893  0005FE  6E1C               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  1894  000600  0E00               	movlw	0
  1895  000602  201D               	addwfc	convertReg2StandardCANid@ConvertedID+3,w,c
  1896  000604  6E1D               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  1897                           
  1898                           ;ecan.c: 396: returnValue = ConvertedID;
  1899  000606  C01A  F016         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  1900  00060A  C01B  F017         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  1901  00060E  C01C  F018         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  1902  000612  C01D  F019         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  1903                           
  1904                           ;ecan.c: 397: return (returnValue);
  1905  000616  C016  F00F         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  1906  00061A  C017  F010         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  1907  00061E  C018  F011         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  1908  000622  C019  F012         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  1909  000626  0012               	return	
  1910  000628                     __end_of_convertReg2StandardCANid:
  1911                           	opt stack 0
  1912                           tblptru	equ	0xFF8
  1913                           postinc0	equ	0xFEE
  1914                           wreg	equ	0xFE8
  1915                           indf2	equ	0xFDF
  1916                           postinc2	equ	0xFDE
  1917                           fsr2h	equ	0xFDA
  1918                           fsr2l	equ	0xFD9
  1919                           status	equ	0xFD8
  1920                           
  1921 ;; *************** function _convertReg2ExtendedCANid *****************
  1922 ;; Defined at:
  1923 ;;		line 368 in file "mcc_generated_files/ecan.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  tempRXBn_EID    1    wreg     unsigned char 
  1926 ;;  tempRXBn_EID    1   14[COMRAM] unsigned char 
  1927 ;;  tempRXBn_SID    1   15[COMRAM] unsigned char 
  1928 ;;  tempRXBn_SID    1   16[COMRAM] unsigned char 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  tempRXBn_EID    1   22[COMRAM] unsigned char 
  1931 ;;  ConvertedID     4   29[COMRAM] unsigned long 
  1932 ;;  returnValue     4   23[COMRAM] unsigned long 
  1933 ;;  CAN_standard    1   28[COMRAM] unsigned char 
  1934 ;;  CAN_standard    1   27[COMRAM] unsigned char 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  4   14[COMRAM] unsigned long 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1944 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1945 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1946 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1947 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1948 ;;Total ram usage:       19 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    4
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_CAN_receive
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text14
  1959  0002B8                     __ptext14:
  1960                           	opt stack 0
  1961  0002B8                     _convertReg2ExtendedCANid:
  1962                           	opt stack 25
  1963                           
  1964                           ;incstack = 0
  1965                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  1966  0002B8  6E17               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH,c
  1967                           
  1968                           ;ecan.c: 369: unsigned long returnValue = 0;
  1969  0002BA  0E00               	movlw	0
  1970  0002BC  6E18               	movwf	convertReg2ExtendedCANid@returnValue,c
  1971  0002BE  0E00               	movlw	0
  1972  0002C0  6E19               	movwf	convertReg2ExtendedCANid@returnValue+1,c
  1973  0002C2  0E00               	movlw	0
  1974  0002C4  6E1A               	movwf	convertReg2ExtendedCANid@returnValue+2,c
  1975  0002C6  0E00               	movlw	0
  1976  0002C8  6E1B               	movwf	convertReg2ExtendedCANid@returnValue+3,c
  1977                           
  1978                           ;ecan.c: 370: unsigned long ConvertedID = 0;
  1979  0002CA  0E00               	movlw	0
  1980  0002CC  6E1E               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  1981  0002CE  0E00               	movlw	0
  1982  0002D0  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  1983  0002D2  0E00               	movlw	0
  1984  0002D4  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  1985  0002D6  0E00               	movlw	0
  1986  0002D8  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  1987                           
  1988                           ;ecan.c: 371: unsigned char CAN_standardLo_ID_lo2bits;
  1989                           ;ecan.c: 372: unsigned char CAN_standardLo_ID_hi3bits;
  1990                           ;ecan.c: 374: CAN_standardLo_ID_lo2bits = (tempRXBn_SIDL & 0x03);
  1991  0002DA  5011               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  1992  0002DC  0B03               	andlw	3
  1993  0002DE  6E1C               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,c
  1994                           
  1995                           ;ecan.c: 375: CAN_standardLo_ID_hi3bits = (tempRXBn_SIDL >> 5);
  1996  0002E0  3811               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  1997  0002E2  42E8               	rrncf	wreg,f,c
  1998  0002E4  0B07               	andlw	7
  1999  0002E6  6E1D               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,c
  2000                           
  2001                           ;ecan.c: 376: ConvertedID = (tempRXBn_SIDH << 3);
  2002  0002E8  5010               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH,w,c
  2003  0002EA  6E13               	movwf	??_convertReg2ExtendedCANid& (0+255),c
  2004  0002EC  6A14               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),c
  2005  0002EE  90D8               	bcf	status,0,c
  2006  0002F0  3613               	rlcf	??_convertReg2ExtendedCANid,f,c
  2007  0002F2  3614               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2008  0002F4  90D8               	bcf	status,0,c
  2009  0002F6  3613               	rlcf	??_convertReg2ExtendedCANid,f,c
  2010  0002F8  3614               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2011  0002FA  90D8               	bcf	status,0,c
  2012  0002FC  3613               	rlcf	??_convertReg2ExtendedCANid,f,c
  2013  0002FE  3614               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2014  000300  C013  F01E         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2015  000304  C014  F01F         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2016  000308  0E00               	movlw	0
  2017  00030A  BE1F               	btfsc	convertReg2ExtendedCANid@ConvertedID+1,7,c
  2018  00030C  0EFF               	movlw	-1
  2019  00030E  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2020  000310  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2021                           
  2022                           ;ecan.c: 377: ConvertedID = ConvertedID + CAN_standardLo_ID_hi3bits;
  2023  000312  501D               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,w,c
  2024  000314  241E               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2025  000316  6E1E               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2026  000318  0E00               	movlw	0
  2027  00031A  201F               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2028  00031C  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2029  00031E  0E00               	movlw	0
  2030  000320  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2031  000322  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2032  000324  0E00               	movlw	0
  2033  000326  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2034  000328  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2035                           
  2036                           ;ecan.c: 378: ConvertedID = (ConvertedID << 2);
  2037  00032A  C01E  F013         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  2038  00032E  C01F  F014         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  2039  000332  C020  F015         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  2040  000336  C021  F016         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  2041  00033A  0E02               	movlw	2
  2042  00033C                     u345:
  2043  00033C  90D8               	bcf	status,0,c
  2044  00033E  3613               	rlcf	??_convertReg2ExtendedCANid,f,c
  2045  000340  3614               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2046  000342  3615               	rlcf	??_convertReg2ExtendedCANid+2,f,c
  2047  000344  3616               	rlcf	??_convertReg2ExtendedCANid+3,f,c
  2048  000346  2EE8               	decfsz	wreg,f,c
  2049  000348  D7F9               	goto	u345
  2050  00034A  C013  F01E         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2051  00034E  C014  F01F         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2052  000352  C015  F020         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2053  000356  C016  F021         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2054                           
  2055                           ;ecan.c: 379: ConvertedID = ConvertedID + CAN_standardLo_ID_lo2bits;
  2056  00035A  501C               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,w,c
  2057  00035C  241E               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2058  00035E  6E1E               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2059  000360  0E00               	movlw	0
  2060  000362  201F               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2061  000364  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2062  000366  0E00               	movlw	0
  2063  000368  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2064  00036A  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2065  00036C  0E00               	movlw	0
  2066  00036E  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2067  000370  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2068                           
  2069                           ;ecan.c: 380: ConvertedID = (ConvertedID << 8);
  2070  000372  C01E  F014         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  2071  000376  C01F  F015         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  2072  00037A  C020  F016         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  2073  00037E  6A13               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  2074  000380  C013  F01E         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2075  000384  C014  F01F         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2076  000388  C015  F020         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2077  00038C  C016  F021         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2078                           
  2079                           ;ecan.c: 381: ConvertedID = ConvertedID + tempRXBn_EIDH;
  2080  000390  5017               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH,w,c
  2081  000392  241E               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2082  000394  6E1E               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2083  000396  0E00               	movlw	0
  2084  000398  201F               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2085  00039A  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2086  00039C  0E00               	movlw	0
  2087  00039E  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2088  0003A0  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2089  0003A2  0E00               	movlw	0
  2090  0003A4  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2091  0003A6  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2092                           
  2093                           ;ecan.c: 382: ConvertedID = (ConvertedID << 8);
  2094  0003A8  C01E  F014         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  2095  0003AC  C01F  F015         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  2096  0003B0  C020  F016         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  2097  0003B4  6A13               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  2098  0003B6  C013  F01E         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2099  0003BA  C014  F01F         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2100  0003BE  C015  F020         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2101  0003C2  C016  F021         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2102                           
  2103                           ;ecan.c: 383: ConvertedID = ConvertedID + tempRXBn_EIDL;
  2104  0003C6  500F               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL,w,c
  2105  0003C8  241E               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2106  0003CA  6E1E               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2107  0003CC  0E00               	movlw	0
  2108  0003CE  201F               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2109  0003D0  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2110  0003D2  0E00               	movlw	0
  2111  0003D4  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2112  0003D6  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2113  0003D8  0E00               	movlw	0
  2114  0003DA  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2115  0003DC  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2116                           
  2117                           ;ecan.c: 384: returnValue = ConvertedID;
  2118  0003DE  C01E  F018         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  2119  0003E2  C01F  F019         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  2120  0003E6  C020  F01A         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  2121  0003EA  C021  F01B         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  2122                           
  2123                           ;ecan.c: 385: return (returnValue);
  2124  0003EE  C018  F00F         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  2125  0003F2  C019  F010         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  2126  0003F6  C01A  F011         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  2127  0003FA  C01B  F012         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  2128  0003FE  0012               	return	
  2129  000400                     __end_of_convertReg2ExtendedCANid:
  2130                           	opt stack 0
  2131                           tblptru	equ	0xFF8
  2132                           postinc0	equ	0xFEE
  2133                           wreg	equ	0xFE8
  2134                           indf2	equ	0xFDF
  2135                           postinc2	equ	0xFDE
  2136                           fsr2h	equ	0xFDA
  2137                           fsr2l	equ	0xFD9
  2138                           status	equ	0xFD8
  2139                           
  2140 ;; *************** function _INTERRUPT_InterruptManager *****************
  2141 ;; Defined at:
  2142 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2158 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2159 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2160 ;;Total ram usage:       14 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    3
  2163 ;; This function calls:
  2164 ;;		_TMR1_ISR
  2165 ;; This function is called by:
  2166 ;;		Interrupt level 2
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	intcode
  2171  000008                     __pintcode:
  2172                           	opt stack 0
  2173  000008                     _INTERRUPT_InterruptManager:
  2174                           	opt stack 24
  2175                           
  2176                           ;incstack = 0
  2177  000008  823B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2178  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  2179  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2180  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2181  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2182  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2183  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2184  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2185  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2186  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2187  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2188  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2189  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2190  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2191  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2192                           
  2193                           ;interrupt_manager.c: 60: if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bits.TM
      +                          R1IF == 1)
  2194  000042  BCF2               	btfsc	intcon,6,c	;volatile
  2195  000044  A09D               	btfss	3997,0,c	;volatile
  2196  000046  D003               	goto	i2l479
  2197  000048  B09E               	btfsc	3998,0,c	;volatile
  2198                           
  2199                           ;interrupt_manager.c: 61: {
  2200                           ;interrupt_manager.c: 62: TMR1_ISR();
  2201  00004A  EC54  F003         	call	_TMR1_ISR	;wreg free
  2202  00004E                     i2l479:
  2203  00004E  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2204  000052  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2205  000056  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2206  00005A  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2207  00005E  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2208  000062  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2209  000066  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2210  00006A  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2211  00006E  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2212  000072  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2213  000076  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2214  00007A  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2215  00007E  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2216  000082  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2217  000086  923B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2218  000088  0011               	retfie		f
  2219  00008A                     __end_of_INTERRUPT_InterruptManager:
  2220                           	opt stack 0
  2221                           pclatu	equ	0xFFB
  2222                           pclath	equ	0xFFA
  2223                           tblptru	equ	0xFF8
  2224                           tblptrh	equ	0xFF7
  2225                           tblptrl	equ	0xFF6
  2226                           tablat	equ	0xFF5
  2227                           prodh	equ	0xFF4
  2228                           prodl	equ	0xFF3
  2229                           intcon	equ	0xFF2
  2230                           postinc0	equ	0xFEE
  2231                           fsr0h	equ	0xFEA
  2232                           fsr0l	equ	0xFE9
  2233                           wreg	equ	0xFE8
  2234                           fsr1h	equ	0xFE2
  2235                           fsr1l	equ	0xFE1
  2236                           indf2	equ	0xFDF
  2237                           postinc2	equ	0xFDE
  2238                           fsr2h	equ	0xFDA
  2239                           fsr2l	equ	0xFD9
  2240                           status	equ	0xFD8
  2241                           
  2242 ;; *************** function _TMR1_ISR *****************
  2243 ;; Defined at:
  2244 ;;		line 160 in file "mcc_generated_files/tmr1.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;		None
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2262 ;;Total ram usage:        0 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; Hardware stack levels required when called:    2
  2265 ;; This function calls:
  2266 ;;		_TMR1_CallBack
  2267 ;; This function is called by:
  2268 ;;		_INTERRUPT_InterruptManager
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text16
  2273  0006A8                     __ptext16:
  2274                           	opt stack 0
  2275  0006A8                     _TMR1_ISR:
  2276                           	opt stack 24
  2277                           
  2278                           ;tmr1.c: 162: static volatile unsigned int CountCallBack = 0;
  2279                           ;tmr1.c: 165: PIR1bits.TMR1IF = 0;
  2280                           
  2281                           ;incstack = 0
  2282  0006A8  909E               	bcf	3998,0,c	;volatile
  2283                           
  2284                           ;tmr1.c: 167: TMR1H = (timer1ReloadVal >> 8);
  2285  0006AA  503A               	movf	_timer1ReloadVal+1,w,c	;volatile
  2286  0006AC  6ECF               	movwf	4047,c	;volatile
  2287                           
  2288                           ;tmr1.c: 168: TMR1L = timer1ReloadVal;
  2289  0006AE  C039  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  2290                           
  2291                           ;tmr1.c: 171: if (++CountCallBack >= 100)
  2292  0006B2  4A27               	infsnz	TMR1_ISR@CountCallBack,f,c	;volatile
  2293  0006B4  2A28               	incf	TMR1_ISR@CountCallBack+1,f,c	;volatile
  2294  0006B6  5028               	movf	TMR1_ISR@CountCallBack+1,w,c	;volatile
  2295  0006B8  E104               	bnz	i2u12_40
  2296  0006BA  0E64               	movlw	100
  2297  0006BC  5C27               	subwf	TMR1_ISR@CountCallBack,w,c	;volatile
  2298  0006BE  A0D8               	btfss	status,0,c
  2299  0006C0  0012               	return	
  2300  0006C2                     i2u12_40:
  2301                           
  2302                           ;tmr1.c: 172: {
  2303                           ;tmr1.c: 174: TMR1_CallBack();
  2304  0006C2  EC68  F003         	call	_TMR1_CallBack	;wreg free
  2305                           
  2306                           ;tmr1.c: 177: CountCallBack = 0;
  2307  0006C6  0E00               	movlw	0
  2308  0006C8  6E28               	movwf	TMR1_ISR@CountCallBack+1,c	;volatile
  2309  0006CA  0E00               	movlw	0
  2310  0006CC  6E27               	movwf	TMR1_ISR@CountCallBack,c	;volatile
  2311  0006CE  0012               	return	
  2312  0006D0                     __end_of_TMR1_ISR:
  2313                           	opt stack 0
  2314                           pclatu	equ	0xFFB
  2315                           pclath	equ	0xFFA
  2316                           tblptru	equ	0xFF8
  2317                           tblptrh	equ	0xFF7
  2318                           tblptrl	equ	0xFF6
  2319                           tablat	equ	0xFF5
  2320                           prodh	equ	0xFF4
  2321                           prodl	equ	0xFF3
  2322                           intcon	equ	0xFF2
  2323                           postinc0	equ	0xFEE
  2324                           fsr0h	equ	0xFEA
  2325                           fsr0l	equ	0xFE9
  2326                           wreg	equ	0xFE8
  2327                           fsr1h	equ	0xFE2
  2328                           fsr1l	equ	0xFE1
  2329                           indf2	equ	0xFDF
  2330                           postinc2	equ	0xFDE
  2331                           fsr2h	equ	0xFDA
  2332                           fsr2l	equ	0xFD9
  2333                           status	equ	0xFD8
  2334                           
  2335 ;; *************** function _TMR1_CallBack *****************
  2336 ;; Defined at:
  2337 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;		None
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;		None
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      void 
  2344 ;; Registers used:
  2345 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2355 ;;Total ram usage:        0 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    1
  2358 ;; This function calls:
  2359 ;;		Absolute function
  2360 ;;		_TMR1_DefaultInterruptHandler
  2361 ;;		_radio_timeout
  2362 ;; This function is called by:
  2363 ;;		_TMR1_ISR
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text17
  2368  0006D0                     __ptext17:
  2369                           	opt stack 0
  2370  0006D0                     _TMR1_CallBack:
  2371                           	opt stack 24
  2372                           
  2373                           ;tmr1.c: 184: if(TMR1_InterruptHandler)
  2374                           
  2375                           ;incstack = 0
  2376  0006D0  5037               	movf	_TMR1_InterruptHandler,w,c
  2377  0006D2  1038               	iorwf	_TMR1_InterruptHandler+1,w,c
  2378  0006D4  B4D8               	btfsc	status,2,c
  2379  0006D6  0012               	return	
  2380                           
  2381                           ;tmr1.c: 185: {
  2382                           ;tmr1.c: 186: TMR1_InterruptHandler();
  2383  0006D8  D801               	call	i2u6_48
  2384  0006DA  0012               	return	
  2385  0006DC                     i2u6_48:
  2386  0006DC  0005               	push	
  2387  0006DE  6EFA               	movwf	pclath,c
  2388  0006E0  5037               	movf	_TMR1_InterruptHandler,w,c
  2389  0006E2  6EFD               	movwf	tosl,c
  2390  0006E4  5038               	movf	_TMR1_InterruptHandler+1,w,c
  2391  0006E6  6EFE               	movwf	tosh,c
  2392  0006E8  50F8               	movf	tblptru,w,c
  2393  0006EA  6EFF               	movwf	tosu,c
  2394  0006EC  50FA               	movf	pclath,w,c
  2395  0006EE  0012               	return		;indir
  2396  0006F0                     __end_of_TMR1_CallBack:
  2397                           	opt stack 0
  2398                           tosu	equ	0xFFF
  2399                           tosh	equ	0xFFE
  2400                           tosl	equ	0xFFD
  2401                           pclatu	equ	0xFFB
  2402                           pclath	equ	0xFFA
  2403                           tblptru	equ	0xFF8
  2404                           tblptrh	equ	0xFF7
  2405                           tblptrl	equ	0xFF6
  2406                           tablat	equ	0xFF5
  2407                           prodh	equ	0xFF4
  2408                           prodl	equ	0xFF3
  2409                           intcon	equ	0xFF2
  2410                           postinc0	equ	0xFEE
  2411                           fsr0h	equ	0xFEA
  2412                           fsr0l	equ	0xFE9
  2413                           wreg	equ	0xFE8
  2414                           fsr1h	equ	0xFE2
  2415                           fsr1l	equ	0xFE1
  2416                           indf2	equ	0xFDF
  2417                           postinc2	equ	0xFDE
  2418                           fsr2h	equ	0xFDA
  2419                           fsr2l	equ	0xFD9
  2420                           status	equ	0xFD8
  2421                           
  2422 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2423 ;; Defined at:
  2424 ;;		line 194 in file "mcc_generated_files/tmr1.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;		None
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;		None
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		None
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2442 ;;Total ram usage:        0 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_TMR1_Initialize
  2448 ;;		_TMR1_CallBack
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text18
  2453  000778                     __ptext18:
  2454                           	opt stack 0
  2455  000778                     _TMR1_DefaultInterruptHandler:
  2456                           	opt stack 24
  2457                           
  2458                           ;incstack = 0
  2459  000778  0012               	return		;funcret
  2460  00077A                     __end_of_TMR1_DefaultInterruptHandler:
  2461                           	opt stack 0
  2462                           tosu	equ	0xFFF
  2463                           tosh	equ	0xFFE
  2464                           tosl	equ	0xFFD
  2465                           pclatu	equ	0xFFB
  2466                           pclath	equ	0xFFA
  2467                           tblptru	equ	0xFF8
  2468                           tblptrh	equ	0xFF7
  2469                           tblptrl	equ	0xFF6
  2470                           tablat	equ	0xFF5
  2471                           prodh	equ	0xFF4
  2472                           prodl	equ	0xFF3
  2473                           intcon	equ	0xFF2
  2474                           postinc0	equ	0xFEE
  2475                           fsr0h	equ	0xFEA
  2476                           fsr0l	equ	0xFE9
  2477                           wreg	equ	0xFE8
  2478                           fsr1h	equ	0xFE2
  2479                           fsr1l	equ	0xFE1
  2480                           indf2	equ	0xFDF
  2481                           postinc2	equ	0xFDE
  2482                           fsr2h	equ	0xFDA
  2483                           fsr2l	equ	0xFD9
  2484                           status	equ	0xFD8
  2485                           
  2486 ;; *************** function _radio_timeout *****************
  2487 ;; Defined at:
  2488 ;;		line 14 in file "main.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;		None
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		None
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2506 ;;Total ram usage:        0 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; This function calls:
  2509 ;;		Nothing
  2510 ;; This function is called by:
  2511 ;;		_main
  2512 ;;		_TMR1_CallBack
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text19
  2517  000762                     __ptext19:
  2518                           	opt stack 0
  2519  000762                     _radio_timeout:
  2520                           	opt stack 24
  2521                           
  2522                           ;incstack = 0
  2523                           ;main.c: 15: do { LATAbits.LATA5 = 1; } while(0);
  2524  000762  8A89               	bsf	3977,5,c	;volatile
  2525                           
  2526                           ;main.c: 16: do { LATDbits.LATD6 = 0; } while(0);
  2527  000764  9C8C               	bcf	3980,6,c	;volatile
  2528                           
  2529                           ;main.c: 17: do { LATDbits.LATD4 = 1; } while(0);
  2530  000766  888C               	bsf	3980,4,c	;volatile
  2531                           
  2532                           ;main.c: 18: do { LATDbits.LATD5 = 1; } while(0);
  2533  000768  8A8C               	bsf	3980,5,c	;volatile
  2534  00076A  0012               	return	
  2535  00076C                     __end_of_radio_timeout:
  2536                           	opt stack 0
  2537  0000                     tosu	equ	0xFFF
  2538                           tosh	equ	0xFFE
  2539                           tosl	equ	0xFFD
  2540                           pclatu	equ	0xFFB
  2541                           pclath	equ	0xFFA
  2542                           tblptru	equ	0xFF8
  2543                           tblptrh	equ	0xFF7
  2544                           tblptrl	equ	0xFF6
  2545                           tablat	equ	0xFF5
  2546                           prodh	equ	0xFF4
  2547                           prodl	equ	0xFF3
  2548                           intcon	equ	0xFF2
  2549                           postinc0	equ	0xFEE
  2550                           fsr0h	equ	0xFEA
  2551                           fsr0l	equ	0xFE9
  2552                           wreg	equ	0xFE8
  2553                           fsr1h	equ	0xFE2
  2554                           fsr1l	equ	0xFE1
  2555                           indf2	equ	0xFDF
  2556                           postinc2	equ	0xFDE
  2557                           fsr2h	equ	0xFDA
  2558                           fsr2l	equ	0xFD9
  2559                           status	equ	0xFD8
  2560                           tosu	equ	0xFFF
  2561                           tosh	equ	0xFFE
  2562                           tosl	equ	0xFFD
  2563                           pclatu	equ	0xFFB
  2564                           pclath	equ	0xFFA
  2565                           tblptru	equ	0xFF8
  2566                           tblptrh	equ	0xFF7
  2567                           tblptrl	equ	0xFF6
  2568                           tablat	equ	0xFF5
  2569                           prodh	equ	0xFF4
  2570                           prodl	equ	0xFF3
  2571                           intcon	equ	0xFF2
  2572                           postinc0	equ	0xFEE
  2573                           fsr0h	equ	0xFEA
  2574                           fsr0l	equ	0xFE9
  2575                           wreg	equ	0xFE8
  2576                           fsr1h	equ	0xFE2
  2577                           fsr1l	equ	0xFE1
  2578                           indf2	equ	0xFDF
  2579                           postinc2	equ	0xFDE
  2580                           fsr2h	equ	0xFDA
  2581                           fsr2l	equ	0xFD9
  2582                           status	equ	0xFD8
  2583                           
  2584                           	psect	text20
  2585  000000                     __ptext20:
  2586                           	opt stack 0
  2587                           tosu	equ	0xFFF
  2588                           tosh	equ	0xFFE
  2589                           tosl	equ	0xFFD
  2590                           pclatu	equ	0xFFB
  2591                           pclath	equ	0xFFA
  2592                           tblptru	equ	0xFF8
  2593                           tblptrh	equ	0xFF7
  2594                           tblptrl	equ	0xFF6
  2595                           tablat	equ	0xFF5
  2596                           prodh	equ	0xFF4
  2597                           prodl	equ	0xFF3
  2598                           intcon	equ	0xFF2
  2599                           postinc0	equ	0xFEE
  2600                           fsr0h	equ	0xFEA
  2601                           fsr0l	equ	0xFE9
  2602                           wreg	equ	0xFE8
  2603                           fsr1h	equ	0xFE2
  2604                           fsr1l	equ	0xFE1
  2605                           indf2	equ	0xFDF
  2606                           postinc2	equ	0xFDE
  2607                           fsr2h	equ	0xFDA
  2608                           fsr2l	equ	0xFD9
  2609                           status	equ	0xFD8
  2610                           
  2611                           	psect	rparam
  2612  0000                     tosu	equ	0xFFF
  2613                           tosh	equ	0xFFE
  2614                           tosl	equ	0xFFD
  2615                           pclatu	equ	0xFFB
  2616                           pclath	equ	0xFFA
  2617                           tblptru	equ	0xFF8
  2618                           tblptrh	equ	0xFF7
  2619                           tblptrl	equ	0xFF6
  2620                           tablat	equ	0xFF5
  2621                           prodh	equ	0xFF4
  2622                           prodl	equ	0xFF3
  2623                           intcon	equ	0xFF2
  2624                           postinc0	equ	0xFEE
  2625                           fsr0h	equ	0xFEA
  2626                           fsr0l	equ	0xFE9
  2627                           wreg	equ	0xFE8
  2628                           fsr1h	equ	0xFE2
  2629                           fsr1l	equ	0xFE1
  2630                           indf2	equ	0xFDF
  2631                           postinc2	equ	0xFDE
  2632                           fsr2h	equ	0xFDA
  2633                           fsr2l	equ	0xFD9
  2634                           status	equ	0xFD8
  2635                           
  2636                           	psect	temp
  2637  00003B                     btemp:
  2638                           	opt stack 0
  2639  00003B                     	ds	1
  2640  0000                     int$flags	set	btemp
  2641                           tosu	equ	0xFFF
  2642                           tosh	equ	0xFFE
  2643                           tosl	equ	0xFFD
  2644                           pclatu	equ	0xFFB
  2645                           pclath	equ	0xFFA
  2646                           tblptru	equ	0xFF8
  2647                           tblptrh	equ	0xFF7
  2648                           tblptrl	equ	0xFF6
  2649                           tablat	equ	0xFF5
  2650                           prodh	equ	0xFF4
  2651                           prodl	equ	0xFF3
  2652                           intcon	equ	0xFF2
  2653                           postinc0	equ	0xFEE
  2654                           fsr0h	equ	0xFEA
  2655                           fsr0l	equ	0xFE9
  2656                           wreg	equ	0xFE8
  2657                           fsr1h	equ	0xFE2
  2658                           fsr1l	equ	0xFE1
  2659                           indf2	equ	0xFDF
  2660                           postinc2	equ	0xFDE
  2661                           fsr2h	equ	0xFDA
  2662                           fsr2l	equ	0xFD9
  2663                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      58
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> radio_timeout(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> radio_timeout(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> canMessage(COMRAM[14]), 


Critical Paths under _main in COMRAM

    _main->_CAN_receive
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2123
                                             36 COMRAM     2     2      0
                        _CAN_receive
                      _EUSART1_Write
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (1) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                    _ECAN_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     174
                                             16 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    1760
                                             33 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     266
                                             14 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4     821
                                             14 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                      _radio_timeout *
 ---------------------------------------------------------------------------------
 (7) _radio_timeout                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _EUSART1_Write
   _SYSTEM_Initialize
     _ECAN_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _TMR1_StopTimer

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _radio_timeout *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     26      3A       1       61.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3A       6        0.0%
DATA                 0      0      3A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Jan 12 12:03:51 2018

                         __size_of_ECAN_Initialize 00EE                                        __CFG_BORV$3 000000  
                                     __CFG_CP0$OFF 000000                                       __CFG_CP1$OFF 000000  
                                     __CFG_CP2$OFF 000000                                       __CFG_CP3$OFF 000000  
                                              l320 019C                                                l532 0596  
                                              l386 074E                                       __CFG_CPB$OFF 000000  
                                              u345 033C                                       __CFG_CPD$OFF 000000  
                                              u355 05E6                                                u437 0510  
                                              u447 054E                                    _timer1ReloadVal 0039  
                                              tosl 000FFD                                                wreg 000FE8  
                       ??_convertReg2StandardCANid 0013                                               l1208 04E0  
                                             l1196 0404                                               l1722 01E6  
                                             l1726 021A                                               l1746 02AE  
                                             l1690 00D6                                               l1748 02B2  
                                             l1694 0108                                               l1784 055E  
                                             _LATA 000F89                                               _LATB 000F8A  
                                             _LATC 000F8B                                               _LATD 000F8C  
                                             _LATE 000F8D                                               _LATF 000F8E  
                                             _LATG 000F8F                                               _WPUB 000F5B  
                                    _EUSART1_Write 074C                                               _main 04EE  
                                             fsr0h 000FEA                                               fsr1h 000FE2  
                                             fsr2h 000FDA                                               fsr0l 000FE9  
                                             indf2 000FDF                                               fsr1l 000FE1  
                                             fsr2l 000FD9                                               btemp 003B  
                                             prodh 000FF4                                               prodl 000FF3  
                                             start 008A                                      __CFG_IESO$OFF 000000  
                                    __CFG_FOSC$HS2 000000                         ??_TMR1_SetInterruptHandler 0011  
                                    __CFG_MCLRE$ON 000000                                       ___param_bank 000000  
                   __size_of_OSCILLATOR_Initialize 0012                      __end_of_OSCILLATOR_Initialize 074C  
                                            ?_main 0001                                    _TMR1_StartTimer 0770  
                                            _T1CON 000FCD                                              i2l479 004E  
                                            _TMR1H 000FCF                                              _TMR1L 000FCE  
                                            _TRISA 000F92                                              _TRISB 000F93  
                                            _TRISC 000F94                                              _TRISD 000F95  
                                            _TRISE 000F96                                              _TRISF 000F97  
                                            _TRISG 000F98                                      __CFG_WRT0$OFF 000000  
                                    __CFG_WRT1$OFF 000000                                      __CFG_WRT2$OFF 000000  
                                    __CFG_WRT3$OFF 000000                                     __CFG_EBTR0$OFF 000000  
                                   __CFG_FCMEN$OFF 000000                                     __CFG_EBTR1$OFF 000000  
                            CAN_receive@tempCanMsg 0022                                     __CFG_EBTR2$OFF 000000  
                                   __CFG_EBTR3$OFF 000000                                   __end_of_TMR1_ISR 06D0  
                                    __CFG_WRTB$OFF 000000                                      __CFG_WRTC$OFF 000000  
                                    __CFG_WRTD$OFF 000000                                     __CFG_EBTRB$OFF 000000  
                                   ?_EUSART1_Write 0001                            __end_of_TMR1_Initialize 06A8  
                                            pclath 000FFA                                              tablat 000FF5  
              convertReg2ExtendedCANid@ConvertedID 001E                                              status 000FD8  
                                  __initialization 06F0                               __size_of_CAN_receive 022A  
                       __end_of_EUSART1_Initialize 073A                                       __end_of_main 05A2  
                      ?_INTERRUPT_InterruptManager 0001                                             ??_main 0025  
                                    __activetblptr 000002                                     __CFG_RETEN$OFF 000000  
                                ??_ECAN_Initialize 000F                                             _CANCON 000F6F  
                                           _ANCON0 000F5D                                             _ANCON1 000F5C  
                                           _T1GCON 000FAA                                    __CFG_BBSIZ$BB2K 000000  
                                   __CFG_WDTEN$OFF 000000                                             _RCREG1 000FAE  
                                           _RCSTA1 000FAB                                             _OSCCON 000FD3  
                                           _RXB0D0 000F66                                             _RXB0D1 000F67  
                                           _RXB0D2 000F68                                             _RXB0D3 000F69  
                                           _RXB0D4 000F6A                                             _RXB1D0 000F36  
                                           _RXB0D5 000F6B                                             _RXB1D1 000F37  
                                           _RXB0D6 000F6C                                             _RXB1D2 000F38  
                                           _RXB0D7 000F6D                                             _RXB1D3 000F39  
                                           _RXB1D4 000F3A                                             _RXB1D5 000F3B  
                                           _RXB1D6 000F3C                                             _RXB1D7 000F3D  
                                           _SPBRG1 000FAF                                             _TXB0D0 000F26  
                                           _TXB0D1 000F27                                             _TXB0D2 000F28  
                                           _TXB0D3 000F29                                             _TXB0D4 000F2A  
                                           _TXB1D0 000F16                                             _TXB0D5 000F2B  
                                           _TXB1D1 000F17                                             _TXB0D6 000F2C  
                                           _TXB1D2 000F18                                             _TXB0D7 000F2D  
                                           _TXB1D3 000F19                                             _TXB1D4 000F1A  
                                           _TXB2D0 000F06                                             _TXB1D5 000F1B  
                                           _TXB2D1 000F07                                             _TXB1D6 000F1C  
                                           _TXB2D2 000F08                                             _TXB1D7 000F1D  
                                           _TXB2D3 000F09                                             _TXB2D4 000F0A  
                                           _TXB2D5 000F0B                                             _TXB2D6 000F0C  
                                           _TXB2D7 000F0D                                             i2u6_48 06DC  
                                           _TXREG1 000FAD                                             _TXSTA1 000FAC  
                                   __CFG_XINST$OFF 000000               __end_of_TMR1_DefaultInterruptHandler 077A  
            __size_of_TMR1_DefaultInterruptHandler 0002                       _TMR1_DefaultInterruptHandler 0778  
                          __end_of_TMR1_StartTimer 0774                                     __CFG_STVREN$ON 000000  
                                           clear_0 06F6                   __end_of_convertReg2StandardCANid 0628  
                                           tblptrh 000FF7                                             tblptrl 000FF6  
                                           tblptru 000FF8                                    ??_EUSART1_Write 000F  
         TMR1_SetInterruptHandler@InterruptHandler 000F                      __size_of_INTERRUPT_Initialize 0004  
                            __end_of_TMR1_CallBack 06F0                                   ?_TMR1_Initialize 0001  
                                _SYSTEM_Initialize 070A                                         __accesstop 0060  
                          __end_of__initialization 06FC                                 ?_SYSTEM_Initialize 0001  
                           __size_of_radio_timeout 000A                           _convertReg2ExtendedCANid 02B8  
                           CAN_receive@returnValue 0024                                      ___rparam_used 000001  
                                   __pcstackCOMRAM 0001                                ??_SYSTEM_Initialize 0013  
                                        ?_TMR1_ISR 0001                      ?_TMR1_DefaultInterruptHandler 0001  
                                       _canMessage 0029              convertReg2StandardCANid@tempRXBn_SIDH 0015  
            convertReg2StandardCANid@tempRXBn_SIDL 000F                          __end_of_SYSTEM_Initialize 0724  
                                  __CFG_PLLCFG$OFF 000000                                         __pnvCOMRAM 0037  
                                 ?_TMR1_StartTimer 0001                                         ??_TMR1_ISR 0001  
                                          _ECANCON 000F72                                            _CANSTAT 000F6E  
                                          _BRGCON1 000E43                                            _BRGCON2 000E44  
                                          _BRGCON3 000E45                            __size_of_TMR1_StopTimer 0004  
                                    _radio_timeout 0762                                   __CFG_CANMX$PORTB 000000  
                                          _REFOCON 000F9A                                            _OSCCON2 000FD2  
                                          i2u12_40 06C2                                            _RXB0DLC 000F65  
                                          _RXB1DLC 000F35                                            _OSCTUNE 000F9B  
                                          _SPBRGH1 000F7D                                            _TXB0DLC 000F25  
                                          _TXB1DLC 000F15                                            _TXB2DLC 000F05  
                                  __CFG_PWRTEN$OFF 000000                                            __Hparam 0000  
                                          __Lparam 0000                  __size_of_convertReg2StandardCANid 0086  
                        ?_convertReg2StandardCANid 000F                                    _ECAN_Initialize 0400  
                                          __pcinit 06F0                                            __ramtop 0F00  
                                   ?_radio_timeout 0001                                            __ptext0 04EE  
                                          __ptext1 076C                                            __ptext2 070A  
                                          __ptext3 066C                                            __ptext4 0770  
                                          __ptext5 0758                                            __ptext6 0628  
                                          __ptext7 073A                                            __ptext8 0774  
                                          __ptext9 0724                     ??_TMR1_DefaultInterruptHandler 0001  
                                        _T1CONbits 000FCD                              _OSCILLATOR_Initialize 073A  
                __size_of_TMR1_SetInterruptHandler 000A                                 _EUSART1_Initialize 0724  
                         ??_PIN_MANAGER_Initialize 000F                          ?_TMR1_SetInterruptHandler 000F  
                                __CFG_MSSPMSK$MSK7 000000                         __size_of_SYSTEM_Initialize 001A  
                             end_of_initialization 06FC                                ?_EUSART1_Initialize 0001  
                                    __Lmediumconst 0000                                      ??_CAN_receive 0024  
                                          postinc0 000FEE                                            postinc2 000FDE  
                             ??_EUSART1_Initialize 000F                         ??_convertReg2ExtendedCANid 0013  
                              EUSART1_Write@txData 000F                            __end_of_ECAN_Initialize 04EE  
                     __end_of_INTERRUPT_Initialize 0778                                __end_of_CAN_receive 02B8  
                                  ??_radio_timeout 0001                                  __size_of_TMR1_ISR 0028  
                                   _TMR1_StopTimer 076C                             ?_OSCILLATOR_Initialize 0001  
                              start_initialization 06F0                    __size_of_PIN_MANAGER_Initialize 0044  
                            __end_of_EUSART1_Write 0758                convertReg2StandardCANid@returnValue 0016  
                         __size_of_TMR1_Initialize 003C                             __end_of_TMR1_StopTimer 0770  
                           __size_of_TMR1_CallBack 0020                              TMR1_ISR@CountCallBack 0027  
                                      __pbssCOMRAM 0027                                        _CAN_receive 008E  
                                 ?_ECAN_Initialize 0001                             _PIN_MANAGER_Initialize 0628  
                                        __pintcode 0008                   __end_of_TMR1_SetInterruptHandler 0762  
                                  ?_TMR1_StopTimer 0001                       ??_INTERRUPT_InterruptManager 0001  
                                         _BAUDCON1 000FA7                           __size_of_TMR1_StartTimer 0004  
                                      _COMSTATbits 000F71                   __end_of_convertReg2ExtendedCANid 0400  
                             _INTERRUPT_Initialize 0774                                      _TMR1_CallBack 06D0  
                                         _LATAbits 000F89                                           _LATDbits 000F8C  
                                         _PIE1bits 000F9D                                           _PIE5bits 000F76  
              __size_of_INTERRUPT_InterruptManager 0082                                           _PIR1bits 000F9E  
                                         _PIR5bits 000F77                                           _RXB0EIDH 000F63  
                                         _RXB0EIDL 000F64                                           _RXB1EIDH 000F33  
                                         _RXB1EIDL 000F34                                           _RCONbits 000FD0  
                                         _RXB0SIDH 000F61                                           _RXB0SIDL 000F62  
                                         _RXB1SIDH 000F31                                           _RXF0EIDH 000EE2  
                                         _RXB1SIDL 000F32                                           _RXF0EIDL 000EE3  
                                         _RXF1EIDH 000EE6                                           _RXF1EIDL 000EE7  
                                         _RXF2EIDH 000EEA                                           _RXF2EIDL 000EEB  
                                         _RXF3EIDH 000EEE                                           _RXF3EIDL 000EEF  
                                         _RXF4EIDH 000EF2                                           _RXF4EIDL 000EF3  
                                         _RXF5EIDH 000EF6                                           _RXF5EIDL 000EF7  
                                         _RXF0SIDH 000EE0                                           _RXF0SIDL 000EE1  
                                         _TXB0EIDH 000F23                                           _RXF1SIDH 000EE4  
                                         _TXB0EIDL 000F24                                           _RXF1SIDL 000EE5  
                                         _TXB1EIDH 000F13                                           _RXF2SIDH 000EE8  
                                         _TXB1EIDL 000F14                                           _RXF2SIDL 000EE9  
                                         _TXB2EIDH 000F03                                           _RXF3SIDH 000EEC  
                                         _TXB2EIDL 000F04                                           _RXF3SIDL 000EED  
                                         _RXF4SIDH 000EF0                                           _RXF4SIDL 000EF1  
                                         _RXF5SIDH 000EF4                                           _RXF5SIDL 000EF5  
                                         _TMR1_ISR 06A8                                           _RXM0EIDH 000EFA  
                                         _RXM0EIDL 000EFB                                           _TXB0SIDH 000F21  
                                         _RXM1EIDH 000EFE                                           _TXB0SIDL 000F22  
                                         _RXM1EIDL 000EFF                                           _TXB1SIDH 000F11  
                                         _TXB1SIDL 000F12                                           _TXB2SIDH 000F01  
                                         _TXB2SIDL 000F02                                           _RXM0SIDH 000EF8  
                                         _RXM0SIDL 000EF9                                           _RXM1SIDH 000EFC  
                                         _RXM1SIDL 000EFD                                  ??_TMR1_Initialize 0011  
                                 __CFG_SOSCSEL$DIG 000000                              ?_INTERRUPT_Initialize 0001  
                                   ?_TMR1_CallBack 0001                           _convertReg2StandardCANid 05A2  
            convertReg2ExtendedCANid@tempRXBn_EIDH 0017              convertReg2ExtendedCANid@tempRXBn_EIDL 000F  
            convertReg2ExtendedCANid@tempRXBn_SIDH 0010              convertReg2ExtendedCANid@tempRXBn_SIDL 0011  
                                         __Hrparam 0000                                           __Lrparam 0000  
                               __CFG_BOREN$SBORDIS 000000                            ??_OSCILLATOR_Initialize 000F  
                                       _CIOCONbits 000F70                        __size_of_EUSART1_Initialize 0016  
                         _TMR1_SetInterruptHandler 0758  convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 001D  
                            _TMR1_InterruptHandler 0037  convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 001C  
                                         __ptext10 0400                                           __ptext11 074C  
                                         __ptext20 0000                                           __ptext12 008E  
                                         __ptext13 05A2                                         _T1GCONbits 000FAA  
                                         __ptext14 02B8                                           __ptext16 06A8  
                                         __ptext17 06D0                                           __ptext18 0778  
                                         __ptext19 0762                                  ??_TMR1_StartTimer 000F  
              convertReg2StandardCANid@ConvertedID 001A                                      __size_of_main 00B4  
              convertReg2ExtendedCANid@returnValue 0018                  __size_of_convertReg2ExtendedCANid 0148  
                        ?_convertReg2ExtendedCANid 000F                                           int$flags 003B  
               __end_of_INTERRUPT_InterruptManager 008A                         _INTERRUPT_InterruptManager 0008  
                              __CFG_INTOSCSEL$HIGH 000000                              __end_of_radio_timeout 076C  
                                      _RXB0CONbits 000F60                                        _RXB1CONbits 000F30  
                                       _INTCONbits 000FF2                             ??_INTERRUPT_Initialize 000F  
                                  ??_TMR1_CallBack 0001                                           intlevel2 0000  
                                __CFG_T0CKMX$PORTB 000000                            ?_PIN_MANAGER_Initialize 0001  
                                      _TXB0CONbits 000F20                                         _RCSTA1bits 000FAB  
                                     ?_CAN_receive 0022                                        _TXB1CONbits 000F10  
                                      _TXB2CONbits 000F00                                   ??_TMR1_StopTimer 000F  
                               __CFG_WDTPS$1048576 000000                             __size_of_EUSART1_Write 000C  
                                __CFG_T3CKMX$PORTG 000000                     __end_of_PIN_MANAGER_Initialize 066C  
                              __CFG_BORPWR$ZPBORMV 000000                                    _TMR1_Initialize 066C  
