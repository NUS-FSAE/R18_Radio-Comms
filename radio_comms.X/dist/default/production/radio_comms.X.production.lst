

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Mar 18 01:01:03 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F66K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           ; Version 1.42
    49                           ; Generated 13/04/2017 GMT
    50                           ; 
    51                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F66K80 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataCOMRAM
    84  00087A                     __pidataCOMRAM:
    85                           	opt stack 0
    86                           
    87                           ;initializer for _CAN_timeout
    88  00087A  01                 	db	1
    89                           
    90                           	psect	nvCOMRAM
    91  000038                     __pnvCOMRAM:
    92                           	opt stack 0
    93  000038                     _timer0ReloadVal:
    94                           	opt stack 0
    95  000038                     	ds	2
    96  00003A                     _TMR0_InterruptHandler:
    97                           	opt stack 0
    98  00003A                     	ds	2
    99  00003C                     _TMR1_InterruptHandler:
   100                           	opt stack 0
   101  00003C                     	ds	2
   102  00003E                     _timer1ReloadVal:
   103                           	opt stack 0
   104  00003E                     	ds	2
   105  0000                     _BRGCON3	set	3653
   106  0000                     _BRGCON2	set	3652
   107  0000                     _BRGCON1	set	3651
   108  0000                     _RXF5SIDL	set	3829
   109  0000                     _RXF5SIDH	set	3828
   110  0000                     _RXF5EIDL	set	3831
   111  0000                     _RXF5EIDH	set	3830
   112  0000                     _RXF4SIDL	set	3825
   113  0000                     _RXF4SIDH	set	3824
   114  0000                     _RXF4EIDL	set	3827
   115  0000                     _RXF4EIDH	set	3826
   116  0000                     _RXF3SIDL	set	3821
   117  0000                     _RXF3SIDH	set	3820
   118  0000                     _RXF3EIDL	set	3823
   119  0000                     _RXF3EIDH	set	3822
   120  0000                     _RXF2SIDL	set	3817
   121  0000                     _RXF2SIDH	set	3816
   122  0000                     _RXF2EIDL	set	3819
   123  0000                     _RXF2EIDH	set	3818
   124  0000                     _RXF1SIDL	set	3813
   125  0000                     _RXF1SIDH	set	3812
   126  0000                     _RXF1EIDL	set	3815
   127  0000                     _RXF1EIDH	set	3814
   128  0000                     _RXF0SIDL	set	3809
   129  0000                     _RXF0SIDH	set	3808
   130  0000                     _RXF0EIDL	set	3811
   131  0000                     _RXF0EIDH	set	3810
   132  0000                     _RXM1SIDL	set	3837
   133  0000                     _RXM1SIDH	set	3836
   134  0000                     _RXM1EIDL	set	3839
   135  0000                     _RXM1EIDH	set	3838
   136  0000                     _RXM0SIDL	set	3833
   137  0000                     _RXM0SIDH	set	3832
   138  0000                     _RXM0EIDL	set	3835
   139  0000                     _RXM0EIDH	set	3834
   140  0000                     _RXB1D7	set	3901
   141  0000                     _RXB1D6	set	3900
   142  0000                     _RXB1D5	set	3899
   143  0000                     _RXB1D4	set	3898
   144  0000                     _RXB1D3	set	3897
   145  0000                     _RXB1D2	set	3896
   146  0000                     _RXB1D1	set	3895
   147  0000                     _RXB1D0	set	3894
   148  0000                     _RXB1DLC	set	3893
   149  0000                     _RXB1SIDH	set	3889
   150  0000                     _RXB1EIDL	set	3892
   151  0000                     _RXB1EIDH	set	3891
   152  0000                     _RXB1SIDL	set	3890
   153  0000                     _RXB1CONbits	set	3888
   154  0000                     _TXB2D7	set	3853
   155  0000                     _TXB2D6	set	3852
   156  0000                     _TXB2D5	set	3851
   157  0000                     _TXB2D4	set	3850
   158  0000                     _TXB2D3	set	3849
   159  0000                     _TXB2D2	set	3848
   160  0000                     _TXB2D1	set	3847
   161  0000                     _TXB2D0	set	3846
   162  0000                     _TXB2DLC	set	3845
   163  0000                     _TXB2SIDL	set	3842
   164  0000                     _TXB2SIDH	set	3841
   165  0000                     _TXB2EIDL	set	3844
   166  0000                     _TXB2EIDH	set	3843
   167  0000                     _TXB2CONbits	set	3840
   168  0000                     _TXB1D7	set	3869
   169  0000                     _TXB1D6	set	3868
   170  0000                     _TXB1D5	set	3867
   171  0000                     _TXB1D4	set	3866
   172  0000                     _TXB1D3	set	3865
   173  0000                     _TXB1D2	set	3864
   174  0000                     _TXB1D1	set	3863
   175  0000                     _TXB1D0	set	3862
   176  0000                     _TXB1DLC	set	3861
   177  0000                     _TXB1SIDL	set	3858
   178  0000                     _TXB1SIDH	set	3857
   179  0000                     _TXB1EIDL	set	3860
   180  0000                     _TXB1EIDH	set	3859
   181  0000                     _TXB1CONbits	set	3856
   182  0000                     _TXB0D7	set	3885
   183  0000                     _TXB0D6	set	3884
   184  0000                     _TXB0D5	set	3883
   185  0000                     _TXB0D4	set	3882
   186  0000                     _TXB0D3	set	3881
   187  0000                     _TXB0D2	set	3880
   188  0000                     _TXB0D1	set	3879
   189  0000                     _TXB0D0	set	3878
   190  0000                     _TXB0DLC	set	3877
   191  0000                     _TXB0SIDL	set	3874
   192  0000                     _TXB0SIDH	set	3873
   193  0000                     _TXB0EIDL	set	3876
   194  0000                     _TXB0EIDH	set	3875
   195  0000                     _TXB0CONbits	set	3872
   196  0000                     _WPUB	set	3931
   197  0000                     _ANCON1	set	3932
   198  0000                     _ANCON0	set	3933
   199  0000                     _LATFbits	set	3982
   200  0000                     _PORTAbits	set	3968
   201  0000                     _LATBbits	set	3978
   202  0000                     _CIOCONbits	set	3952
   203  0000                     _LATDbits	set	3980
   204  0000                     _T0CONbits	set	4053
   205  0000                     _TMR0L	set	4054
   206  0000                     _TMR0H	set	4055
   207  0000                     _T0CON	set	4053
   208  0000                     _INTCONbits	set	4082
   209  0000                     _RCONbits	set	4048
   210  0000                     _T1GCONbits	set	4010
   211  0000                     _T1CONbits	set	4045
   212  0000                     _PIE1bits	set	3997
   213  0000                     _TMR1L	set	4046
   214  0000                     _TMR1H	set	4047
   215  0000                     _T1GCON	set	4010
   216  0000                     _T1CON	set	4045
   217  0000                     _TXREG1	set	4013
   218  0000                     _RCREG1	set	4014
   219  0000                     _PIR1bits	set	3998
   220  0000                     _RCSTA1bits	set	4011
   221  0000                     _SPBRGH1	set	3965
   222  0000                     _SPBRG1	set	4015
   223  0000                     _TXSTA1	set	4012
   224  0000                     _RCSTA1	set	4011
   225  0000                     _BAUDCON1	set	4007
   226  0000                     _COMSTATbits	set	3953
   227  0000                     _RXB0D7	set	3949
   228  0000                     _RXB0D6	set	3948
   229  0000                     _RXB0D5	set	3947
   230  0000                     _RXB0D4	set	3946
   231  0000                     _RXB0D3	set	3945
   232  0000                     _RXB0D2	set	3944
   233  0000                     _RXB0D1	set	3943
   234  0000                     _RXB0D0	set	3942
   235  0000                     _RXB0DLC	set	3941
   236  0000                     _RXB0SIDH	set	3937
   237  0000                     _RXB0EIDL	set	3940
   238  0000                     _RXB0EIDH	set	3939
   239  0000                     _RXB0SIDL	set	3938
   240  0000                     _RXB0CONbits	set	3936
   241  0000                     _PIE5bits	set	3958
   242  0000                     _PIR5bits	set	3959
   243  0000                     _ECANCON	set	3954
   244  0000                     _CANSTAT	set	3950
   245  0000                     _CANCON	set	3951
   246  0000                     _REFOCON	set	3994
   247  0000                     _OSCTUNE	set	3995
   248  0000                     _OSCCON2	set	4050
   249  0000                     _OSCCON	set	4051
   250  0000                     _TRISD	set	3989
   251  0000                     _TRISC	set	3988
   252  0000                     _TRISB	set	3987
   253  0000                     _TRISG	set	3992
   254  0000                     _TRISA	set	3986
   255  0000                     _TRISF	set	3991
   256  0000                     _TRISE	set	3990
   257  0000                     _LATC	set	3979
   258  0000                     _LATG	set	3983
   259  0000                     _LATB	set	3978
   260  0000                     _LATF	set	3982
   261  0000                     _LATA	set	3977
   262  0000                     _LATD	set	3980
   263  0000                     _LATE	set	3981
   264                           
   265                           ; #config settings
   266  0000                     
   267                           	psect	cinit
   268  000726                     __pcinit:
   269                           	opt stack 0
   270  000726                     start_initialization:
   271                           	opt stack 0
   272  000726                     __initialization:
   273                           	opt stack 0
   274                           
   275                           ; Initialize objects allocated to COMRAM (1 bytes)
   276                           ; load TBLPTR registers with __pidataCOMRAM
   277  000726  0E7A               	movlw	low __pidataCOMRAM
   278  000728  6EF6               	movwf	tblptrl,c
   279  00072A  0E08               	movlw	high __pidataCOMRAM
   280  00072C  6EF7               	movwf	tblptrh,c
   281  00072E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   282  000730  6EF8               	movwf	tblptru,c
   283  000732  0009               	tblrd		*+	;fetch initializer
   284  000734  CFF5 F040          	movff	tablat,__pdataCOMRAM
   285                           
   286                           ; Clear objects allocated to COMRAM (17 bytes)
   287  000738  EE00  F027         	lfsr	0,__pbssCOMRAM
   288  00073C  0E11               	movlw	17
   289  00073E                     clear_0:
   290  00073E  6AEE               	clrf	postinc0,c
   291  000740  06E8               	decf	wreg,f,c
   292  000742  E1FD               	bnz	clear_0
   293  000744                     end_of_initialization:
   294                           	opt stack 0
   295  000744                     __end_of__initialization:
   296                           	opt stack 0
   297  000744  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   298  000746  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   299  000748  0E00               	movlw	low (__Lmediumconst shr (0+16))
   300  00074A  6EF8               	movwf	tblptru,c
   301  00074C  0100               	movlb	0
   302  00074E  EF06  F002         	goto	_main	;jump to C main() function
   303                           tblptru	equ	0xFF8
   304                           tblptrh	equ	0xFF7
   305                           tblptrl	equ	0xFF6
   306                           tablat	equ	0xFF5
   307                           postinc0	equ	0xFEE
   308                           wreg	equ	0xFE8
   309                           
   310                           	psect	bssCOMRAM
   311  000027                     __pbssCOMRAM:
   312                           	opt stack 0
   313  000027                     TMR1_ISR@CountCallBack:
   314                           	opt stack 0
   315  000027                     	ds	2
   316  000029                     _ringing:
   317                           	opt stack 0
   318  000029                     	ds	1
   319  00002A                     _canMessage:
   320                           	opt stack 0
   321  00002A                     	ds	14
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           
   329                           	psect	dataCOMRAM
   330  000040                     __pdataCOMRAM:
   331                           	opt stack 0
   332  000040                     _CAN_timeout:
   333                           	opt stack 0
   334  000040                     	ds	1
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           
   342                           	psect	cstackCOMRAM
   343  000001                     __pcstackCOMRAM:
   344                           	opt stack 0
   345  000001                     ??_INTERRUPT_InterruptManager:
   346  000001                     
   347                           ; 1 bytes @ 0x0
   348  000001                     	ds	14
   349  00000F                     ??_ECAN_Initialize:
   350  00000F                     ?_convertReg2ExtendedCANid:
   351                           	opt stack 0
   352  00000F                     ?_convertReg2StandardCANid:
   353                           	opt stack 0
   354  00000F                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   355                           	opt stack 0
   356  00000F                     convertReg2StandardCANid@tempRXBn_SIDL:
   357                           	opt stack 0
   358  00000F                     EUSART1_Write@txData:
   359                           	opt stack 0
   360  00000F                     TMR1_SetInterruptHandler@InterruptHandler:
   361                           	opt stack 0
   362  00000F                     TMR0_SetInterruptHandler@InterruptHandler:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0xE
   366  00000F                     	ds	1
   367  000010                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0xF
   371  000010                     	ds	1
   372  000011                     ??_TMR1_Initialize:
   373  000011                     ??_TMR0_Initialize:
   374  000011                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x10
   378  000011                     	ds	2
   379  000013                     ??_convertReg2ExtendedCANid:
   380  000013                     ??_convertReg2StandardCANid:
   381  000013                     
   382                           ; 1 bytes @ 0x12
   383  000013                     	ds	2
   384  000015                     convertReg2StandardCANid@tempRXBn_SIDH:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x14
   388  000015                     	ds	1
   389  000016                     convertReg2StandardCANid@returnValue:
   390                           	opt stack 0
   391                           
   392                           ; 4 bytes @ 0x15
   393  000016                     	ds	1
   394  000017                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x16
   398  000017                     	ds	1
   399  000018                     convertReg2ExtendedCANid@returnValue:
   400                           	opt stack 0
   401                           
   402                           ; 4 bytes @ 0x17
   403  000018                     	ds	2
   404  00001A                     convertReg2StandardCANid@ConvertedID:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x19
   408  00001A                     	ds	2
   409  00001C                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x1B
   413  00001C                     	ds	1
   414  00001D                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x1C
   418  00001D                     	ds	1
   419  00001E                     convertReg2ExtendedCANid@ConvertedID:
   420                           	opt stack 0
   421                           
   422                           ; 4 bytes @ 0x1D
   423  00001E                     	ds	4
   424  000022                     CAN_receive@tempCanMsg:
   425                           	opt stack 0
   426                           
   427                           ; 2 bytes @ 0x21
   428  000022                     	ds	2
   429  000024                     CAN_receive@returnValue:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x23
   433  000024                     	ds	1
   434  000025                     ??_main:
   435                           
   436                           ; 1 bytes @ 0x24
   437  000025                     	ds	2
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           
   445 ;;
   446 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   447 ;;
   448 ;; *************** function _main *****************
   449 ;; Defined at:
   450 ;;		line 50 in file "main.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;		None
   453 ;; Auto vars:     Size  Location     Type
   454 ;;		None
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   466 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   467 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   468 ;;Total ram usage:        2 bytes
   469 ;; Hardware stack levels required when called:    7
   470 ;; This function calls:
   471 ;;		_CAN_receive
   472 ;;		_EUSART1_Write
   473 ;;		_SYSTEM_Initialize
   474 ;;		_TMR0_SetInterruptHandler
   475 ;;		_TMR1_Reload
   476 ;;		_TMR1_SetInterruptHandler
   477 ;;		_TMR1_StopTimer
   478 ;;		_setLED_Blue
   479 ;;		_setLED_Cyan
   480 ;;		_setLED_Green
   481 ;;		_setLED_Red
   482 ;; This function is called by:
   483 ;;		Startup code after reset
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text0
   488  00040C                     __ptext0:
   489                           	opt stack 0
   490  00040C                     _main:
   491                           	opt stack 24
   492                           
   493                           ;main.c: 51: SYSTEM_Initialize();
   494                           
   495                           ;incstack = 0
   496  00040C  ECDD  F003         	call	_SYSTEM_Initialize	;wreg free
   497                           
   498                           ;main.c: 52: TMR1_StopTimer();
   499  000410  EC33  F004         	call	_TMR1_StopTimer	;wreg free
   500                           
   501                           ;main.c: 55: CIOCONbits.CLKSEL = 1;
   502  000414  8070               	bsf	3952,0,c	;volatile
   503                           
   504                           ;main.c: 56: CIOCONbits.ENDRHI = 1;
   505  000416  8A70               	bsf	3952,5,c	;volatile
   506                           
   507                           ;main.c: 57: CIOCONbits.TX2SRC = 0;
   508  000418  9E70               	bcf	3952,7,c	;volatile
   509                           
   510                           ;main.c: 58: CIOCONbits.TX2EN = 0;
   511  00041A  9C70               	bcf	3952,6,c	;volatile
   512                           
   513                           ;main.c: 59: RXF1SIDH = 0xC8;
   514  00041C  0EC8               	movlw	200
   515  00041E  010E               	movlb	14	; () banked
   516  000420  6FE4               	movwf	228,b	;volatile
   517                           
   518                           ; BSR set to: 14
   519                           ;main.c: 60: RXF1SIDL = 0x60;
   520  000422  0E60               	movlw	96
   521  000424  010E               	movlb	14	; () banked
   522  000426  6FE5               	movwf	229,b	;volatile
   523                           
   524                           ; BSR set to: 14
   525                           ;main.c: 61: TMR1_SetInterruptHandler(&can_receive_timeout);
   526  000428  0E5A               	movlw	low _can_receive_timeout
   527  00042A  6E0F               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
   528  00042C  0E08               	movlw	high _can_receive_timeout
   529  00042E  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
   530  000430  EC13  F004         	call	_TMR1_SetInterruptHandler	;wreg free
   531                           
   532                           ;main.c: 62: TMR0_SetInterruptHandler(&ring);
   533  000434  0E60               	movlw	low _ring
   534  000436  6E0F               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
   535  000438  0E08               	movlw	high _ring
   536  00043A  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
   537  00043C  EC18  F004         	call	_TMR0_SetInterruptHandler	;wreg free
   538                           
   539                           ;main.c: 63: (INTCONbits.GIE = 1);
   540  000440  8EF2               	bsf	intcon,7,c	;volatile
   541                           
   542                           ;main.c: 64: (INTCONbits.PEIE = 1);
   543  000442  8CF2               	bsf	intcon,6,c	;volatile
   544                           
   545                           ;main.c: 67: _delay((unsigned long)((10000)*(16000000/4000.0)));
   546  000444  0ECB               	movlw	203
   547  000446  6E26               	movwf	(??_main+1)& (0+255),c
   548  000448  0EEC               	movlw	236
   549  00044A  6E25               	movwf	??_main& (0+255),c
   550  00044C  0E84               	movlw	132
   551  00044E                     u537:
   552  00044E  2EE8               	decfsz	wreg,f,c
   553  000450  D7FE               	bra	u537
   554  000452  2E25               	decfsz	??_main& (0+255),f,c
   555  000454  D7FC               	bra	u537
   556  000456  2E26               	decfsz	(??_main+1)& (0+255),f,c
   557  000458  D7FA               	bra	u537
   558  00045A  D000               	nop2	
   559                           
   560                           ;main.c: 69: do { LATBbits.LATB5 = 0; } while(0);
   561  00045C  9A8A               	bcf	3978,5,c	;volatile
   562  00045E                     l1977:
   563                           
   564                           ;main.c: 72: if(PORTAbits.RA5 == 0) {
   565  00045E  BA80               	btfsc	3968,5,c	;volatile
   566  000460  D003               	goto	l1981
   567                           
   568                           ;main.c: 73: setLED_Cyan();
   569  000462  EC25  F004         	call	_setLED_Cyan	;wreg free
   570                           
   571                           ;main.c: 74: } else if (CAN_receive(&canMessage)) {
   572  000466  D033               	goto	l2001
   573  000468                     l1981:
   574  000468  0E2A               	movlw	low _canMessage
   575  00046A  6E22               	movwf	CAN_receive@tempCanMsg,c
   576  00046C  0E00               	movlw	high _canMessage
   577  00046E  6E23               	movwf	CAN_receive@tempCanMsg+1,c
   578  000470  EC4D  F000         	call	_CAN_receive	;wreg free
   579  000474  0900               	iorlw	0
   580  000476  B4D8               	btfsc	status,2,c
   581  000478  D024               	goto	l1997
   582                           
   583                           ;main.c: 75: if (canMessage.frame.id == 0x643) {
   584  00047A  0E43               	movlw	67
   585  00047C  182B               	xorwf	_canMessage+1,w,c
   586  00047E  E127               	bnz	l2001
   587  000480  0E06               	movlw	6
   588  000482  182C               	xorwf	_canMessage+2,w,c
   589  000484  102D               	iorwf	_canMessage+3,w,c
   590  000486  102E               	iorwf	_canMessage+4,w,c
   591  000488  A4D8               	btfss	status,2,c
   592  00048A  D021               	goto	l2001
   593                           
   594                           ;main.c: 76: TMR1_Reload();
   595  00048C  EC0E  F004         	call	_TMR1_Reload	;wreg free
   596                           
   597                           ;main.c: 77: CAN_timeout = 0;
   598  000490  0E00               	movlw	0
   599  000492  6E40               	movwf	_CAN_timeout,c
   600                           
   601                           ;main.c: 78: if(canMessage.frame.data0 >> 7) {
   602  000494  4430               	rlncf	_canMessage+6,w,c
   603  000496  0B01               	andlw	1
   604  000498  B4D8               	btfsc	status,2,c
   605  00049A  D00F               	goto	l634
   606                           
   607                           ;main.c: 79: do { LATFbits.LATF2 = 0; } while(0);
   608  00049C  948E               	bcf	3982,2,c	;volatile
   609                           
   610                           ;main.c: 80: _delay((unsigned long)((600)*(16000000/4000.0)));
   611  00049E  0E0D               	movlw	13
   612  0004A0  6E26               	movwf	(??_main+1)& (0+255),c
   613  0004A2  0E2D               	movlw	45
   614  0004A4  6E25               	movwf	??_main& (0+255),c
   615  0004A6  0ED8               	movlw	216
   616  0004A8                     u547:
   617  0004A8  2EE8               	decfsz	wreg,f,c
   618  0004AA  D7FE               	bra	u547
   619  0004AC  2E25               	decfsz	??_main& (0+255),f,c
   620  0004AE  D7FC               	bra	u547
   621  0004B0  2E26               	decfsz	(??_main+1)& (0+255),f,c
   622  0004B2  D7FA               	bra	u547
   623                           
   624                           ;main.c: 81: setLED_Green();
   625  0004B4  EC21  F004         	call	_setLED_Green	;wreg free
   626                           
   627                           ;main.c: 82: } else {
   628  0004B8  D00A               	goto	l2001
   629  0004BA                     l634:
   630  0004BA  848E               	bsf	3982,2,c	;volatile
   631                           
   632                           ;main.c: 84: setLED_Blue();
   633  0004BC  EC29  F004         	call	_setLED_Blue	;wreg free
   634                           
   635                           ;main.c: 85: }
   636                           ;main.c: 86: }
   637                           ;main.c: 87: } else if (CAN_timeout) {
   638  0004C0  D006               	goto	l2001
   639  0004C2                     l1997:
   640  0004C2  5040               	movf	_CAN_timeout,w,c
   641  0004C4  B4D8               	btfsc	status,2,c
   642  0004C6  D003               	goto	l2001
   643                           
   644                           ;main.c: 88: do { LATFbits.LATF2 = 1; } while(0);
   645  0004C8  848E               	bsf	3982,2,c	;volatile
   646                           
   647                           ;main.c: 89: setLED_Red();
   648  0004CA  EC1D  F004         	call	_setLED_Red	;wreg free
   649  0004CE                     l2001:
   650                           
   651                           ;main.c: 90: }
   652                           ;main.c: 91: if (ringing) {
   653  0004CE  5029               	movf	_ringing,w,c
   654  0004D0  B4D8               	btfsc	status,2,c
   655  0004D2  D7C5               	goto	l1977
   656                           
   657                           ;main.c: 92: EUSART1_Write('R');
   658  0004D4  0E52               	movlw	82
   659  0004D6  EC08  F004         	call	_EUSART1_Write
   660                           
   661                           ;main.c: 93: EUSART1_Write('I');
   662  0004DA  0E49               	movlw	73
   663  0004DC  EC08  F004         	call	_EUSART1_Write
   664                           
   665                           ;main.c: 94: EUSART1_Write('N');
   666  0004E0  0E4E               	movlw	78
   667  0004E2  EC08  F004         	call	_EUSART1_Write
   668                           
   669                           ;main.c: 95: EUSART1_Write('G');
   670  0004E6  0E47               	movlw	71
   671  0004E8  EC08  F004         	call	_EUSART1_Write
   672                           
   673                           ;main.c: 96: EUSART1_Write('\n');
   674  0004EC  0E0A               	movlw	10
   675  0004EE  EC08  F004         	call	_EUSART1_Write
   676                           
   677                           ;main.c: 97: EUSART1_Write('\r');
   678  0004F2  0E0D               	movlw	13
   679  0004F4  EC08  F004         	call	_EUSART1_Write
   680                           
   681                           ;main.c: 98: ringing = 0;
   682  0004F8  0E00               	movlw	0
   683  0004FA  6E29               	movwf	_ringing,c
   684  0004FC  D7B0               	goto	l1977
   685  0004FE                     __end_of_main:
   686                           	opt stack 0
   687                           tblptru	equ	0xFF8
   688                           tblptrh	equ	0xFF7
   689                           tblptrl	equ	0xFF6
   690                           tablat	equ	0xFF5
   691                           intcon	equ	0xFF2
   692                           postinc0	equ	0xFEE
   693                           wreg	equ	0xFE8
   694                           status	equ	0xFD8
   695                           
   696 ;; *************** function _setLED_Red *****************
   697 ;; Defined at:
   698 ;;		line 22 in file "main.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;		None
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		None
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   716 ;;Total ram usage:        0 bytes
   717 ;; Hardware stack levels used:    1
   718 ;; Hardware stack levels required when called:    4
   719 ;; This function calls:
   720 ;;		Nothing
   721 ;; This function is called by:
   722 ;;		_main
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text1
   727  00083A                     __ptext1:
   728                           	opt stack 0
   729  00083A                     _setLED_Red:
   730                           	opt stack 26
   731                           
   732                           ;incstack = 0
   733                           ;main.c: 23: do { LATDbits.LATD6 = 0; } while(0);
   734  00083A  9C8C               	bcf	3980,6,c	;volatile
   735                           
   736                           ;main.c: 24: do { LATDbits.LATD4 = 1; } while(0);
   737  00083C  888C               	bsf	3980,4,c	;volatile
   738                           
   739                           ;main.c: 25: do { LATDbits.LATD5 = 1; } while(0);
   740  00083E  8A8C               	bsf	3980,5,c	;volatile
   741  000840  0012               	return	
   742  000842                     __end_of_setLED_Red:
   743                           	opt stack 0
   744                           tblptru	equ	0xFF8
   745                           tblptrh	equ	0xFF7
   746                           tblptrl	equ	0xFF6
   747                           tablat	equ	0xFF5
   748                           intcon	equ	0xFF2
   749                           postinc0	equ	0xFEE
   750                           wreg	equ	0xFE8
   751                           status	equ	0xFD8
   752                           
   753 ;; *************** function _setLED_Green *****************
   754 ;; Defined at:
   755 ;;		line 28 in file "main.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		None
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   773 ;;Total ram usage:        0 bytes
   774 ;; Hardware stack levels used:    1
   775 ;; Hardware stack levels required when called:    4
   776 ;; This function calls:
   777 ;;		Nothing
   778 ;; This function is called by:
   779 ;;		_main
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text2
   784  000842                     __ptext2:
   785                           	opt stack 0
   786  000842                     _setLED_Green:
   787                           	opt stack 26
   788                           
   789                           ;incstack = 0
   790                           ;main.c: 29: do { LATDbits.LATD5 = 0; } while(0);
   791  000842  9A8C               	bcf	3980,5,c	;volatile
   792                           
   793                           ;main.c: 30: do { LATDbits.LATD6 = 1; } while(0);
   794  000844  8C8C               	bsf	3980,6,c	;volatile
   795                           
   796                           ;main.c: 31: do { LATDbits.LATD4 = 1; } while(0);
   797  000846  888C               	bsf	3980,4,c	;volatile
   798  000848  0012               	return	
   799  00084A                     __end_of_setLED_Green:
   800                           	opt stack 0
   801                           tblptru	equ	0xFF8
   802                           tblptrh	equ	0xFF7
   803                           tblptrl	equ	0xFF6
   804                           tablat	equ	0xFF5
   805                           intcon	equ	0xFF2
   806                           postinc0	equ	0xFEE
   807                           wreg	equ	0xFE8
   808                           status	equ	0xFD8
   809                           
   810 ;; *************** function _setLED_Cyan *****************
   811 ;; Defined at:
   812 ;;		line 34 in file "main.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		None
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   830 ;;Total ram usage:        0 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    4
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text3
   841  00084A                     __ptext3:
   842                           	opt stack 0
   843  00084A                     _setLED_Cyan:
   844                           	opt stack 26
   845                           
   846                           ;incstack = 0
   847                           ;main.c: 35: do { LATDbits.LATD6 = 1; } while(0);
   848  00084A  8C8C               	bsf	3980,6,c	;volatile
   849                           
   850                           ;main.c: 36: do { LATDbits.LATD4 = 0; } while(0);
   851  00084C  988C               	bcf	3980,4,c	;volatile
   852                           
   853                           ;main.c: 37: do { LATDbits.LATD5 = 0; } while(0);
   854  00084E  9A8C               	bcf	3980,5,c	;volatile
   855  000850  0012               	return	
   856  000852                     __end_of_setLED_Cyan:
   857                           	opt stack 0
   858                           tblptru	equ	0xFF8
   859                           tblptrh	equ	0xFF7
   860                           tblptrl	equ	0xFF6
   861                           tablat	equ	0xFF5
   862                           intcon	equ	0xFF2
   863                           postinc0	equ	0xFEE
   864                           wreg	equ	0xFE8
   865                           status	equ	0xFD8
   866                           
   867 ;; *************** function _setLED_Blue *****************
   868 ;; Defined at:
   869 ;;		line 16 in file "main.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;		None
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		None
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   887 ;;Total ram usage:        0 bytes
   888 ;; Hardware stack levels used:    1
   889 ;; Hardware stack levels required when called:    4
   890 ;; This function calls:
   891 ;;		Nothing
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text4
   898  000852                     __ptext4:
   899                           	opt stack 0
   900  000852                     _setLED_Blue:
   901                           	opt stack 26
   902                           
   903                           ;incstack = 0
   904                           ;main.c: 17: do { LATDbits.LATD4 = 0; } while(0);
   905  000852  988C               	bcf	3980,4,c	;volatile
   906                           
   907                           ;main.c: 18: do { LATDbits.LATD5 = 1; } while(0);
   908  000854  8A8C               	bsf	3980,5,c	;volatile
   909                           
   910                           ;main.c: 19: do { LATDbits.LATD6 = 1; } while(0);
   911  000856  8C8C               	bsf	3980,6,c	;volatile
   912  000858  0012               	return	
   913  00085A                     __end_of_setLED_Blue:
   914                           	opt stack 0
   915                           tblptru	equ	0xFF8
   916                           tblptrh	equ	0xFF7
   917                           tblptrl	equ	0xFF6
   918                           tablat	equ	0xFF5
   919                           intcon	equ	0xFF2
   920                           postinc0	equ	0xFEE
   921                           wreg	equ	0xFE8
   922                           status	equ	0xFD8
   923                           
   924 ;; *************** function _TMR1_StopTimer *****************
   925 ;; Defined at:
   926 ;;		line 101 in file "mcc_generated_files/tmr1.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		None
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   944 ;;Total ram usage:        0 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    4
   947 ;; This function calls:
   948 ;;		Nothing
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text5
   955  000866                     __ptext5:
   956                           	opt stack 0
   957  000866                     _TMR1_StopTimer:
   958                           	opt stack 26
   959                           
   960                           ;tmr1.c: 104: T1CONbits.TMR1ON = 0;
   961                           
   962                           ;incstack = 0
   963  000866  90CD               	bcf	4045,0,c	;volatile
   964  000868  0012               	return		;funcret
   965  00086A                     __end_of_TMR1_StopTimer:
   966                           	opt stack 0
   967                           tblptru	equ	0xFF8
   968                           tblptrh	equ	0xFF7
   969                           tblptrl	equ	0xFF6
   970                           tablat	equ	0xFF5
   971                           intcon	equ	0xFF2
   972                           postinc0	equ	0xFEE
   973                           wreg	equ	0xFE8
   974                           status	equ	0xFD8
   975                           
   976 ;; *************** function _TMR1_Reload *****************
   977 ;; Defined at:
   978 ;;		line 143 in file "mcc_generated_files/tmr1.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, status,2
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   996 ;;Total ram usage:        0 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; Hardware stack levels required when called:    4
   999 ;; This function calls:
  1000 ;;		Nothing
  1001 ;; This function is called by:
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text6
  1007  00081C                     __ptext6:
  1008                           	opt stack 0
  1009  00081C                     _TMR1_Reload:
  1010                           	opt stack 26
  1011                           
  1012                           ;tmr1.c: 146: TMR1H = (timer1ReloadVal >> 8);
  1013                           
  1014                           ;incstack = 0
  1015  00081C  503F               	movf	_timer1ReloadVal+1,w,c	;volatile
  1016  00081E  6ECF               	movwf	4047,c	;volatile
  1017                           
  1018                           ;tmr1.c: 147: TMR1L = timer1ReloadVal;
  1019  000820  C03E  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  1020  000824  0012               	return		;funcret
  1021  000826                     __end_of_TMR1_Reload:
  1022                           	opt stack 0
  1023                           tblptru	equ	0xFF8
  1024                           tblptrh	equ	0xFF7
  1025                           tblptrl	equ	0xFF6
  1026                           tablat	equ	0xFF5
  1027                           intcon	equ	0xFF2
  1028                           postinc0	equ	0xFEE
  1029                           wreg	equ	0xFE8
  1030                           status	equ	0xFD8
  1031                           
  1032 ;; *************** function _SYSTEM_Initialize *****************
  1033 ;; Defined at:
  1034 ;;		line 113 in file "mcc_generated_files/mcc.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, status,2, status,0, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1052 ;;Total ram usage:        0 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    6
  1055 ;; This function calls:
  1056 ;;		_ECAN_Initialize
  1057 ;;		_EUSART1_Initialize
  1058 ;;		_INTERRUPT_Initialize
  1059 ;;		_OSCILLATOR_Initialize
  1060 ;;		_PIN_MANAGER_Initialize
  1061 ;;		_TMR0_Initialize
  1062 ;;		_TMR1_Initialize
  1063 ;; This function is called by:
  1064 ;;		_main
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           	psect	text7
  1069  0007BA                     __ptext7:
  1070                           	opt stack 0
  1071  0007BA                     _SYSTEM_Initialize:
  1072                           	opt stack 24
  1073                           
  1074                           ;mcc.c: 116: INTERRUPT_Initialize();
  1075                           
  1076                           ;incstack = 0
  1077  0007BA  EC39  F004         	call	_INTERRUPT_Initialize	;wreg free
  1078                           
  1079                           ;mcc.c: 117: PIN_MANAGER_Initialize();
  1080  0007BE  EC35  F003         	call	_PIN_MANAGER_Initialize	;wreg free
  1081                           
  1082                           ;mcc.c: 118: OSCILLATOR_Initialize();
  1083  0007C2  ECF7  F003         	call	_OSCILLATOR_Initialize	;wreg free
  1084                           
  1085                           ;mcc.c: 119: TMR1_Initialize();
  1086  0007C6  EC59  F003         	call	_TMR1_Initialize	;wreg free
  1087                           
  1088                           ;mcc.c: 120: TMR0_Initialize();
  1089  0007CA  EC77  F003         	call	_TMR0_Initialize	;wreg free
  1090                           
  1091                           ;mcc.c: 121: EUSART1_Initialize();
  1092  0007CE  ECEC  F003         	call	_EUSART1_Initialize	;wreg free
  1093                           
  1094                           ;mcc.c: 122: ECAN_Initialize();
  1095  0007D2  EC7F  F002         	call	_ECAN_Initialize	;wreg free
  1096  0007D6  0012               	return		;funcret
  1097  0007D8                     __end_of_SYSTEM_Initialize:
  1098                           	opt stack 0
  1099                           tblptru	equ	0xFF8
  1100                           tblptrh	equ	0xFF7
  1101                           tblptrl	equ	0xFF6
  1102                           tablat	equ	0xFF5
  1103                           intcon	equ	0xFF2
  1104                           postinc0	equ	0xFEE
  1105                           wreg	equ	0xFE8
  1106                           status	equ	0xFD8
  1107                           
  1108 ;; *************** function _TMR1_Initialize *****************
  1109 ;; Defined at:
  1110 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1127 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1128 ;;Total ram usage:        2 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; Hardware stack levels required when called:    5
  1131 ;; This function calls:
  1132 ;;		_TMR1_SetInterruptHandler
  1133 ;;		_TMR1_StartTimer
  1134 ;; This function is called by:
  1135 ;;		_SYSTEM_Initialize
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text8
  1140  0006B2                     __ptext8:
  1141                           	opt stack 0
  1142  0006B2                     _TMR1_Initialize:
  1143                           	opt stack 24
  1144                           
  1145                           ;tmr1.c: 68: T1CON = 0x30;
  1146                           
  1147                           ;incstack = 0
  1148  0006B2  0E30               	movlw	48
  1149  0006B4  6ECD               	movwf	4045,c	;volatile
  1150                           
  1151                           ;tmr1.c: 71: T1GCON = 0x00;
  1152  0006B6  0E00               	movlw	0
  1153  0006B8  6EAA               	movwf	4010,c	;volatile
  1154                           
  1155                           ;tmr1.c: 74: TMR1H = 0x3C;
  1156  0006BA  0E3C               	movlw	60
  1157  0006BC  6ECF               	movwf	4047,c	;volatile
  1158                           
  1159                           ;tmr1.c: 77: TMR1L = 0xB0;
  1160  0006BE  0EB0               	movlw	176
  1161  0006C0  6ECE               	movwf	4046,c	;volatile
  1162                           
  1163                           ;tmr1.c: 80: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1164  0006C2  50CE               	movf	4046,w,c	;volatile
  1165  0006C4  CFCF F011          	movff	4047,??_TMR1_Initialize	;volatile
  1166  0006C8  6A12               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  1167  0006CA  C011  F012         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  1168  0006CE  6A11               	clrf	??_TMR1_Initialize,c
  1169  0006D0  1011               	iorwf	??_TMR1_Initialize,w,c
  1170  0006D2  6E3E               	movwf	_timer1ReloadVal,c	;volatile
  1171  0006D4  5012               	movf	??_TMR1_Initialize+1,w,c
  1172  0006D6  6E3F               	movwf	_timer1ReloadVal+1,c	;volatile
  1173                           
  1174                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  1175  0006D8  909E               	bcf	3998,0,c	;volatile
  1176                           
  1177                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  1178  0006DA  809D               	bsf	3997,0,c	;volatile
  1179                           
  1180                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  1181  0006DC  0E76               	movlw	low _TMR1_DefaultInterruptHandler
  1182  0006DE  6E0F               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  1183  0006E0  0E08               	movlw	high _TMR1_DefaultInterruptHandler
  1184  0006E2  6E10               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  1185  0006E4  EC13  F004         	call	_TMR1_SetInterruptHandler	;wreg free
  1186                           
  1187                           ;tmr1.c: 92: TMR1_StartTimer();
  1188  0006E8  EC35  F004         	call	_TMR1_StartTimer	;wreg free
  1189  0006EC  0012               	return		;funcret
  1190  0006EE                     __end_of_TMR1_Initialize:
  1191                           	opt stack 0
  1192                           tblptru	equ	0xFF8
  1193                           tblptrh	equ	0xFF7
  1194                           tblptrl	equ	0xFF6
  1195                           tablat	equ	0xFF5
  1196                           intcon	equ	0xFF2
  1197                           postinc0	equ	0xFEE
  1198                           wreg	equ	0xFE8
  1199                           status	equ	0xFD8
  1200                           
  1201 ;; *************** function _TMR1_StartTimer *****************
  1202 ;; Defined at:
  1203 ;;		line 95 in file "mcc_generated_files/tmr1.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		None
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1221 ;;Total ram usage:        0 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    4
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		_TMR1_Initialize
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text9
  1232  00086A                     __ptext9:
  1233                           	opt stack 0
  1234  00086A                     _TMR1_StartTimer:
  1235                           	opt stack 24
  1236                           
  1237                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
  1238                           
  1239                           ;incstack = 0
  1240  00086A  80CD               	bsf	4045,0,c	;volatile
  1241  00086C  0012               	return		;funcret
  1242  00086E                     __end_of_TMR1_StartTimer:
  1243                           	opt stack 0
  1244                           tblptru	equ	0xFF8
  1245                           tblptrh	equ	0xFF7
  1246                           tblptrl	equ	0xFF6
  1247                           tablat	equ	0xFF5
  1248                           intcon	equ	0xFF2
  1249                           postinc0	equ	0xFEE
  1250                           wreg	equ	0xFE8
  1251                           status	equ	0xFD8
  1252                           
  1253 ;; *************** function _TMR1_SetInterruptHandler *****************
  1254 ;; Defined at:
  1255 ;;		line 190 in file "mcc_generated_files/tmr1.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  InterruptHan    2   14[COMRAM] PTR FTN()void 
  1258 ;;		 -> can_receive_timeout(1), TMR1_DefaultInterruptHandler(1), 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;		None
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1273 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1274 ;;Total ram usage:        2 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    4
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_TMR1_Initialize
  1281 ;;		_main
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text10
  1286  000826                     __ptext10:
  1287                           	opt stack 0
  1288  000826                     _TMR1_SetInterruptHandler:
  1289                           	opt stack 26
  1290                           
  1291                           ;tmr1.c: 191: TMR1_InterruptHandler = InterruptHandler;
  1292                           
  1293                           ;incstack = 0
  1294  000826  C00F  F03C         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  1295  00082A  C010  F03D         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  1296  00082E  0012               	return		;funcret
  1297  000830                     __end_of_TMR1_SetInterruptHandler:
  1298                           	opt stack 0
  1299                           tblptru	equ	0xFF8
  1300                           tblptrh	equ	0xFF7
  1301                           tblptrl	equ	0xFF6
  1302                           tablat	equ	0xFF5
  1303                           intcon	equ	0xFF2
  1304                           postinc0	equ	0xFEE
  1305                           wreg	equ	0xFE8
  1306                           status	equ	0xFD8
  1307                           
  1308 ;; *************** function _TMR0_Initialize *****************
  1309 ;; Defined at:
  1310 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2, status,0, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1326 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1327 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1328 ;;Total ram usage:        2 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; Hardware stack levels required when called:    5
  1331 ;; This function calls:
  1332 ;;		_TMR0_SetInterruptHandler
  1333 ;;		_TMR0_StartTimer
  1334 ;; This function is called by:
  1335 ;;		_SYSTEM_Initialize
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text11
  1340  0006EE                     __ptext11:
  1341                           	opt stack 0
  1342  0006EE                     _TMR0_Initialize:
  1343                           	opt stack 24
  1344                           
  1345                           ;tmr0.c: 71: T0CON = 0x17;
  1346                           
  1347                           ;incstack = 0
  1348  0006EE  0E17               	movlw	23
  1349  0006F0  6ED5               	movwf	4053,c	;volatile
  1350                           
  1351                           ;tmr0.c: 74: TMR0H = 0x0B;
  1352  0006F2  0E0B               	movlw	11
  1353  0006F4  6ED7               	movwf	4055,c	;volatile
  1354                           
  1355                           ;tmr0.c: 77: TMR0L = 0xDB;
  1356  0006F6  0EDB               	movlw	219
  1357  0006F8  6ED6               	movwf	4054,c	;volatile
  1358                           
  1359                           ;tmr0.c: 80: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  1360  0006FA  50D6               	movf	4054,w,c	;volatile
  1361  0006FC  CFD7 F011          	movff	4055,??_TMR0_Initialize	;volatile
  1362  000700  6A12               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  1363  000702  C011  F012         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1364  000706  6A11               	clrf	??_TMR0_Initialize,c
  1365  000708  1011               	iorwf	??_TMR0_Initialize,w,c
  1366  00070A  6E38               	movwf	_timer0ReloadVal,c	;volatile
  1367  00070C  5012               	movf	??_TMR0_Initialize+1,w,c
  1368  00070E  6E39               	movwf	_timer0ReloadVal+1,c	;volatile
  1369                           
  1370                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
  1371  000710  94F2               	bcf	intcon,2,c	;volatile
  1372                           
  1373                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
  1374  000712  8AF2               	bsf	intcon,5,c	;volatile
  1375                           
  1376                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1377  000714  0E78               	movlw	low _TMR0_DefaultInterruptHandler
  1378  000716  6E0F               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  1379  000718  0E08               	movlw	high _TMR0_DefaultInterruptHandler
  1380  00071A  6E10               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  1381  00071C  EC18  F004         	call	_TMR0_SetInterruptHandler	;wreg free
  1382                           
  1383                           ;tmr0.c: 92: TMR0_StartTimer();
  1384  000720  EC37  F004         	call	_TMR0_StartTimer	;wreg free
  1385  000724  0012               	return		;funcret
  1386  000726                     __end_of_TMR0_Initialize:
  1387                           	opt stack 0
  1388                           tblptru	equ	0xFF8
  1389                           tblptrh	equ	0xFF7
  1390                           tblptrl	equ	0xFF6
  1391                           tablat	equ	0xFF5
  1392                           intcon	equ	0xFF2
  1393                           postinc0	equ	0xFEE
  1394                           wreg	equ	0xFE8
  1395                           status	equ	0xFD8
  1396                           
  1397 ;; *************** function _TMR0_StartTimer *****************
  1398 ;; Defined at:
  1399 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      void 
  1406 ;; Registers used:
  1407 ;;		None
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1417 ;;Total ram usage:        0 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; Hardware stack levels required when called:    4
  1420 ;; This function calls:
  1421 ;;		Nothing
  1422 ;; This function is called by:
  1423 ;;		_TMR0_Initialize
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text12
  1428  00086E                     __ptext12:
  1429                           	opt stack 0
  1430  00086E                     _TMR0_StartTimer:
  1431                           	opt stack 24
  1432                           
  1433                           ;tmr0.c: 98: T0CONbits.TMR0ON = 1;
  1434                           
  1435                           ;incstack = 0
  1436  00086E  8ED5               	bsf	4053,7,c	;volatile
  1437  000870  0012               	return		;funcret
  1438  000872                     __end_of_TMR0_StartTimer:
  1439                           	opt stack 0
  1440                           tblptru	equ	0xFF8
  1441                           tblptrh	equ	0xFF7
  1442                           tblptrl	equ	0xFF6
  1443                           tablat	equ	0xFF5
  1444                           intcon	equ	0xFF2
  1445                           postinc0	equ	0xFEE
  1446                           wreg	equ	0xFE8
  1447                           status	equ	0xFD8
  1448                           
  1449 ;; *************** function _TMR0_SetInterruptHandler *****************
  1450 ;; Defined at:
  1451 ;;		line 162 in file "mcc_generated_files/tmr0.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  InterruptHan    2   14[COMRAM] PTR FTN()void 
  1454 ;;		 -> ring(1), TMR0_DefaultInterruptHandler(1), 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, status,0
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1470 ;;Total ram usage:        2 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    4
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_TMR0_Initialize
  1477 ;;		_main
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text13
  1482  000830                     __ptext13:
  1483                           	opt stack 0
  1484  000830                     _TMR0_SetInterruptHandler:
  1485                           	opt stack 26
  1486                           
  1487                           ;tmr0.c: 163: TMR0_InterruptHandler = InterruptHandler;
  1488                           
  1489                           ;incstack = 0
  1490  000830  C00F  F03A         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1491  000834  C010  F03B         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1492  000838  0012               	return		;funcret
  1493  00083A                     __end_of_TMR0_SetInterruptHandler:
  1494                           	opt stack 0
  1495                           tblptru	equ	0xFF8
  1496                           tblptrh	equ	0xFF7
  1497                           tblptrl	equ	0xFF6
  1498                           tablat	equ	0xFF5
  1499                           intcon	equ	0xFF2
  1500                           postinc0	equ	0xFEE
  1501                           wreg	equ	0xFE8
  1502                           status	equ	0xFD8
  1503                           
  1504 ;; *************** function _PIN_MANAGER_Initialize *****************
  1505 ;; Defined at:
  1506 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1524 ;;Total ram usage:        0 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    4
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_SYSTEM_Initialize
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text14
  1535  00066A                     __ptext14:
  1536                           	opt stack 0
  1537  00066A                     _PIN_MANAGER_Initialize:
  1538                           	opt stack 25
  1539                           
  1540                           ;pin_manager.c: 57: LATE = 0x00;
  1541                           
  1542                           ;incstack = 0
  1543  00066A  0E00               	movlw	0
  1544  00066C  6E8D               	movwf	3981,c	;volatile
  1545                           
  1546                           ;pin_manager.c: 58: LATD = 0x30;
  1547  00066E  0E30               	movlw	48
  1548  000670  6E8C               	movwf	3980,c	;volatile
  1549                           
  1550                           ;pin_manager.c: 59: LATA = 0x00;
  1551  000672  0E00               	movlw	0
  1552  000674  6E89               	movwf	3977,c	;volatile
  1553                           
  1554                           ;pin_manager.c: 60: LATF = 0x04;
  1555  000676  0E04               	movlw	4
  1556  000678  6E8E               	movwf	3982,c	;volatile
  1557                           
  1558                           ;pin_manager.c: 61: LATB = 0x00;
  1559  00067A  0E00               	movlw	0
  1560  00067C  6E8A               	movwf	3978,c	;volatile
  1561                           
  1562                           ;pin_manager.c: 62: LATG = 0x00;
  1563  00067E  0E00               	movlw	0
  1564  000680  6E8F               	movwf	3983,c	;volatile
  1565                           
  1566                           ;pin_manager.c: 63: LATC = 0x00;
  1567  000682  0E00               	movlw	0
  1568  000684  6E8B               	movwf	3979,c	;volatile
  1569                           
  1570                           ;pin_manager.c: 68: TRISE = 0xF7;
  1571  000686  0EF7               	movlw	247
  1572  000688  6E96               	movwf	3990,c	;volatile
  1573                           
  1574                           ;pin_manager.c: 69: TRISF = 0xFB;
  1575  00068A  0EFB               	movlw	251
  1576  00068C  6E97               	movwf	3991,c	;volatile
  1577                           
  1578                           ;pin_manager.c: 70: TRISA = 0xEF;
  1579  00068E  0EEF               	movlw	239
  1580  000690  6E92               	movwf	3986,c	;volatile
  1581                           
  1582                           ;pin_manager.c: 71: TRISG = 0x17;
  1583  000692  0E17               	movlw	23
  1584  000694  6E98               	movwf	3992,c	;volatile
  1585                           
  1586                           ;pin_manager.c: 72: TRISB = 0xDB;
  1587  000696  0EDB               	movlw	219
  1588  000698  6E93               	movwf	3987,c	;volatile
  1589                           
  1590                           ;pin_manager.c: 73: TRISC = 0xFF;
  1591  00069A  6894               	setf	3988,c	;volatile
  1592                           
  1593                           ;pin_manager.c: 74: TRISD = 0x8F;
  1594  00069C  0E8F               	movlw	143
  1595  00069E  6E95               	movwf	3989,c	;volatile
  1596                           
  1597                           ;pin_manager.c: 79: ANCON0 = 0xEF;
  1598  0006A0  0EEF               	movlw	239
  1599  0006A2  010F               	movlb	15	; () banked
  1600  0006A4  6F5D               	movwf	93,b	;volatile
  1601                           
  1602                           ;pin_manager.c: 80: ANCON1 = 0x7F;
  1603  0006A6  0E7F               	movlw	127
  1604  0006A8  010F               	movlb	15	; () banked
  1605  0006AA  6F5C               	movwf	92,b	;volatile
  1606                           
  1607                           ; BSR set to: 15
  1608                           ;pin_manager.c: 85: WPUB = 0xFF;
  1609  0006AC  010F               	movlb	15	; () banked
  1610  0006AE  695B               	setf	91,b	;volatile
  1611                           
  1612                           ; BSR set to: 15
  1613  0006B0  0012               	return		;funcret
  1614  0006B2                     __end_of_PIN_MANAGER_Initialize:
  1615                           	opt stack 0
  1616                           tblptru	equ	0xFF8
  1617                           tblptrh	equ	0xFF7
  1618                           tblptrl	equ	0xFF6
  1619                           tablat	equ	0xFF5
  1620                           intcon	equ	0xFF2
  1621                           postinc0	equ	0xFEE
  1622                           wreg	equ	0xFE8
  1623                           status	equ	0xFD8
  1624                           
  1625 ;; *************** function _OSCILLATOR_Initialize *****************
  1626 ;; Defined at:
  1627 ;;		line 125 in file "mcc_generated_files/mcc.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		wreg, status,2
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1645 ;;Total ram usage:        0 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:    4
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_SYSTEM_Initialize
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text15
  1656  0007EE                     __ptext15:
  1657                           	opt stack 0
  1658  0007EE                     _OSCILLATOR_Initialize:
  1659                           	opt stack 25
  1660                           
  1661                           ;mcc.c: 128: OSCCON = 0x60;
  1662                           
  1663                           ; BSR set to: 15
  1664                           ;incstack = 0
  1665  0007EE  0E60               	movlw	96
  1666  0007F0  6ED3               	movwf	4051,c	;volatile
  1667                           
  1668                           ;mcc.c: 130: OSCCON2 = 0x00;
  1669  0007F2  0E00               	movlw	0
  1670  0007F4  6ED2               	movwf	4050,c	;volatile
  1671                           
  1672                           ;mcc.c: 132: OSCTUNE = 0x00;
  1673  0007F6  0E00               	movlw	0
  1674  0007F8  6E9B               	movwf	3995,c	;volatile
  1675                           
  1676                           ;mcc.c: 134: REFOCON = 0x00;
  1677  0007FA  0E00               	movlw	0
  1678  0007FC  6E9A               	movwf	3994,c	;volatile
  1679  0007FE  0012               	return		;funcret
  1680  000800                     __end_of_OSCILLATOR_Initialize:
  1681                           	opt stack 0
  1682                           tblptru	equ	0xFF8
  1683                           tblptrh	equ	0xFF7
  1684                           tblptrl	equ	0xFF6
  1685                           tablat	equ	0xFF5
  1686                           intcon	equ	0xFF2
  1687                           postinc0	equ	0xFEE
  1688                           wreg	equ	0xFE8
  1689                           status	equ	0xFD8
  1690                           
  1691 ;; *************** function _INTERRUPT_Initialize *****************
  1692 ;; Defined at:
  1693 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;		None
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		None
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1711 ;;Total ram usage:        0 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    4
  1714 ;; This function calls:
  1715 ;;		Nothing
  1716 ;; This function is called by:
  1717 ;;		_SYSTEM_Initialize
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text16
  1722  000872                     __ptext16:
  1723                           	opt stack 0
  1724  000872                     _INTERRUPT_Initialize:
  1725                           	opt stack 25
  1726                           
  1727                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1728                           
  1729                           ;incstack = 0
  1730  000872  9ED0               	bcf	4048,7,c	;volatile
  1731  000874  0012               	return		;funcret
  1732  000876                     __end_of_INTERRUPT_Initialize:
  1733                           	opt stack 0
  1734                           tblptru	equ	0xFF8
  1735                           tblptrh	equ	0xFF7
  1736                           tblptrl	equ	0xFF6
  1737                           tablat	equ	0xFF5
  1738                           intcon	equ	0xFF2
  1739                           postinc0	equ	0xFEE
  1740                           wreg	equ	0xFE8
  1741                           status	equ	0xFD8
  1742                           
  1743 ;; *************** function _EUSART1_Initialize *****************
  1744 ;; Defined at:
  1745 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;		None
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;		None
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1763 ;;Total ram usage:        0 bytes
  1764 ;; Hardware stack levels used:    1
  1765 ;; Hardware stack levels required when called:    4
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_SYSTEM_Initialize
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text17
  1774  0007D8                     __ptext17:
  1775                           	opt stack 0
  1776  0007D8                     _EUSART1_Initialize:
  1777                           	opt stack 25
  1778                           
  1779                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  1780                           
  1781                           ;incstack = 0
  1782  0007D8  0E08               	movlw	8
  1783  0007DA  6EA7               	movwf	4007,c	;volatile
  1784                           
  1785                           ;eusart1.c: 63: RCSTA1 = 0x80;
  1786  0007DC  0E80               	movlw	128
  1787  0007DE  6EAB               	movwf	4011,c	;volatile
  1788                           
  1789                           ;eusart1.c: 66: TXSTA1 = 0x24;
  1790  0007E0  0E24               	movlw	36
  1791  0007E2  6EAC               	movwf	4012,c	;volatile
  1792                           
  1793                           ;eusart1.c: 69: SPBRG1 = 0x22;
  1794  0007E4  0E22               	movlw	34
  1795  0007E6  6EAF               	movwf	4015,c	;volatile
  1796                           
  1797                           ;eusart1.c: 72: SPBRGH1 = 0x00;
  1798  0007E8  0E00               	movlw	0
  1799  0007EA  6E7D               	movwf	3965,c	;volatile
  1800  0007EC  0012               	return		;funcret
  1801  0007EE                     __end_of_EUSART1_Initialize:
  1802                           	opt stack 0
  1803                           tblptru	equ	0xFF8
  1804                           tblptrh	equ	0xFF7
  1805                           tblptrl	equ	0xFF6
  1806                           tablat	equ	0xFF5
  1807                           intcon	equ	0xFF2
  1808                           postinc0	equ	0xFEE
  1809                           wreg	equ	0xFE8
  1810                           status	equ	0xFD8
  1811                           
  1812 ;; *************** function _ECAN_Initialize *****************
  1813 ;; Defined at:
  1814 ;;		line 63 in file "mcc_generated_files/ecan.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;		None
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;		None
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1830 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1831 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1832 ;;Total ram usage:        1 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    4
  1835 ;; This function calls:
  1836 ;;		Nothing
  1837 ;; This function is called by:
  1838 ;;		_SYSTEM_Initialize
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text18
  1843  0004FE                     __ptext18:
  1844                           	opt stack 0
  1845  0004FE                     _ECAN_Initialize:
  1846                           	opt stack 25
  1847                           
  1848                           ;ecan.c: 65: CANCON = 0x80;
  1849                           
  1850                           ;incstack = 0
  1851  0004FE  0E80               	movlw	128
  1852  000500  6E6F               	movwf	3951,c	;volatile
  1853  000502                     l1315:
  1854  000502  506E               	movf	3950,w,c	;volatile
  1855  000504  0BE0               	andlw	224
  1856  000506  0A80               	xorlw	128
  1857  000508  A4D8               	btfss	status,2,c
  1858  00050A  D7FB               	goto	l1315
  1859                           
  1860                           ;ecan.c: 71: ECANCON = 0x00;
  1861  00050C  0E00               	movlw	0
  1862  00050E  6E72               	movwf	3954,c	;volatile
  1863                           
  1864                           ;ecan.c: 85: RXM0EIDH = 0xFF;
  1865  000510  010E               	movlb	14	; () banked
  1866  000512  69FA               	setf	250,b	;volatile
  1867                           
  1868                           ; BSR set to: 14
  1869                           ;ecan.c: 86: RXM0EIDL = 0xFF;
  1870  000514  010E               	movlb	14	; () banked
  1871  000516  69FB               	setf	251,b	;volatile
  1872                           
  1873                           ; BSR set to: 14
  1874                           ;ecan.c: 87: RXM0SIDH = 0xFF;
  1875  000518  010E               	movlb	14	; () banked
  1876  00051A  69F8               	setf	248,b	;volatile
  1877                           
  1878                           ; BSR set to: 14
  1879                           ;ecan.c: 88: RXM0SIDL = 0xFF;
  1880  00051C  010E               	movlb	14	; () banked
  1881  00051E  69F9               	setf	249,b	;volatile
  1882                           
  1883                           ; BSR set to: 14
  1884                           ;ecan.c: 90: RXM1EIDH = 0xFF;
  1885  000520  010E               	movlb	14	; () banked
  1886  000522  69FE               	setf	254,b	;volatile
  1887                           
  1888                           ; BSR set to: 14
  1889                           ;ecan.c: 91: RXM1EIDL = 0xFF;
  1890  000524  010E               	movlb	14	; () banked
  1891  000526  69FF               	setf	255,b	;volatile
  1892                           
  1893                           ; BSR set to: 14
  1894                           ;ecan.c: 92: RXM1SIDH = 0xFF;
  1895  000528  010E               	movlb	14	; () banked
  1896  00052A  69FC               	setf	252,b	;volatile
  1897                           
  1898                           ; BSR set to: 14
  1899                           ;ecan.c: 93: RXM1SIDL = 0xFF;
  1900  00052C  010E               	movlb	14	; () banked
  1901  00052E  69FD               	setf	253,b	;volatile
  1902                           
  1903                           ;ecan.c: 99: RXF0EIDH = 0x00;
  1904  000530  0E00               	movlw	0
  1905  000532  010E               	movlb	14	; () banked
  1906  000534  6FE2               	movwf	226,b	;volatile
  1907                           
  1908                           ;ecan.c: 100: RXF0EIDL = 0x00;
  1909  000536  0E00               	movlw	0
  1910  000538  010E               	movlb	14	; () banked
  1911  00053A  6FE3               	movwf	227,b	;volatile
  1912                           
  1913                           ;ecan.c: 101: RXF0SIDH = 0x00;
  1914  00053C  0E00               	movlw	0
  1915  00053E  010E               	movlb	14	; () banked
  1916  000540  6FE0               	movwf	224,b	;volatile
  1917                           
  1918                           ;ecan.c: 102: RXF0SIDL = 0x00;
  1919  000542  0E00               	movlw	0
  1920  000544  010E               	movlb	14	; () banked
  1921  000546  6FE1               	movwf	225,b	;volatile
  1922                           
  1923                           ;ecan.c: 104: RXF1EIDH = 0x00;
  1924  000548  0E00               	movlw	0
  1925  00054A  010E               	movlb	14	; () banked
  1926  00054C  6FE6               	movwf	230,b	;volatile
  1927                           
  1928                           ;ecan.c: 105: RXF1EIDL = 0x00;
  1929  00054E  0E00               	movlw	0
  1930  000550  010E               	movlb	14	; () banked
  1931  000552  6FE7               	movwf	231,b	;volatile
  1932                           
  1933                           ;ecan.c: 106: RXF1SIDH = 0x00;
  1934  000554  0E00               	movlw	0
  1935  000556  010E               	movlb	14	; () banked
  1936  000558  6FE4               	movwf	228,b	;volatile
  1937                           
  1938                           ;ecan.c: 107: RXF1SIDL = 0x00;
  1939  00055A  0E00               	movlw	0
  1940  00055C  010E               	movlb	14	; () banked
  1941  00055E  6FE5               	movwf	229,b	;volatile
  1942                           
  1943                           ;ecan.c: 109: RXF2EIDH = 0x00;
  1944  000560  0E00               	movlw	0
  1945  000562  010E               	movlb	14	; () banked
  1946  000564  6FEA               	movwf	234,b	;volatile
  1947                           
  1948                           ;ecan.c: 110: RXF2EIDL = 0x00;
  1949  000566  0E00               	movlw	0
  1950  000568  010E               	movlb	14	; () banked
  1951  00056A  6FEB               	movwf	235,b	;volatile
  1952                           
  1953                           ;ecan.c: 111: RXF2SIDH = 0x00;
  1954  00056C  0E00               	movlw	0
  1955  00056E  010E               	movlb	14	; () banked
  1956  000570  6FE8               	movwf	232,b	;volatile
  1957                           
  1958                           ;ecan.c: 112: RXF2SIDL = 0x00;
  1959  000572  0E00               	movlw	0
  1960  000574  010E               	movlb	14	; () banked
  1961  000576  6FE9               	movwf	233,b	;volatile
  1962                           
  1963                           ;ecan.c: 114: RXF3EIDH = 0x00;
  1964  000578  0E00               	movlw	0
  1965  00057A  010E               	movlb	14	; () banked
  1966  00057C  6FEE               	movwf	238,b	;volatile
  1967                           
  1968                           ;ecan.c: 115: RXF3EIDL = 0x00;
  1969  00057E  0E00               	movlw	0
  1970  000580  010E               	movlb	14	; () banked
  1971  000582  6FEF               	movwf	239,b	;volatile
  1972                           
  1973                           ;ecan.c: 116: RXF3SIDH = 0x00;
  1974  000584  0E00               	movlw	0
  1975  000586  010E               	movlb	14	; () banked
  1976  000588  6FEC               	movwf	236,b	;volatile
  1977                           
  1978                           ;ecan.c: 117: RXF3SIDL = 0x00;
  1979  00058A  0E00               	movlw	0
  1980  00058C  010E               	movlb	14	; () banked
  1981  00058E  6FED               	movwf	237,b	;volatile
  1982                           
  1983                           ;ecan.c: 119: RXF4EIDH = 0x00;
  1984  000590  0E00               	movlw	0
  1985  000592  010E               	movlb	14	; () banked
  1986  000594  6FF2               	movwf	242,b	;volatile
  1987                           
  1988                           ;ecan.c: 120: RXF4EIDL = 0x00;
  1989  000596  0E00               	movlw	0
  1990  000598  010E               	movlb	14	; () banked
  1991  00059A  6FF3               	movwf	243,b	;volatile
  1992                           
  1993                           ;ecan.c: 121: RXF4SIDH = 0x00;
  1994  00059C  0E00               	movlw	0
  1995  00059E  010E               	movlb	14	; () banked
  1996  0005A0  6FF0               	movwf	240,b	;volatile
  1997                           
  1998                           ;ecan.c: 122: RXF4SIDL = 0x00;
  1999  0005A2  0E00               	movlw	0
  2000  0005A4  010E               	movlb	14	; () banked
  2001  0005A6  6FF1               	movwf	241,b	;volatile
  2002                           
  2003                           ;ecan.c: 124: RXF5EIDH = 0x00;
  2004  0005A8  0E00               	movlw	0
  2005  0005AA  010E               	movlb	14	; () banked
  2006  0005AC  6FF6               	movwf	246,b	;volatile
  2007                           
  2008                           ;ecan.c: 125: RXF5EIDL = 0x00;
  2009  0005AE  0E00               	movlw	0
  2010  0005B0  010E               	movlb	14	; () banked
  2011  0005B2  6FF7               	movwf	247,b	;volatile
  2012                           
  2013                           ;ecan.c: 126: RXF5SIDH = 0x00;
  2014  0005B4  0E00               	movlw	0
  2015  0005B6  010E               	movlb	14	; () banked
  2016  0005B8  6FF4               	movwf	244,b	;volatile
  2017                           
  2018                           ;ecan.c: 127: RXF5SIDL = 0x00;
  2019  0005BA  0E00               	movlw	0
  2020  0005BC  010E               	movlb	14	; () banked
  2021  0005BE  6FF5               	movwf	245,b	;volatile
  2022                           
  2023                           ;ecan.c: 142: BRGCON1 = 0x00;
  2024  0005C0  0E00               	movlw	0
  2025  0005C2  010E               	movlb	14	; () banked
  2026  0005C4  6F43               	movwf	67,b	;volatile
  2027                           
  2028                           ;ecan.c: 143: BRGCON2 = 0x98;
  2029  0005C6  0E98               	movlw	152
  2030  0005C8  010E               	movlb	14	; () banked
  2031  0005CA  6F44               	movwf	68,b	;volatile
  2032                           
  2033                           ;ecan.c: 144: BRGCON3 = 0x01;
  2034  0005CC  0E01               	movlw	1
  2035  0005CE  010E               	movlb	14	; () banked
  2036  0005D0  6F45               	movwf	69,b	;volatile
  2037                           
  2038                           ;ecan.c: 146: CANCON = 0x00;
  2039  0005D2  0E00               	movlw	0
  2040  0005D4  6E6F               	movwf	3951,c	;volatile
  2041  0005D6                     l1335:
  2042  0005D6  CF6E F00F          	movff	3950,??_ECAN_Initialize	;volatile
  2043  0005DA  0EE0               	movlw	224
  2044  0005DC  160F               	andwf	??_ECAN_Initialize,f,c
  2045  0005DE  B4D8               	btfsc	status,2,c
  2046  0005E0  0012               	return	
  2047  0005E2  D7F9               	goto	l1335
  2048  0005E4                     __end_of_ECAN_Initialize:
  2049                           	opt stack 0
  2050                           tblptru	equ	0xFF8
  2051                           tblptrh	equ	0xFF7
  2052                           tblptrl	equ	0xFF6
  2053                           tablat	equ	0xFF5
  2054                           intcon	equ	0xFF2
  2055                           postinc0	equ	0xFEE
  2056                           wreg	equ	0xFE8
  2057                           status	equ	0xFD8
  2058                           
  2059 ;; *************** function _EUSART1_Write *****************
  2060 ;; Defined at:
  2061 ;;		line 97 in file "mcc_generated_files/eusart1.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  txData          1    wreg     unsigned char 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  txData          1   14[COMRAM] unsigned char 
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2076 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2079 ;;Total ram usage:        1 bytes
  2080 ;; Hardware stack levels used:    1
  2081 ;; Hardware stack levels required when called:    4
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_main
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text19
  2090  000810                     __ptext19:
  2091                           	opt stack 0
  2092  000810                     _EUSART1_Write:
  2093                           	opt stack 26
  2094                           
  2095                           ;incstack = 0
  2096                           ;EUSART1_Write@txData stored from wreg
  2097  000810  6E0F               	movwf	EUSART1_Write@txData,c
  2098  000812                     l388:
  2099  000812  A89E               	btfss	3998,4,c	;volatile
  2100  000814  D7FE               	goto	l388
  2101                           
  2102                           ;eusart1.c: 101: }
  2103                           ;eusart1.c: 103: TXREG1 = txData;
  2104  000816  C00F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  2105  00081A  0012               	return		;funcret
  2106  00081C                     __end_of_EUSART1_Write:
  2107                           	opt stack 0
  2108                           tblptru	equ	0xFF8
  2109                           tblptrh	equ	0xFF7
  2110                           tblptrl	equ	0xFF6
  2111                           tablat	equ	0xFF5
  2112                           intcon	equ	0xFF2
  2113                           postinc0	equ	0xFEE
  2114                           wreg	equ	0xFE8
  2115                           status	equ	0xFD8
  2116                           
  2117 ;; *************** function _CAN_receive *****************
  2118 ;; Defined at:
  2119 ;;		line 239 in file "mcc_generated_files/ecan.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  tempCanMsg      2   33[COMRAM] PTR struct .
  2122 ;;		 -> canMessage(14), 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  returnValue     1   35[COMRAM] unsigned char 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      unsigned char 
  2127 ;; Registers used:
  2128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2137 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2138 ;;Total ram usage:        3 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    5
  2141 ;; This function calls:
  2142 ;;		_convertReg2ExtendedCANid
  2143 ;;		_convertReg2StandardCANid
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text20
  2150  00009A                     __ptext20:
  2151                           	opt stack 0
  2152  00009A                     _CAN_receive:
  2153                           	opt stack 25
  2154                           
  2155                           ;ecan.c: 240: unsigned char returnValue = 0;
  2156                           
  2157                           ;incstack = 0
  2158  00009A  0E00               	movlw	0
  2159  00009C  6E24               	movwf	CAN_receive@returnValue,c
  2160                           
  2161                           ;ecan.c: 244: {
  2162                           ;ecan.c: 247: if (RXB0CONbits.RXFUL != 0)
  2163  00009E  AE60               	btfss	3936,7,c	;volatile
  2164  0000A0  D083               	goto	l322
  2165                           
  2166                           ;ecan.c: 248: {
  2167                           ;ecan.c: 249: if ((RXB0SIDL & 0x08) == 0x08)
  2168  0000A2  A662               	btfss	3938,3,c	;volatile
  2169  0000A4  D01E               	goto	l1885
  2170                           
  2171                           ;ecan.c: 250: {
  2172                           ;ecan.c: 252: tempCanMsg->frame.idType = (unsigned char) 2;
  2173  0000A6  C022  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2174  0000AA  C023  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2175  0000AE  0E02               	movlw	2
  2176  0000B0  6EDF               	movwf	indf2,c
  2177                           
  2178                           ;ecan.c: 253: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB0EIDH, RXB0EIDL, RXB0SI
      +                          DH, RXB0SIDL);
  2179  0000B2  CF64 F00F          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  2180  0000B6  CF61 F010          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  2181  0000BA  CF62 F011          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  2182  0000BE  5063               	movf	3939,w,c	;volatile
  2183  0000C0  EC62  F001         	call	_convertReg2ExtendedCANid
  2184  0000C4  EE20 F001          	lfsr	2,1
  2185  0000C8  5022               	movf	CAN_receive@tempCanMsg,w,c
  2186  0000CA  26D9               	addwf	fsr2l,f,c
  2187  0000CC  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2188  0000CE  22DA               	addwfc	fsr2h,f,c
  2189  0000D0  C00F  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  2190  0000D4  C010  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  2191  0000D8  C011  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  2192  0000DC  C012  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  2193                           
  2194                           ;ecan.c: 254: } else {
  2195  0000E0  D019               	goto	l1889
  2196  0000E2                     l1885:
  2197                           
  2198                           ;ecan.c: 256: tempCanMsg->frame.idType = (unsigned char) 1;
  2199  0000E2  C022  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2200  0000E6  C023  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2201  0000EA  0E01               	movlw	1
  2202  0000EC  6EDF               	movwf	indf2,c
  2203                           
  2204                           ;ecan.c: 257: tempCanMsg->frame.id = convertReg2StandardCANid(RXB0SIDH, RXB0SIDL);
  2205  0000EE  CF62 F00F          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  2206  0000F2  5061               	movf	3937,w,c	;volatile
  2207  0000F4  ECF2  F002         	call	_convertReg2StandardCANid
  2208  0000F8  EE20 F001          	lfsr	2,1
  2209  0000FC  5022               	movf	CAN_receive@tempCanMsg,w,c
  2210  0000FE  26D9               	addwf	fsr2l,f,c
  2211  000100  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2212  000102  22DA               	addwfc	fsr2h,f,c
  2213  000104  C00F  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  2214  000108  C010  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  2215  00010C  C011  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  2216  000110  C012  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  2217  000114                     l1889:
  2218                           
  2219                           ;ecan.c: 258: }
  2220                           ;ecan.c: 260: tempCanMsg->frame.dlc = RXB0DLC;
  2221  000114  EE20 F005          	lfsr	2,5
  2222  000118  5022               	movf	CAN_receive@tempCanMsg,w,c
  2223  00011A  26D9               	addwf	fsr2l,f,c
  2224  00011C  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2225  00011E  22DA               	addwfc	fsr2h,f,c
  2226  000120  CF65 FFDF          	movff	3941,indf2	;volatile
  2227                           
  2228                           ;ecan.c: 261: tempCanMsg->frame.data0 = RXB0D0;
  2229  000124  EE20 F006          	lfsr	2,6
  2230  000128  5022               	movf	CAN_receive@tempCanMsg,w,c
  2231  00012A  26D9               	addwf	fsr2l,f,c
  2232  00012C  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2233  00012E  22DA               	addwfc	fsr2h,f,c
  2234  000130  CF66 FFDF          	movff	3942,indf2	;volatile
  2235                           
  2236                           ;ecan.c: 262: tempCanMsg->frame.data1 = RXB0D1;
  2237  000134  EE20 F007          	lfsr	2,7
  2238  000138  5022               	movf	CAN_receive@tempCanMsg,w,c
  2239  00013A  26D9               	addwf	fsr2l,f,c
  2240  00013C  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2241  00013E  22DA               	addwfc	fsr2h,f,c
  2242  000140  CF67 FFDF          	movff	3943,indf2	;volatile
  2243                           
  2244                           ;ecan.c: 263: tempCanMsg->frame.data2 = RXB0D2;
  2245  000144  EE20 F008          	lfsr	2,8
  2246  000148  5022               	movf	CAN_receive@tempCanMsg,w,c
  2247  00014A  26D9               	addwf	fsr2l,f,c
  2248  00014C  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2249  00014E  22DA               	addwfc	fsr2h,f,c
  2250  000150  CF68 FFDF          	movff	3944,indf2	;volatile
  2251                           
  2252                           ;ecan.c: 264: tempCanMsg->frame.data3 = RXB0D3;
  2253  000154  EE20 F009          	lfsr	2,9
  2254  000158  5022               	movf	CAN_receive@tempCanMsg,w,c
  2255  00015A  26D9               	addwf	fsr2l,f,c
  2256  00015C  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2257  00015E  22DA               	addwfc	fsr2h,f,c
  2258  000160  CF69 FFDF          	movff	3945,indf2	;volatile
  2259                           
  2260                           ;ecan.c: 265: tempCanMsg->frame.data4 = RXB0D4;
  2261  000164  EE20 F00A          	lfsr	2,10
  2262  000168  5022               	movf	CAN_receive@tempCanMsg,w,c
  2263  00016A  26D9               	addwf	fsr2l,f,c
  2264  00016C  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2265  00016E  22DA               	addwfc	fsr2h,f,c
  2266  000170  CF6A FFDF          	movff	3946,indf2	;volatile
  2267                           
  2268                           ;ecan.c: 266: tempCanMsg->frame.data5 = RXB0D5;
  2269  000174  EE20 F00B          	lfsr	2,11
  2270  000178  5022               	movf	CAN_receive@tempCanMsg,w,c
  2271  00017A  26D9               	addwf	fsr2l,f,c
  2272  00017C  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2273  00017E  22DA               	addwfc	fsr2h,f,c
  2274  000180  CF6B FFDF          	movff	3947,indf2	;volatile
  2275                           
  2276                           ;ecan.c: 267: tempCanMsg->frame.data6 = RXB0D6;
  2277  000184  EE20 F00C          	lfsr	2,12
  2278  000188  5022               	movf	CAN_receive@tempCanMsg,w,c
  2279  00018A  26D9               	addwf	fsr2l,f,c
  2280  00018C  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2281  00018E  22DA               	addwfc	fsr2h,f,c
  2282  000190  CF6C FFDF          	movff	3948,indf2	;volatile
  2283                           
  2284                           ;ecan.c: 268: tempCanMsg->frame.data7 = RXB0D7;
  2285  000194  EE20 F00D          	lfsr	2,13
  2286  000198  5022               	movf	CAN_receive@tempCanMsg,w,c
  2287  00019A  26D9               	addwf	fsr2l,f,c
  2288  00019C  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2289  00019E  22DA               	addwfc	fsr2h,f,c
  2290  0001A0  CF6D FFDF          	movff	3949,indf2	;volatile
  2291                           
  2292                           ;ecan.c: 269: RXB0CONbits.RXFUL = 0;
  2293  0001A4  9E60               	bcf	3936,7,c	;volatile
  2294  0001A6  D089               	goto	l1941
  2295  0001A8                     l322:
  2296  0001A8  010F               	movlb	15	; () banked
  2297  0001AA  AF30               	btfss	48,7,b	;volatile
  2298  0001AC  D088               	goto	l1943
  2299                           
  2300                           ; BSR set to: 15
  2301                           ;ecan.c: 272: {
  2302                           ;ecan.c: 273: if ((RXB1SIDL & 0x08) == 0x08)
  2303  0001AE  010F               	movlb	15	; () banked
  2304  0001B0  A732               	btfss	50,3,b	;volatile
  2305  0001B2  D01F               	goto	l1917
  2306                           
  2307                           ; BSR set to: 15
  2308                           ;ecan.c: 274: {
  2309                           ;ecan.c: 276: tempCanMsg->frame.idType = (unsigned char) 2;
  2310  0001B4  C022  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2311  0001B8  C023  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2312  0001BC  0E02               	movlw	2
  2313  0001BE  6EDF               	movwf	indf2,c
  2314                           
  2315                           ; BSR set to: 15
  2316                           ;ecan.c: 277: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB1EIDH, RXB1EIDL, RXB1SI
      +                          DH, RXB1SIDL);
  2317  0001C0  CF34 F00F          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  2318  0001C4  CF31 F010          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  2319  0001C8  CF32 F011          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  2320  0001CC  010F               	movlb	15	; () banked
  2321  0001CE  5133               	movf	51,w,b	;volatile
  2322  0001D0  EC62  F001         	call	_convertReg2ExtendedCANid
  2323  0001D4  EE20 F001          	lfsr	2,1
  2324  0001D8  5022               	movf	CAN_receive@tempCanMsg,w,c
  2325  0001DA  26D9               	addwf	fsr2l,f,c
  2326  0001DC  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2327  0001DE  22DA               	addwfc	fsr2h,f,c
  2328  0001E0  C00F  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  2329  0001E4  C010  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  2330  0001E8  C011  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  2331  0001EC  C012  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  2332                           
  2333                           ;ecan.c: 278: }
  2334  0001F0  D01A               	goto	l1921
  2335  0001F2                     l1917:
  2336                           
  2337                           ;ecan.c: 279: else
  2338                           ;ecan.c: 280: {
  2339                           ;ecan.c: 282: tempCanMsg->frame.idType = (unsigned char) 1;
  2340  0001F2  C022  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2341  0001F6  C023  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2342  0001FA  0E01               	movlw	1
  2343  0001FC  6EDF               	movwf	indf2,c
  2344                           
  2345                           ;ecan.c: 283: tempCanMsg->frame.id = convertReg2StandardCANid(RXB1SIDH, RXB1SIDL);
  2346  0001FE  CF32 F00F          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  2347  000202  010F               	movlb	15	; () banked
  2348  000204  5131               	movf	49,w,b	;volatile
  2349  000206  ECF2  F002         	call	_convertReg2StandardCANid
  2350  00020A  EE20 F001          	lfsr	2,1
  2351  00020E  5022               	movf	CAN_receive@tempCanMsg,w,c
  2352  000210  26D9               	addwf	fsr2l,f,c
  2353  000212  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2354  000214  22DA               	addwfc	fsr2h,f,c
  2355  000216  C00F  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  2356  00021A  C010  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  2357  00021E  C011  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  2358  000222  C012  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  2359  000226                     l1921:
  2360                           
  2361                           ;ecan.c: 284: }
  2362                           ;ecan.c: 286: tempCanMsg->frame.dlc = RXB1DLC;
  2363  000226  EE20 F005          	lfsr	2,5
  2364  00022A  5022               	movf	CAN_receive@tempCanMsg,w,c
  2365  00022C  26D9               	addwf	fsr2l,f,c
  2366  00022E  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2367  000230  22DA               	addwfc	fsr2h,f,c
  2368  000232  CF35 FFDF          	movff	3893,indf2	;volatile
  2369                           
  2370                           ;ecan.c: 287: tempCanMsg->frame.data0 = RXB1D0;
  2371  000236  EE20 F006          	lfsr	2,6
  2372  00023A  5022               	movf	CAN_receive@tempCanMsg,w,c
  2373  00023C  26D9               	addwf	fsr2l,f,c
  2374  00023E  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2375  000240  22DA               	addwfc	fsr2h,f,c
  2376  000242  CF36 FFDF          	movff	3894,indf2	;volatile
  2377                           
  2378                           ;ecan.c: 288: tempCanMsg->frame.data1 = RXB1D1;
  2379  000246  EE20 F007          	lfsr	2,7
  2380  00024A  5022               	movf	CAN_receive@tempCanMsg,w,c
  2381  00024C  26D9               	addwf	fsr2l,f,c
  2382  00024E  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2383  000250  22DA               	addwfc	fsr2h,f,c
  2384  000252  CF37 FFDF          	movff	3895,indf2	;volatile
  2385                           
  2386                           ;ecan.c: 289: tempCanMsg->frame.data2 = RXB1D2;
  2387  000256  EE20 F008          	lfsr	2,8
  2388  00025A  5022               	movf	CAN_receive@tempCanMsg,w,c
  2389  00025C  26D9               	addwf	fsr2l,f,c
  2390  00025E  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2391  000260  22DA               	addwfc	fsr2h,f,c
  2392  000262  CF38 FFDF          	movff	3896,indf2	;volatile
  2393                           
  2394                           ;ecan.c: 290: tempCanMsg->frame.data3 = RXB1D3;
  2395  000266  EE20 F009          	lfsr	2,9
  2396  00026A  5022               	movf	CAN_receive@tempCanMsg,w,c
  2397  00026C  26D9               	addwf	fsr2l,f,c
  2398  00026E  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2399  000270  22DA               	addwfc	fsr2h,f,c
  2400  000272  CF39 FFDF          	movff	3897,indf2	;volatile
  2401                           
  2402                           ;ecan.c: 291: tempCanMsg->frame.data4 = RXB1D4;
  2403  000276  EE20 F00A          	lfsr	2,10
  2404  00027A  5022               	movf	CAN_receive@tempCanMsg,w,c
  2405  00027C  26D9               	addwf	fsr2l,f,c
  2406  00027E  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2407  000280  22DA               	addwfc	fsr2h,f,c
  2408  000282  CF3A FFDF          	movff	3898,indf2	;volatile
  2409                           
  2410                           ;ecan.c: 292: tempCanMsg->frame.data5 = RXB1D5;
  2411  000286  EE20 F00B          	lfsr	2,11
  2412  00028A  5022               	movf	CAN_receive@tempCanMsg,w,c
  2413  00028C  26D9               	addwf	fsr2l,f,c
  2414  00028E  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2415  000290  22DA               	addwfc	fsr2h,f,c
  2416  000292  CF3B FFDF          	movff	3899,indf2	;volatile
  2417                           
  2418                           ;ecan.c: 293: tempCanMsg->frame.data6 = RXB1D6;
  2419  000296  EE20 F00C          	lfsr	2,12
  2420  00029A  5022               	movf	CAN_receive@tempCanMsg,w,c
  2421  00029C  26D9               	addwf	fsr2l,f,c
  2422  00029E  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2423  0002A0  22DA               	addwfc	fsr2h,f,c
  2424  0002A2  CF3C FFDF          	movff	3900,indf2	;volatile
  2425                           
  2426                           ;ecan.c: 294: tempCanMsg->frame.data7 = RXB1D7;
  2427  0002A6  EE20 F00D          	lfsr	2,13
  2428  0002AA  5022               	movf	CAN_receive@tempCanMsg,w,c
  2429  0002AC  26D9               	addwf	fsr2l,f,c
  2430  0002AE  5023               	movf	CAN_receive@tempCanMsg+1,w,c
  2431  0002B0  22DA               	addwfc	fsr2h,f,c
  2432  0002B2  CF3D FFDF          	movff	3901,indf2	;volatile
  2433                           
  2434                           ;ecan.c: 295: RXB1CONbits.RXFUL = 0;
  2435  0002B6  010F               	movlb	15	; () banked
  2436  0002B8  9F30               	bcf	48,7,b	;volatile
  2437  0002BA                     l1941:
  2438                           
  2439                           ; BSR set to: 15
  2440                           ;ecan.c: 296: returnValue = 1;
  2441  0002BA  0E01               	movlw	1
  2442  0002BC  6E24               	movwf	CAN_receive@returnValue,c
  2443  0002BE                     l1943:
  2444                           
  2445                           ;ecan.c: 297: }
  2446                           ;ecan.c: 300: PIR5bits.RXB1IF = 0;
  2447  0002BE  9277               	bcf	3959,1,c	;volatile
  2448                           
  2449                           ;ecan.c: 301: }
  2450                           ;ecan.c: 304: return (returnValue);
  2451  0002C0  5024               	movf	CAN_receive@returnValue,w,c
  2452  0002C2  0012               	return	
  2453  0002C4                     __end_of_CAN_receive:
  2454                           	opt stack 0
  2455                           tblptru	equ	0xFF8
  2456                           tblptrh	equ	0xFF7
  2457                           tblptrl	equ	0xFF6
  2458                           tablat	equ	0xFF5
  2459                           intcon	equ	0xFF2
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           indf2	equ	0xFDF
  2463                           postinc2	equ	0xFDE
  2464                           fsr2h	equ	0xFDA
  2465                           fsr2l	equ	0xFD9
  2466                           status	equ	0xFD8
  2467                           
  2468 ;; *************** function _convertReg2StandardCANid *****************
  2469 ;; Defined at:
  2470 ;;		line 385 in file "mcc_generated_files/ecan.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  tempRXBn_SID    1    wreg     unsigned char 
  2473 ;;  tempRXBn_SID    1   14[COMRAM] unsigned char 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  tempRXBn_SID    1   20[COMRAM] unsigned char 
  2476 ;;  ConvertedID     4   25[COMRAM] unsigned long 
  2477 ;;  returnValue     4   21[COMRAM] unsigned long 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  4   14[COMRAM] unsigned long 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2488 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2489 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2490 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2491 ;;Total ram usage:       15 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:    4
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_CAN_receive
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           	psect	text21
  2502  0005E4                     __ptext21:
  2503                           	opt stack 0
  2504  0005E4                     _convertReg2StandardCANid:
  2505                           	opt stack 25
  2506                           
  2507                           ;incstack = 0
  2508                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  2509  0005E4  6E15               	movwf	convertReg2StandardCANid@tempRXBn_SIDH,c
  2510                           
  2511                           ;ecan.c: 386: unsigned long returnValue = 0;
  2512  0005E6  0E00               	movlw	0
  2513  0005E8  6E16               	movwf	convertReg2StandardCANid@returnValue,c
  2514  0005EA  0E00               	movlw	0
  2515  0005EC  6E17               	movwf	convertReg2StandardCANid@returnValue+1,c
  2516  0005EE  0E00               	movlw	0
  2517  0005F0  6E18               	movwf	convertReg2StandardCANid@returnValue+2,c
  2518  0005F2  0E00               	movlw	0
  2519  0005F4  6E19               	movwf	convertReg2StandardCANid@returnValue+3,c
  2520                           
  2521                           ;ecan.c: 387: unsigned long ConvertedID;
  2522                           ;ecan.c: 391: ConvertedID = (tempRXBn_SIDH << 3);
  2523  0005F6  5015               	movf	convertReg2StandardCANid@tempRXBn_SIDH,w,c
  2524  0005F8  6E13               	movwf	??_convertReg2StandardCANid& (0+255),c
  2525  0005FA  6A14               	clrf	(??_convertReg2StandardCANid+1)& (0+255),c
  2526  0005FC  90D8               	bcf	status,0,c
  2527  0005FE  3613               	rlcf	??_convertReg2StandardCANid,f,c
  2528  000600  3614               	rlcf	??_convertReg2StandardCANid+1,f,c
  2529  000602  90D8               	bcf	status,0,c
  2530  000604  3613               	rlcf	??_convertReg2StandardCANid,f,c
  2531  000606  3614               	rlcf	??_convertReg2StandardCANid+1,f,c
  2532  000608  90D8               	bcf	status,0,c
  2533  00060A  3613               	rlcf	??_convertReg2StandardCANid,f,c
  2534  00060C  3614               	rlcf	??_convertReg2StandardCANid+1,f,c
  2535  00060E  C013  F01A         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  2536  000612  C014  F01B         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  2537  000616  0E00               	movlw	0
  2538  000618  BE1B               	btfsc	convertReg2StandardCANid@ConvertedID+1,7,c
  2539  00061A  0EFF               	movlw	-1
  2540  00061C  6E1C               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  2541  00061E  6E1D               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  2542                           
  2543                           ;ecan.c: 392: ConvertedID = ConvertedID + (tempRXBn_SIDL >> 5);
  2544  000620  C00F  F013         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  2545  000624  0E05               	movlw	5
  2546  000626  6E14               	movwf	(??_convertReg2StandardCANid+1)& (0+255),c
  2547  000628                     u425:
  2548  000628  90D8               	bcf	status,0,c
  2549  00062A  3213               	rrcf	??_convertReg2StandardCANid,f,c
  2550  00062C  2E14               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,c
  2551  00062E  D7FC               	goto	u425
  2552  000630  5013               	movf	??_convertReg2StandardCANid,w,c
  2553  000632  241A               	addwf	convertReg2StandardCANid@ConvertedID,w,c
  2554  000634  6E1A               	movwf	convertReg2StandardCANid@ConvertedID,c
  2555  000636  0E00               	movlw	0
  2556  000638  201B               	addwfc	convertReg2StandardCANid@ConvertedID+1,w,c
  2557  00063A  6E1B               	movwf	convertReg2StandardCANid@ConvertedID+1,c
  2558  00063C  0E00               	movlw	0
  2559  00063E  201C               	addwfc	convertReg2StandardCANid@ConvertedID+2,w,c
  2560  000640  6E1C               	movwf	convertReg2StandardCANid@ConvertedID+2,c
  2561  000642  0E00               	movlw	0
  2562  000644  201D               	addwfc	convertReg2StandardCANid@ConvertedID+3,w,c
  2563  000646  6E1D               	movwf	convertReg2StandardCANid@ConvertedID+3,c
  2564                           
  2565                           ;ecan.c: 393: returnValue = ConvertedID;
  2566  000648  C01A  F016         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  2567  00064C  C01B  F017         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  2568  000650  C01C  F018         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  2569  000654  C01D  F019         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  2570                           
  2571                           ;ecan.c: 394: return (returnValue);
  2572  000658  C016  F00F         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  2573  00065C  C017  F010         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  2574  000660  C018  F011         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  2575  000664  C019  F012         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  2576  000668  0012               	return	
  2577  00066A                     __end_of_convertReg2StandardCANid:
  2578                           	opt stack 0
  2579                           tblptru	equ	0xFF8
  2580                           tblptrh	equ	0xFF7
  2581                           tblptrl	equ	0xFF6
  2582                           tablat	equ	0xFF5
  2583                           intcon	equ	0xFF2
  2584                           postinc0	equ	0xFEE
  2585                           wreg	equ	0xFE8
  2586                           indf2	equ	0xFDF
  2587                           postinc2	equ	0xFDE
  2588                           fsr2h	equ	0xFDA
  2589                           fsr2l	equ	0xFD9
  2590                           status	equ	0xFD8
  2591                           
  2592 ;; *************** function _convertReg2ExtendedCANid *****************
  2593 ;; Defined at:
  2594 ;;		line 365 in file "mcc_generated_files/ecan.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  tempRXBn_EID    1    wreg     unsigned char 
  2597 ;;  tempRXBn_EID    1   14[COMRAM] unsigned char 
  2598 ;;  tempRXBn_SID    1   15[COMRAM] unsigned char 
  2599 ;;  tempRXBn_SID    1   16[COMRAM] unsigned char 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  tempRXBn_EID    1   22[COMRAM] unsigned char 
  2602 ;;  ConvertedID     4   29[COMRAM] unsigned long 
  2603 ;;  returnValue     4   23[COMRAM] unsigned long 
  2604 ;;  CAN_standard    1   28[COMRAM] unsigned char 
  2605 ;;  CAN_standard    1   27[COMRAM] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  4   14[COMRAM] unsigned long 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2615 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2616 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2617 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2618 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2619 ;;Total ram usage:       19 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    4
  2622 ;; This function calls:
  2623 ;;		Nothing
  2624 ;; This function is called by:
  2625 ;;		_CAN_receive
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           	psect	text22
  2630  0002C4                     __ptext22:
  2631                           	opt stack 0
  2632  0002C4                     _convertReg2ExtendedCANid:
  2633                           	opt stack 25
  2634                           
  2635                           ;incstack = 0
  2636                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  2637  0002C4  6E17               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH,c
  2638                           
  2639                           ;ecan.c: 366: unsigned long returnValue = 0;
  2640  0002C6  0E00               	movlw	0
  2641  0002C8  6E18               	movwf	convertReg2ExtendedCANid@returnValue,c
  2642  0002CA  0E00               	movlw	0
  2643  0002CC  6E19               	movwf	convertReg2ExtendedCANid@returnValue+1,c
  2644  0002CE  0E00               	movlw	0
  2645  0002D0  6E1A               	movwf	convertReg2ExtendedCANid@returnValue+2,c
  2646  0002D2  0E00               	movlw	0
  2647  0002D4  6E1B               	movwf	convertReg2ExtendedCANid@returnValue+3,c
  2648                           
  2649                           ;ecan.c: 367: unsigned long ConvertedID = 0;
  2650  0002D6  0E00               	movlw	0
  2651  0002D8  6E1E               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2652  0002DA  0E00               	movlw	0
  2653  0002DC  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2654  0002DE  0E00               	movlw	0
  2655  0002E0  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2656  0002E2  0E00               	movlw	0
  2657  0002E4  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2658                           
  2659                           ;ecan.c: 368: unsigned char CAN_standardLo_ID_lo2bits;
  2660                           ;ecan.c: 369: unsigned char CAN_standardLo_ID_hi3bits;
  2661                           ;ecan.c: 371: CAN_standardLo_ID_lo2bits = (tempRXBn_SIDL & 0x03);
  2662  0002E6  5011               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  2663  0002E8  0B03               	andlw	3
  2664  0002EA  6E1C               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,c
  2665                           
  2666                           ;ecan.c: 372: CAN_standardLo_ID_hi3bits = (tempRXBn_SIDL >> 5);
  2667  0002EC  3811               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  2668  0002EE  42E8               	rrncf	wreg,f,c
  2669  0002F0  0B07               	andlw	7
  2670  0002F2  6E1D               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,c
  2671                           
  2672                           ;ecan.c: 373: ConvertedID = (tempRXBn_SIDH << 3);
  2673  0002F4  5010               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH,w,c
  2674  0002F6  6E13               	movwf	??_convertReg2ExtendedCANid& (0+255),c
  2675  0002F8  6A14               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),c
  2676  0002FA  90D8               	bcf	status,0,c
  2677  0002FC  3613               	rlcf	??_convertReg2ExtendedCANid,f,c
  2678  0002FE  3614               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2679  000300  90D8               	bcf	status,0,c
  2680  000302  3613               	rlcf	??_convertReg2ExtendedCANid,f,c
  2681  000304  3614               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2682  000306  90D8               	bcf	status,0,c
  2683  000308  3613               	rlcf	??_convertReg2ExtendedCANid,f,c
  2684  00030A  3614               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2685  00030C  C013  F01E         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2686  000310  C014  F01F         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2687  000314  0E00               	movlw	0
  2688  000316  BE1F               	btfsc	convertReg2ExtendedCANid@ConvertedID+1,7,c
  2689  000318  0EFF               	movlw	-1
  2690  00031A  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2691  00031C  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2692                           
  2693                           ;ecan.c: 374: ConvertedID = ConvertedID + CAN_standardLo_ID_hi3bits;
  2694  00031E  501D               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits,w,c
  2695  000320  241E               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2696  000322  6E1E               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2697  000324  0E00               	movlw	0
  2698  000326  201F               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2699  000328  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2700  00032A  0E00               	movlw	0
  2701  00032C  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2702  00032E  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2703  000330  0E00               	movlw	0
  2704  000332  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2705  000334  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2706                           
  2707                           ;ecan.c: 375: ConvertedID = (ConvertedID << 2);
  2708  000336  C01E  F013         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  2709  00033A  C01F  F014         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  2710  00033E  C020  F015         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  2711  000342  C021  F016         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  2712  000346  0E02               	movlw	2
  2713  000348                     u415:
  2714  000348  90D8               	bcf	status,0,c
  2715  00034A  3613               	rlcf	??_convertReg2ExtendedCANid,f,c
  2716  00034C  3614               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2717  00034E  3615               	rlcf	??_convertReg2ExtendedCANid+2,f,c
  2718  000350  3616               	rlcf	??_convertReg2ExtendedCANid+3,f,c
  2719  000352  2EE8               	decfsz	wreg,f,c
  2720  000354  D7F9               	goto	u415
  2721  000356  C013  F01E         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2722  00035A  C014  F01F         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2723  00035E  C015  F020         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2724  000362  C016  F021         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2725                           
  2726                           ;ecan.c: 376: ConvertedID = ConvertedID + CAN_standardLo_ID_lo2bits;
  2727  000366  501C               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits,w,c
  2728  000368  241E               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2729  00036A  6E1E               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2730  00036C  0E00               	movlw	0
  2731  00036E  201F               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2732  000370  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2733  000372  0E00               	movlw	0
  2734  000374  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2735  000376  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2736  000378  0E00               	movlw	0
  2737  00037A  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2738  00037C  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2739                           
  2740                           ;ecan.c: 377: ConvertedID = (ConvertedID << 8);
  2741  00037E  C01E  F014         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  2742  000382  C01F  F015         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  2743  000386  C020  F016         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  2744  00038A  6A13               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  2745  00038C  C013  F01E         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2746  000390  C014  F01F         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2747  000394  C015  F020         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2748  000398  C016  F021         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2749                           
  2750                           ;ecan.c: 378: ConvertedID = ConvertedID + tempRXBn_EIDH;
  2751  00039C  5017               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH,w,c
  2752  00039E  241E               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2753  0003A0  6E1E               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2754  0003A2  0E00               	movlw	0
  2755  0003A4  201F               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2756  0003A6  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2757  0003A8  0E00               	movlw	0
  2758  0003AA  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2759  0003AC  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2760  0003AE  0E00               	movlw	0
  2761  0003B0  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2762  0003B2  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2763                           
  2764                           ;ecan.c: 379: ConvertedID = (ConvertedID << 8);
  2765  0003B4  C01E  F014         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  2766  0003B8  C01F  F015         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  2767  0003BC  C020  F016         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  2768  0003C0  6A13               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  2769  0003C2  C013  F01E         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2770  0003C6  C014  F01F         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2771  0003CA  C015  F020         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2772  0003CE  C016  F021         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2773                           
  2774                           ;ecan.c: 380: ConvertedID = ConvertedID + tempRXBn_EIDL;
  2775  0003D2  500F               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL,w,c
  2776  0003D4  241E               	addwf	convertReg2ExtendedCANid@ConvertedID,w,c
  2777  0003D6  6E1E               	movwf	convertReg2ExtendedCANid@ConvertedID,c
  2778  0003D8  0E00               	movlw	0
  2779  0003DA  201F               	addwfc	convertReg2ExtendedCANid@ConvertedID+1,w,c
  2780  0003DC  6E1F               	movwf	convertReg2ExtendedCANid@ConvertedID+1,c
  2781  0003DE  0E00               	movlw	0
  2782  0003E0  2020               	addwfc	convertReg2ExtendedCANid@ConvertedID+2,w,c
  2783  0003E2  6E20               	movwf	convertReg2ExtendedCANid@ConvertedID+2,c
  2784  0003E4  0E00               	movlw	0
  2785  0003E6  2021               	addwfc	convertReg2ExtendedCANid@ConvertedID+3,w,c
  2786  0003E8  6E21               	movwf	convertReg2ExtendedCANid@ConvertedID+3,c
  2787                           
  2788                           ;ecan.c: 381: returnValue = ConvertedID;
  2789  0003EA  C01E  F018         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  2790  0003EE  C01F  F019         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  2791  0003F2  C020  F01A         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  2792  0003F6  C021  F01B         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  2793                           
  2794                           ;ecan.c: 382: return (returnValue);
  2795  0003FA  C018  F00F         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  2796  0003FE  C019  F010         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  2797  000402  C01A  F011         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  2798  000406  C01B  F012         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  2799  00040A  0012               	return	
  2800  00040C                     __end_of_convertReg2ExtendedCANid:
  2801                           	opt stack 0
  2802                           tblptru	equ	0xFF8
  2803                           tblptrh	equ	0xFF7
  2804                           tblptrl	equ	0xFF6
  2805                           tablat	equ	0xFF5
  2806                           intcon	equ	0xFF2
  2807                           postinc0	equ	0xFEE
  2808                           wreg	equ	0xFE8
  2809                           indf2	equ	0xFDF
  2810                           postinc2	equ	0xFDE
  2811                           fsr2h	equ	0xFDA
  2812                           fsr2l	equ	0xFD9
  2813                           status	equ	0xFD8
  2814                           
  2815 ;; *************** function _INTERRUPT_InterruptManager *****************
  2816 ;; Defined at:
  2817 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;		None
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;		None
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2833 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2834 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2835 ;;Total ram usage:       14 bytes
  2836 ;; Hardware stack levels used:    1
  2837 ;; Hardware stack levels required when called:    3
  2838 ;; This function calls:
  2839 ;;		_TMR0_ISR
  2840 ;;		_TMR1_ISR
  2841 ;; This function is called by:
  2842 ;;		Interrupt level 2
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	intcode
  2847  000008                     __pintcode:
  2848                           	opt stack 0
  2849  000008                     _INTERRUPT_InterruptManager:
  2850                           	opt stack 24
  2851                           
  2852                           ;incstack = 0
  2853  000008  8241               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2854  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
  2855  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2856  000012  CFE9 F003          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2857  000016  CFEA F004          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2858  00001A  CFE1 F005          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2859  00001E  CFE2 F006          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2860  000022  CFD9 F007          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2861  000026  CFDA F008          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2862  00002A  CFF3 F009          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2863  00002E  CFF4 F00A          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2864  000032  CFF6 F00B          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2865  000036  CFF7 F00C          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2866  00003A  CFF8 F00D          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2867  00003E  CFF5 F00E          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2868                           
  2869                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2870  000042  BAF2               	btfsc	intcon,5,c	;volatile
  2871  000044  A4F2               	btfss	intcon,2,c	;volatile
  2872  000046  D003               	goto	i2l481
  2873                           
  2874                           ;interrupt_manager.c: 61: {
  2875                           ;interrupt_manager.c: 62: TMR0_ISR();
  2876  000048  EC00  F004         	call	_TMR0_ISR	;wreg free
  2877                           
  2878                           ;interrupt_manager.c: 63: }
  2879  00004C  D006               	goto	i2l485
  2880  00004E                     i2l481:
  2881                           
  2882                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
  2883  00004E  BCF2               	btfsc	intcon,6,c	;volatile
  2884  000050  A09D               	btfss	3997,0,c	;volatile
  2885  000052  D003               	goto	i2l485
  2886  000054  B09E               	btfsc	3998,0,c	;volatile
  2887                           
  2888                           ;interrupt_manager.c: 65: {
  2889                           ;interrupt_manager.c: 66: TMR1_ISR();
  2890  000056  ECA9  F003         	call	_TMR1_ISR	;wreg free
  2891  00005A                     i2l485:
  2892  00005A  C00E  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2893  00005E  C00D  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2894  000062  C00C  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2895  000066  C00B  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2896  00006A  C00A  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2897  00006E  C009  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2898  000072  C008  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2899  000076  C007  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2900  00007A  C006  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2901  00007E  C005  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2902  000082  C004  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2903  000086  C003  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2904  00008A  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2905  00008E  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2906  000092  9241               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2907  000094  0011               	retfie		f
  2908  000096                     __end_of_INTERRUPT_InterruptManager:
  2909                           	opt stack 0
  2910                           pclatu	equ	0xFFB
  2911                           pclath	equ	0xFFA
  2912                           tblptru	equ	0xFF8
  2913                           tblptrh	equ	0xFF7
  2914                           tblptrl	equ	0xFF6
  2915                           tablat	equ	0xFF5
  2916                           prodh	equ	0xFF4
  2917                           prodl	equ	0xFF3
  2918                           intcon	equ	0xFF2
  2919                           postinc0	equ	0xFEE
  2920                           fsr0h	equ	0xFEA
  2921                           fsr0l	equ	0xFE9
  2922                           wreg	equ	0xFE8
  2923                           fsr1h	equ	0xFE2
  2924                           fsr1l	equ	0xFE1
  2925                           indf2	equ	0xFDF
  2926                           postinc2	equ	0xFDE
  2927                           fsr2h	equ	0xFDA
  2928                           fsr2l	equ	0xFD9
  2929                           status	equ	0xFD8
  2930                           
  2931 ;; *************** function _TMR1_ISR *****************
  2932 ;; Defined at:
  2933 ;;		line 160 in file "mcc_generated_files/tmr1.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;		None
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2951 ;;Total ram usage:        0 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; Hardware stack levels required when called:    2
  2954 ;; This function calls:
  2955 ;;		_TMR1_CallBack
  2956 ;; This function is called by:
  2957 ;;		_INTERRUPT_InterruptManager
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text24
  2962  000752                     __ptext24:
  2963                           	opt stack 0
  2964  000752                     _TMR1_ISR:
  2965                           	opt stack 24
  2966                           
  2967                           ;tmr1.c: 162: static volatile unsigned int CountCallBack = 0;
  2968                           ;tmr1.c: 165: PIR1bits.TMR1IF = 0;
  2969                           
  2970                           ;incstack = 0
  2971  000752  909E               	bcf	3998,0,c	;volatile
  2972                           
  2973                           ;tmr1.c: 167: TMR1H = (timer1ReloadVal >> 8);
  2974  000754  503F               	movf	_timer1ReloadVal+1,w,c	;volatile
  2975  000756  6ECF               	movwf	4047,c	;volatile
  2976                           
  2977                           ;tmr1.c: 168: TMR1L = timer1ReloadVal;
  2978  000758  C03E  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  2979                           
  2980                           ;tmr1.c: 171: if (++CountCallBack >= 50)
  2981  00075C  4A27               	infsnz	TMR1_ISR@CountCallBack,f,c	;volatile
  2982  00075E  2A28               	incf	TMR1_ISR@CountCallBack+1,f,c	;volatile
  2983  000760  5028               	movf	TMR1_ISR@CountCallBack+1,w,c	;volatile
  2984  000762  E104               	bnz	i2u14_40
  2985  000764  0E32               	movlw	50
  2986  000766  5C27               	subwf	TMR1_ISR@CountCallBack,w,c	;volatile
  2987  000768  A0D8               	btfss	status,0,c
  2988  00076A  0012               	return	
  2989  00076C                     i2u14_40:
  2990                           
  2991                           ;tmr1.c: 172: {
  2992                           ;tmr1.c: 174: TMR1_CallBack();
  2993  00076C  ECBD  F003         	call	_TMR1_CallBack	;wreg free
  2994                           
  2995                           ;tmr1.c: 177: CountCallBack = 0;
  2996  000770  0E00               	movlw	0
  2997  000772  6E28               	movwf	TMR1_ISR@CountCallBack+1,c	;volatile
  2998  000774  0E00               	movlw	0
  2999  000776  6E27               	movwf	TMR1_ISR@CountCallBack,c	;volatile
  3000  000778  0012               	return	
  3001  00077A                     __end_of_TMR1_ISR:
  3002                           	opt stack 0
  3003                           pclatu	equ	0xFFB
  3004                           pclath	equ	0xFFA
  3005                           tblptru	equ	0xFF8
  3006                           tblptrh	equ	0xFF7
  3007                           tblptrl	equ	0xFF6
  3008                           tablat	equ	0xFF5
  3009                           prodh	equ	0xFF4
  3010                           prodl	equ	0xFF3
  3011                           intcon	equ	0xFF2
  3012                           postinc0	equ	0xFEE
  3013                           fsr0h	equ	0xFEA
  3014                           fsr0l	equ	0xFE9
  3015                           wreg	equ	0xFE8
  3016                           fsr1h	equ	0xFE2
  3017                           fsr1l	equ	0xFE1
  3018                           indf2	equ	0xFDF
  3019                           postinc2	equ	0xFDE
  3020                           fsr2h	equ	0xFDA
  3021                           fsr2l	equ	0xFD9
  3022                           status	equ	0xFD8
  3023                           
  3024 ;; *************** function _TMR1_CallBack *****************
  3025 ;; Defined at:
  3026 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;		None
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3044 ;;Total ram usage:        0 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    1
  3047 ;; This function calls:
  3048 ;;		Absolute function
  3049 ;;		_TMR1_DefaultInterruptHandler
  3050 ;;		_can_receive_timeout
  3051 ;; This function is called by:
  3052 ;;		_TMR1_ISR
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text25
  3057  00077A                     __ptext25:
  3058                           	opt stack 0
  3059  00077A                     _TMR1_CallBack:
  3060                           	opt stack 24
  3061                           
  3062                           ;tmr1.c: 184: if(TMR1_InterruptHandler)
  3063                           
  3064                           ;incstack = 0
  3065  00077A  503C               	movf	_TMR1_InterruptHandler,w,c
  3066  00077C  103D               	iorwf	_TMR1_InterruptHandler+1,w,c
  3067  00077E  B4D8               	btfsc	status,2,c
  3068  000780  0012               	return	
  3069                           
  3070                           ;tmr1.c: 185: {
  3071                           ;tmr1.c: 186: TMR1_InterruptHandler();
  3072  000782  D801               	call	i2u6_48
  3073  000784  0012               	return	
  3074  000786                     i2u6_48:
  3075  000786  0005               	push	
  3076  000788  6EFA               	movwf	pclath,c
  3077  00078A  503C               	movf	_TMR1_InterruptHandler,w,c
  3078  00078C  6EFD               	movwf	tosl,c
  3079  00078E  503D               	movf	_TMR1_InterruptHandler+1,w,c
  3080  000790  6EFE               	movwf	tosh,c
  3081  000792  50F8               	movf	tblptru,w,c
  3082  000794  6EFF               	movwf	tosu,c
  3083  000796  50FA               	movf	pclath,w,c
  3084  000798  0012               	return		;indir
  3085  00079A                     __end_of_TMR1_CallBack:
  3086                           	opt stack 0
  3087                           tosu	equ	0xFFF
  3088                           tosh	equ	0xFFE
  3089                           tosl	equ	0xFFD
  3090                           pclatu	equ	0xFFB
  3091                           pclath	equ	0xFFA
  3092                           tblptru	equ	0xFF8
  3093                           tblptrh	equ	0xFF7
  3094                           tblptrl	equ	0xFF6
  3095                           tablat	equ	0xFF5
  3096                           prodh	equ	0xFF4
  3097                           prodl	equ	0xFF3
  3098                           intcon	equ	0xFF2
  3099                           postinc0	equ	0xFEE
  3100                           fsr0h	equ	0xFEA
  3101                           fsr0l	equ	0xFE9
  3102                           wreg	equ	0xFE8
  3103                           fsr1h	equ	0xFE2
  3104                           fsr1l	equ	0xFE1
  3105                           indf2	equ	0xFDF
  3106                           postinc2	equ	0xFDE
  3107                           fsr2h	equ	0xFDA
  3108                           fsr2l	equ	0xFD9
  3109                           status	equ	0xFD8
  3110                           
  3111 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  3112 ;; Defined at:
  3113 ;;		line 194 in file "mcc_generated_files/tmr1.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;		None
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;		None
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  1    wreg      void 
  3120 ;; Registers used:
  3121 ;;		None
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3131 ;;Total ram usage:        0 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; This function calls:
  3134 ;;		Nothing
  3135 ;; This function is called by:
  3136 ;;		_TMR1_Initialize
  3137 ;;		_TMR1_CallBack
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text26
  3142  000876                     __ptext26:
  3143                           	opt stack 0
  3144  000876                     _TMR1_DefaultInterruptHandler:
  3145                           	opt stack 24
  3146                           
  3147                           ;incstack = 0
  3148  000876  0012               	return		;funcret
  3149  000878                     __end_of_TMR1_DefaultInterruptHandler:
  3150                           	opt stack 0
  3151                           tosu	equ	0xFFF
  3152                           tosh	equ	0xFFE
  3153                           tosl	equ	0xFFD
  3154                           pclatu	equ	0xFFB
  3155                           pclath	equ	0xFFA
  3156                           tblptru	equ	0xFF8
  3157                           tblptrh	equ	0xFF7
  3158                           tblptrl	equ	0xFF6
  3159                           tablat	equ	0xFF5
  3160                           prodh	equ	0xFF4
  3161                           prodl	equ	0xFF3
  3162                           intcon	equ	0xFF2
  3163                           postinc0	equ	0xFEE
  3164                           fsr0h	equ	0xFEA
  3165                           fsr0l	equ	0xFE9
  3166                           wreg	equ	0xFE8
  3167                           fsr1h	equ	0xFE2
  3168                           fsr1l	equ	0xFE1
  3169                           indf2	equ	0xFDF
  3170                           postinc2	equ	0xFDE
  3171                           fsr2h	equ	0xFDA
  3172                           fsr2l	equ	0xFD9
  3173                           status	equ	0xFD8
  3174                           
  3175 ;; *************** function _can_receive_timeout *****************
  3176 ;; Defined at:
  3177 ;;		line 45 in file "main.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;		None
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      void 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3195 ;;Total ram usage:        0 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; This function calls:
  3198 ;;		Nothing
  3199 ;; This function is called by:
  3200 ;;		_main
  3201 ;;		_TMR1_CallBack
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text27
  3206  00085A                     __ptext27:
  3207                           	opt stack 0
  3208  00085A                     _can_receive_timeout:
  3209                           	opt stack 24
  3210                           
  3211                           ;main.c: 47: CAN_timeout = 1;
  3212                           
  3213                           ;incstack = 0
  3214  00085A  0E01               	movlw	1
  3215  00085C  6E40               	movwf	_CAN_timeout,c
  3216  00085E  0012               	return		;funcret
  3217  000860                     __end_of_can_receive_timeout:
  3218                           	opt stack 0
  3219                           tosu	equ	0xFFF
  3220                           tosh	equ	0xFFE
  3221                           tosl	equ	0xFFD
  3222                           pclatu	equ	0xFFB
  3223                           pclath	equ	0xFFA
  3224                           tblptru	equ	0xFF8
  3225                           tblptrh	equ	0xFF7
  3226                           tblptrl	equ	0xFF6
  3227                           tablat	equ	0xFF5
  3228                           prodh	equ	0xFF4
  3229                           prodl	equ	0xFF3
  3230                           intcon	equ	0xFF2
  3231                           postinc0	equ	0xFEE
  3232                           fsr0h	equ	0xFEA
  3233                           fsr0l	equ	0xFE9
  3234                           wreg	equ	0xFE8
  3235                           fsr1h	equ	0xFE2
  3236                           fsr1l	equ	0xFE1
  3237                           indf2	equ	0xFDF
  3238                           postinc2	equ	0xFDE
  3239                           fsr2h	equ	0xFDA
  3240                           fsr2l	equ	0xFD9
  3241                           status	equ	0xFD8
  3242                           
  3243 ;; *************** function _TMR0_ISR *****************
  3244 ;; Defined at:
  3245 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;		None
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3263 ;;Total ram usage:        0 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    2
  3266 ;; This function calls:
  3267 ;;		_TMR0_CallBack
  3268 ;; This function is called by:
  3269 ;;		_INTERRUPT_InterruptManager
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text28
  3274  000800                     __ptext28:
  3275                           	opt stack 0
  3276  000800                     _TMR0_ISR:
  3277                           	opt stack 24
  3278                           
  3279                           ;tmr0.c: 138: INTCONbits.TMR0IF = 0;
  3280                           
  3281                           ;incstack = 0
  3282  000800  94F2               	bcf	intcon,2,c	;volatile
  3283                           
  3284                           ;tmr0.c: 142: TMR0H = timer0ReloadVal >> 8;
  3285  000802  5039               	movf	_timer0ReloadVal+1,w,c	;volatile
  3286  000804  6ED7               	movwf	4055,c	;volatile
  3287                           
  3288                           ;tmr0.c: 143: TMR0L = (uint8_t) timer0ReloadVal;
  3289  000806  C038  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  3290                           
  3291                           ;tmr0.c: 147: TMR0_CallBack();
  3292  00080A  ECCD  F003         	call	_TMR0_CallBack	;wreg free
  3293  00080E  0012               	return		;funcret
  3294  000810                     __end_of_TMR0_ISR:
  3295                           	opt stack 0
  3296                           tosu	equ	0xFFF
  3297                           tosh	equ	0xFFE
  3298                           tosl	equ	0xFFD
  3299                           pclatu	equ	0xFFB
  3300                           pclath	equ	0xFFA
  3301                           tblptru	equ	0xFF8
  3302                           tblptrh	equ	0xFF7
  3303                           tblptrl	equ	0xFF6
  3304                           tablat	equ	0xFF5
  3305                           prodh	equ	0xFF4
  3306                           prodl	equ	0xFF3
  3307                           intcon	equ	0xFF2
  3308                           postinc0	equ	0xFEE
  3309                           fsr0h	equ	0xFEA
  3310                           fsr0l	equ	0xFE9
  3311                           wreg	equ	0xFE8
  3312                           fsr1h	equ	0xFE2
  3313                           fsr1l	equ	0xFE1
  3314                           indf2	equ	0xFDF
  3315                           postinc2	equ	0xFDE
  3316                           fsr2h	equ	0xFDA
  3317                           fsr2l	equ	0xFD9
  3318                           status	equ	0xFD8
  3319                           
  3320 ;; *************** function _TMR0_CallBack *****************
  3321 ;; Defined at:
  3322 ;;		line 152 in file "mcc_generated_files/tmr0.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;		None
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;		None
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1    wreg      void 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3340 ;;Total ram usage:        0 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    1
  3343 ;; This function calls:
  3344 ;;		Absolute function
  3345 ;;		_TMR0_DefaultInterruptHandler
  3346 ;;		_ring
  3347 ;; This function is called by:
  3348 ;;		_TMR0_ISR
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text29
  3353  00079A                     __ptext29:
  3354                           	opt stack 0
  3355  00079A                     _TMR0_CallBack:
  3356                           	opt stack 24
  3357                           
  3358                           ;tmr0.c: 156: if(TMR0_InterruptHandler)
  3359                           
  3360                           ;incstack = 0
  3361  00079A  503A               	movf	_TMR0_InterruptHandler,w,c
  3362  00079C  103B               	iorwf	_TMR0_InterruptHandler+1,w,c
  3363  00079E  B4D8               	btfsc	status,2,c
  3364  0007A0  0012               	return	
  3365                           
  3366                           ;tmr0.c: 157: {
  3367                           ;tmr0.c: 158: TMR0_InterruptHandler();
  3368  0007A2  D801               	call	i2u8_48
  3369  0007A4  0012               	return	
  3370  0007A6                     i2u8_48:
  3371  0007A6  0005               	push	
  3372  0007A8  6EFA               	movwf	pclath,c
  3373  0007AA  503A               	movf	_TMR0_InterruptHandler,w,c
  3374  0007AC  6EFD               	movwf	tosl,c
  3375  0007AE  503B               	movf	_TMR0_InterruptHandler+1,w,c
  3376  0007B0  6EFE               	movwf	tosh,c
  3377  0007B2  50F8               	movf	tblptru,w,c
  3378  0007B4  6EFF               	movwf	tosu,c
  3379  0007B6  50FA               	movf	pclath,w,c
  3380  0007B8  0012               	return		;indir
  3381  0007BA                     __end_of_TMR0_CallBack:
  3382                           	opt stack 0
  3383                           tosu	equ	0xFFF
  3384                           tosh	equ	0xFFE
  3385                           tosl	equ	0xFFD
  3386                           pclatu	equ	0xFFB
  3387                           pclath	equ	0xFFA
  3388                           tblptru	equ	0xFF8
  3389                           tblptrh	equ	0xFF7
  3390                           tblptrl	equ	0xFF6
  3391                           tablat	equ	0xFF5
  3392                           prodh	equ	0xFF4
  3393                           prodl	equ	0xFF3
  3394                           intcon	equ	0xFF2
  3395                           postinc0	equ	0xFEE
  3396                           fsr0h	equ	0xFEA
  3397                           fsr0l	equ	0xFE9
  3398                           wreg	equ	0xFE8
  3399                           fsr1h	equ	0xFE2
  3400                           fsr1l	equ	0xFE1
  3401                           indf2	equ	0xFDF
  3402                           postinc2	equ	0xFDE
  3403                           fsr2h	equ	0xFDA
  3404                           fsr2l	equ	0xFD9
  3405                           status	equ	0xFD8
  3406                           
  3407 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3408 ;; Defined at:
  3409 ;;		line 166 in file "mcc_generated_files/tmr0.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;		None
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;		None
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		None
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3427 ;;Total ram usage:        0 bytes
  3428 ;; Hardware stack levels used:    1
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_TMR0_Initialize
  3433 ;;		_TMR0_CallBack
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text30
  3438  000878                     __ptext30:
  3439                           	opt stack 0
  3440  000878                     _TMR0_DefaultInterruptHandler:
  3441                           	opt stack 24
  3442                           
  3443                           ;incstack = 0
  3444  000878  0012               	return		;funcret
  3445  00087A                     __end_of_TMR0_DefaultInterruptHandler:
  3446                           	opt stack 0
  3447                           tosu	equ	0xFFF
  3448                           tosh	equ	0xFFE
  3449                           tosl	equ	0xFFD
  3450                           pclatu	equ	0xFFB
  3451                           pclath	equ	0xFFA
  3452                           tblptru	equ	0xFF8
  3453                           tblptrh	equ	0xFF7
  3454                           tblptrl	equ	0xFF6
  3455                           tablat	equ	0xFF5
  3456                           prodh	equ	0xFF4
  3457                           prodl	equ	0xFF3
  3458                           intcon	equ	0xFF2
  3459                           postinc0	equ	0xFEE
  3460                           fsr0h	equ	0xFEA
  3461                           fsr0l	equ	0xFE9
  3462                           wreg	equ	0xFE8
  3463                           fsr1h	equ	0xFE2
  3464                           fsr1l	equ	0xFE1
  3465                           indf2	equ	0xFDF
  3466                           postinc2	equ	0xFDE
  3467                           fsr2h	equ	0xFDA
  3468                           fsr2l	equ	0xFD9
  3469                           status	equ	0xFD8
  3470                           
  3471 ;; *************** function _ring *****************
  3472 ;; Defined at:
  3473 ;;		line 40 in file "main.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, status,2
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3491 ;;Total ram usage:        0 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_main
  3497 ;;		_TMR0_CallBack
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text31
  3502  000860                     __ptext31:
  3503                           	opt stack 0
  3504  000860                     _ring:
  3505                           	opt stack 24
  3506                           
  3507                           ;main.c: 42: ringing = 1;
  3508                           
  3509                           ;incstack = 0
  3510  000860  0E01               	movlw	1
  3511  000862  6E29               	movwf	_ringing,c
  3512  000864  0012               	return		;funcret
  3513  000866                     __end_of_ring:
  3514                           	opt stack 0
  3515  0000                     tosu	equ	0xFFF
  3516                           tosh	equ	0xFFE
  3517                           tosl	equ	0xFFD
  3518                           pclatu	equ	0xFFB
  3519                           pclath	equ	0xFFA
  3520                           tblptru	equ	0xFF8
  3521                           tblptrh	equ	0xFF7
  3522                           tblptrl	equ	0xFF6
  3523                           tablat	equ	0xFF5
  3524                           prodh	equ	0xFF4
  3525                           prodl	equ	0xFF3
  3526                           intcon	equ	0xFF2
  3527                           postinc0	equ	0xFEE
  3528                           fsr0h	equ	0xFEA
  3529                           fsr0l	equ	0xFE9
  3530                           wreg	equ	0xFE8
  3531                           fsr1h	equ	0xFE2
  3532                           fsr1l	equ	0xFE1
  3533                           indf2	equ	0xFDF
  3534                           postinc2	equ	0xFDE
  3535                           fsr2h	equ	0xFDA
  3536                           fsr2l	equ	0xFD9
  3537                           status	equ	0xFD8
  3538                           tosu	equ	0xFFF
  3539                           tosh	equ	0xFFE
  3540                           tosl	equ	0xFFD
  3541                           pclatu	equ	0xFFB
  3542                           pclath	equ	0xFFA
  3543                           tblptru	equ	0xFF8
  3544                           tblptrh	equ	0xFF7
  3545                           tblptrl	equ	0xFF6
  3546                           tablat	equ	0xFF5
  3547                           prodh	equ	0xFF4
  3548                           prodl	equ	0xFF3
  3549                           intcon	equ	0xFF2
  3550                           postinc0	equ	0xFEE
  3551                           fsr0h	equ	0xFEA
  3552                           fsr0l	equ	0xFE9
  3553                           wreg	equ	0xFE8
  3554                           fsr1h	equ	0xFE2
  3555                           fsr1l	equ	0xFE1
  3556                           indf2	equ	0xFDF
  3557                           postinc2	equ	0xFDE
  3558                           fsr2h	equ	0xFDA
  3559                           fsr2l	equ	0xFD9
  3560                           status	equ	0xFD8
  3561                           
  3562                           	psect	text32
  3563  000000                     __ptext32:
  3564                           	opt stack 0
  3565                           tosu	equ	0xFFF
  3566                           tosh	equ	0xFFE
  3567                           tosl	equ	0xFFD
  3568                           pclatu	equ	0xFFB
  3569                           pclath	equ	0xFFA
  3570                           tblptru	equ	0xFF8
  3571                           tblptrh	equ	0xFF7
  3572                           tblptrl	equ	0xFF6
  3573                           tablat	equ	0xFF5
  3574                           prodh	equ	0xFF4
  3575                           prodl	equ	0xFF3
  3576                           intcon	equ	0xFF2
  3577                           postinc0	equ	0xFEE
  3578                           fsr0h	equ	0xFEA
  3579                           fsr0l	equ	0xFE9
  3580                           wreg	equ	0xFE8
  3581                           fsr1h	equ	0xFE2
  3582                           fsr1l	equ	0xFE1
  3583                           indf2	equ	0xFDF
  3584                           postinc2	equ	0xFDE
  3585                           fsr2h	equ	0xFDA
  3586                           fsr2l	equ	0xFD9
  3587                           status	equ	0xFD8
  3588                           
  3589                           	psect	rparam
  3590  0000                     tosu	equ	0xFFF
  3591                           tosh	equ	0xFFE
  3592                           tosl	equ	0xFFD
  3593                           pclatu	equ	0xFFB
  3594                           pclath	equ	0xFFA
  3595                           tblptru	equ	0xFF8
  3596                           tblptrh	equ	0xFF7
  3597                           tblptrl	equ	0xFF6
  3598                           tablat	equ	0xFF5
  3599                           prodh	equ	0xFF4
  3600                           prodl	equ	0xFF3
  3601                           intcon	equ	0xFF2
  3602                           postinc0	equ	0xFEE
  3603                           fsr0h	equ	0xFEA
  3604                           fsr0l	equ	0xFE9
  3605                           wreg	equ	0xFE8
  3606                           fsr1h	equ	0xFE2
  3607                           fsr1l	equ	0xFE1
  3608                           indf2	equ	0xFDF
  3609                           postinc2	equ	0xFDE
  3610                           fsr2h	equ	0xFDA
  3611                           fsr2l	equ	0xFD9
  3612                           status	equ	0xFD8
  3613                           
  3614                           	psect	temp
  3615  000041                     btemp:
  3616                           	opt stack 0
  3617  000041                     	ds	1
  3618  0000                     int$flags	set	btemp
  3619                           tosu	equ	0xFFF
  3620                           tosh	equ	0xFFE
  3621                           tosl	equ	0xFFD
  3622                           pclatu	equ	0xFFB
  3623                           pclath	equ	0xFFA
  3624                           tblptru	equ	0xFF8
  3625                           tblptrh	equ	0xFF7
  3626                           tblptrl	equ	0xFF6
  3627                           tablat	equ	0xFF5
  3628                           prodh	equ	0xFF4
  3629                           prodl	equ	0xFF3
  3630                           intcon	equ	0xFF2
  3631                           postinc0	equ	0xFEE
  3632                           fsr0h	equ	0xFEA
  3633                           fsr0l	equ	0xFE9
  3634                           wreg	equ	0xFE8
  3635                           fsr1h	equ	0xFE2
  3636                           fsr1l	equ	0xFE1
  3637                           indf2	equ	0xFDF
  3638                           postinc2	equ	0xFDE
  3639                           fsr2h	equ	0xFDA
  3640                           fsr2l	equ	0xFD9
  3641                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         17
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      64
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ring(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ring(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> can_receive_timeout(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> can_receive_timeout(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> canMessage(COMRAM[14]), 


Critical Paths under _main in COMRAM

    _main->_CAN_receive
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2471
                                             36 COMRAM     2     2      0
                        _CAN_receive
                      _EUSART1_Write
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                        _TMR1_Reload
           _TMR1_SetInterruptHandler
                     _TMR1_StopTimer
                        _setLED_Blue
                        _setLED_Cyan
                       _setLED_Green
                         _setLED_Red
 ---------------------------------------------------------------------------------
 (1) _setLED_Red                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setLED_Green                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setLED_Cyan                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setLED_Blue                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     348
                    _ECAN_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     174
                                             16 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             16 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    1760
                                             33 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     266
                                             14 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4     821
                                             14 COMRAM    19    15      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                _can_receive_timeout *
 ---------------------------------------------------------------------------------
 (7) _can_receive_timeout                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                               _ring *
 ---------------------------------------------------------------------------------
 (7) _ring                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _EUSART1_Write
   _SYSTEM_Initialize
     _ECAN_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
   _TMR0_SetInterruptHandler
   _TMR1_Reload
   _TMR1_SetInterruptHandler
   _TMR1_StopTimer
   _setLED_Blue
   _setLED_Cyan
   _setLED_Green
   _setLED_Red

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _ring *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _can_receive_timeout *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     26      40       1       68.1%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      40       6        0.0%
DATA                 0      0      40       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Mar 18 01:01:03 2018

                         __size_of_ECAN_Initialize 00E6                                        __CFG_BORV$3 000000  
                                  _timer0ReloadVal 0038                                       __CFG_CP0$OFF 000000  
                                     __CFG_CP1$OFF 000000                                       __CFG_CP2$OFF 000000  
                                     __CFG_CP3$OFF 000000                                                l322 01A8  
                                              l634 04BA                                                l388 0812  
                                     __CFG_CPB$OFF 000000                                                u415 0348  
                                              u425 0628                                       __CFG_CPD$OFF 000000  
                                              u537 044E                                                u547 04A8  
                                  _timer1ReloadVal 003E                                                tosl 000FFD  
                                              wreg 000FE8                         ??_convertReg2StandardCANid 0013  
                                             l2001 04CE                                               l1315 0502  
                                             l1335 05D6                                               l1921 0226  
                                             l1941 02BA                                               l1917 01F2  
                                             l1943 02BE                                               l1885 00E2  
                                             l1981 0468                                               l1889 0114  
                                             l1977 045E                                               l1997 04C2  
                                             _LATA 000F89                                               _LATB 000F8A  
                                             _LATC 000F8B                                               _LATD 000F8C  
                                             _LATE 000F8D                                               _LATF 000F8E  
                                             _LATG 000F8F                                               _WPUB 000F5B  
                                    _EUSART1_Write 0810                                               _main 040C  
                                  _TMR0_StartTimer 086E                                               _ring 0860  
                                             fsr0h 000FEA                                               fsr1h 000FE2  
                                             fsr2h 000FDA                                               fsr0l 000FE9  
                                             indf2 000FDF                                               fsr1l 000FE1  
                                             fsr2l 000FD9                                               btemp 0041  
                                             prodh 000FF4                                               prodl 000FF3  
                                             start 0096                                      __CFG_IESO$OFF 000000  
                                    __CFG_FOSC$HS2 000000                         ??_TMR1_SetInterruptHandler 0011  
                                    __CFG_MCLRE$ON 000000                                       ___param_bank 000000  
                          __end_of_TMR0_Initialize 0726                     ??_TMR0_DefaultInterruptHandler 0001  
                   __size_of_OSCILLATOR_Initialize 0012                      __end_of_OSCILLATOR_Initialize 0800  
                                            ?_main 0001                                              ?_ring 0001  
                                  _TMR1_StartTimer 086A                                              _T0CON 000FD5  
                                            _T1CON 000FCD                                              i2l481 004E  
                                            i2l485 005A                                       ?_setLED_Blue 0001  
                                            _TMR0H 000FD7                                              _TMR1H 000FCF  
                                            _TMR0L 000FD6                                              _TMR1L 000FCE  
                                     ?_setLED_Cyan 0001                                              _TRISA 000F92  
                                            _TRISB 000F93                                              _TRISC 000F94  
                                            _TRISD 000F95                                              _TRISE 000F96  
                                            _TRISF 000F97                                              _TRISG 000F98  
                __size_of_TMR0_SetInterruptHandler 000A                                      __CFG_WRT0$OFF 000000  
                                    __CFG_WRT1$OFF 000000                                      __CFG_WRT2$OFF 000000  
                        ?_TMR0_SetInterruptHandler 000F                                      __CFG_WRT3$OFF 000000  
                                   __CFG_EBTR0$OFF 000000                                     __CFG_FCMEN$OFF 000000  
                                   __CFG_EBTR1$OFF 000000                              CAN_receive@tempCanMsg 0022  
                                   __CFG_EBTR2$OFF 000000                                     __CFG_EBTR3$OFF 000000  
                                 __end_of_TMR0_ISR 0810                                   __end_of_TMR1_ISR 077A  
                                    __CFG_WRTB$OFF 000000                                      __CFG_WRTC$OFF 000000  
                                    __CFG_WRTD$OFF 000000                                     __CFG_EBTRB$OFF 000000  
                                   ?_EUSART1_Write 0001                            __end_of_TMR1_Initialize 06EE  
                                            pclath 000FFA                                              tablat 000FF5  
              convertReg2ExtendedCANid@ConvertedID 001E                                              status 000FD8  
                                  __initialization 0726                               __size_of_CAN_receive 022A  
                       __end_of_EUSART1_Initialize 07EE                                       __end_of_main 04FE  
                                     __end_of_ring 0866                        ?_INTERRUPT_InterruptManager 0001  
                                           ??_main 0025                                             ??_ring 0001  
                                    __activetblptr 000002                                     __CFG_RETEN$OFF 000000  
                                ??_ECAN_Initialize 000F                            __end_of_TMR0_StartTimer 0872  
                                           _CANCON 000F6F                                             _ANCON0 000F5D  
                                           _ANCON1 000F5C                                             _T1GCON 000FAA  
                                  __CFG_BBSIZ$BB2K 000000                                     __CFG_WDTEN$OFF 000000  
                                           _RCREG1 000FAE                                             _RCSTA1 000FAB  
                                           _OSCCON 000FD3                                             _RXB0D0 000F66  
                                           _RXB0D1 000F67                                             _RXB0D2 000F68  
                                           _RXB0D3 000F69                                             _RXB0D4 000F6A  
                                           _RXB1D0 000F36                                             _RXB0D5 000F6B  
                                           _RXB1D1 000F37                                             _RXB0D6 000F6C  
                                           _RXB1D2 000F38                                             _RXB0D7 000F6D  
                                           _RXB1D3 000F39                                             _RXB1D4 000F3A  
                                           _RXB1D5 000F3B                                             _RXB1D6 000F3C  
                                           _RXB1D7 000F3D                                             _SPBRG1 000FAF  
                                           _TXB0D0 000F26                                             _TXB0D1 000F27  
                                           _TXB0D2 000F28                                             _TXB0D3 000F29  
                                           _TXB0D4 000F2A                                             _TXB1D0 000F16  
                                           _TXB0D5 000F2B                                             _TXB1D1 000F17  
                                           _TXB0D6 000F2C                                             _TXB1D2 000F18  
                                           _TXB0D7 000F2D                                             _TXB1D3 000F19  
                                           _TXB1D4 000F1A                                             _TXB2D0 000F06  
                                           _TXB1D5 000F1B                                             _TXB2D1 000F07  
                                           _TXB1D6 000F1C                                             _TXB2D2 000F08  
                                           _TXB1D7 000F1D                                             _TXB2D3 000F09  
                                           _TXB2D4 000F0A                                             _TXB2D5 000F0B  
                                           _TXB2D6 000F0C                                             _TXB2D7 000F0D  
                                    ?_setLED_Green 0001                                             i2u6_48 0786  
                                           i2u8_48 07A6                                             _TXREG1 000FAD  
                                           _TXSTA1 000FAC                                     __CFG_XINST$OFF 000000  
             __end_of_TMR1_DefaultInterruptHandler 0878              __size_of_TMR1_DefaultInterruptHandler 0002  
                     _TMR1_DefaultInterruptHandler 0876                            __end_of_TMR1_StartTimer 086E  
                                     ?_TMR1_Reload 0001                                     __CFG_STVREN$ON 000000  
                                 ?_TMR0_Initialize 0001                                             clear_0 073E  
                                     __pdataCOMRAM 0040                   __end_of_convertReg2StandardCANid 066A  
                                           tblptrh 000FF7                                             tblptrl 000FF6  
                                           tblptru 000FF8                              __end_of_TMR0_CallBack 07BA  
                                  ??_EUSART1_Write 000F           TMR0_SetInterruptHandler@InterruptHandler 000F  
         TMR1_SetInterruptHandler@InterruptHandler 000F                      __size_of_INTERRUPT_Initialize 0004  
                            __end_of_TMR1_CallBack 079A                                   ?_TMR1_Initialize 0001  
                                _SYSTEM_Initialize 07BA                                     ??_setLED_Green 000F  
                                       __accesstop 0060                            __end_of__initialization 0744  
                     __size_of_can_receive_timeout 0006                                 ?_SYSTEM_Initialize 0001  
                         _convertReg2ExtendedCANid 02C4                             CAN_receive@returnValue 0024  
                                    ___rparam_used 000001                                     __pcstackCOMRAM 0001  
                              ??_SYSTEM_Initialize 0013                                          ?_TMR0_ISR 0001  
                                        ?_TMR1_ISR 0001                      ?_TMR1_DefaultInterruptHandler 0001  
                                       _canMessage 002A                               __size_of_setLED_Blue 0008  
                             __size_of_setLED_Cyan 0008              convertReg2StandardCANid@tempRXBn_SIDH 0015  
            convertReg2StandardCANid@tempRXBn_SIDL 000F                                   ?_TMR0_StartTimer 0001  
                        __end_of_SYSTEM_Initialize 07D8                                    __CFG_PLLCFG$OFF 000000  
                                       __pnvCOMRAM 0038                   __end_of_TMR0_SetInterruptHandler 083A  
                                 ?_TMR1_StartTimer 0001                                         ??_TMR0_ISR 0001  
                                       ??_TMR1_ISR 0001                                            _ECANCON 000F72  
                                          _CANSTAT 000F6E                                            _BRGCON1 000E43  
                                          _BRGCON2 000E44                                            _BRGCON3 000E45  
                          __size_of_TMR1_StopTimer 0004                                   __CFG_CANMX$PORTB 000000  
                                          _REFOCON 000F9A                                            _OSCCON2 000FD2  
                                          i2u14_40 076C                                            _RXB0DLC 000F65  
                                          _RXB1DLC 000F35                                            _OSCTUNE 000F9B  
                                          _SPBRGH1 000F7D                                            _TXB0DLC 000F25  
                                          _TXB1DLC 000F15                                            _TXB2DLC 000F05  
                                  __CFG_PWRTEN$OFF 000000                                            __Hparam 0000  
                                          __Lparam 0000                  __size_of_convertReg2StandardCANid 0086  
                        ?_convertReg2StandardCANid 000F                                    _ECAN_Initialize 04FE  
                                       _setLED_Red 083A                               __size_of_TMR1_Reload 000A  
                                          __pcinit 0726                                            __ramtop 0F00  
                                          __ptext0 040C                                            __ptext1 083A  
                                          __ptext2 0842                                            __ptext3 084A  
                                          __ptext4 0852                                            __ptext5 0866  
                             __end_of_setLED_Green 084A                                            __ptext6 081C  
                                          __ptext7 07BA                                            __ptext8 06B2  
                                          __ptext9 086A                                          _T0CONbits 000FD5  
                   ??_TMR1_DefaultInterruptHandler 0001                                          _T1CONbits 000FCD  
                            _OSCILLATOR_Initialize 07EE                  __size_of_TMR1_SetInterruptHandler 000A  
                               _EUSART1_Initialize 07D8                           ??_PIN_MANAGER_Initialize 000F  
                        ?_TMR1_SetInterruptHandler 000F                                  __CFG_MSSPMSK$MSK7 000000  
                                          _ringing 0029                         __size_of_SYSTEM_Initialize 001E  
                             end_of_initialization 0744                                ?_EUSART1_Initialize 0001  
                                    __Lmediumconst 0000                                      ??_CAN_receive 0024  
                                          postinc0 000FEE                                            postinc2 000FDE  
                             ??_EUSART1_Initialize 000F                           _TMR0_SetInterruptHandler 0830  
                                        _PORTAbits 000F80                                _can_receive_timeout 085A  
                       ??_convertReg2ExtendedCANid 0013                                EUSART1_Write@txData 000F  
                             ?_can_receive_timeout 0001                            __end_of_ECAN_Initialize 05E4  
                     __end_of_INTERRUPT_Initialize 0876                                __end_of_CAN_receive 02C4  
                                      ?_setLED_Red 0001                                      __pidataCOMRAM 087A  
                                __size_of_TMR0_ISR 0010                                  __size_of_TMR1_ISR 0028  
                                   _TMR1_StopTimer 0866                             ?_OSCILLATOR_Initialize 0001  
                              start_initialization 0726                           __size_of_TMR0_Initialize 0038  
                  __size_of_PIN_MANAGER_Initialize 0048                              __end_of_EUSART1_Write 081C  
                            ??_can_receive_timeout 0001                convertReg2StandardCANid@returnValue 0016  
                         __size_of_TMR1_Initialize 003C                              __size_of_setLED_Green 0008  
                           __size_of_TMR0_CallBack 0020                             __end_of_TMR1_StopTimer 086A  
                           __size_of_TMR1_CallBack 0020                                      ??_setLED_Blue 000F  
                                    ??_setLED_Cyan 000F                              TMR1_ISR@CountCallBack 0027  
                                      __pbssCOMRAM 0027                                __size_of_setLED_Red 0008  
                                     _setLED_Green 0842                              _TMR0_InterruptHandler 003A  
                         __size_of_TMR0_StartTimer 0004                                        _CAN_receive 009A  
                                 ?_ECAN_Initialize 0001                             _PIN_MANAGER_Initialize 066A  
                                      _CAN_timeout 0040                                          __pintcode 0008  
                 __end_of_TMR1_SetInterruptHandler 0830                                    ?_TMR1_StopTimer 0001  
                     ??_INTERRUPT_InterruptManager 0001                                           _BAUDCON1 000FA7  
                         __size_of_TMR1_StartTimer 0004                                        _COMSTATbits 000F71  
                 __end_of_convertReg2ExtendedCANid 040C                                      _TMR0_CallBack 079A  
                              __end_of_setLED_Blue 085A                                __end_of_setLED_Cyan 0852  
                             _INTERRUPT_Initialize 0872                                      _TMR1_CallBack 077A  
                                ??_TMR0_Initialize 0011                                           _LATBbits 000F8A  
                                         _LATDbits 000F8C                                           _LATFbits 000F8E  
                                         _PIE1bits 000F9D                                           _PIE5bits 000F76  
              __size_of_INTERRUPT_InterruptManager 008E                         ??_TMR0_SetInterruptHandler 0011  
                                         _PIR1bits 000F9E                                           _PIR5bits 000F77  
                                         _RXB0EIDH 000F63                                           _RXB0EIDL 000F64  
                                         _RXB1EIDH 000F33                                           _RXB1EIDL 000F34  
                                         _RCONbits 000FD0                                      ??_TMR1_Reload 000F  
                                         _RXB0SIDH 000F61                                           _RXB0SIDL 000F62  
                                         _RXB1SIDH 000F31                                           _RXF0EIDH 000EE2  
                                         _RXB1SIDL 000F32                                           _RXF0EIDL 000EE3  
                                         _RXF1EIDH 000EE6                                           _RXF1EIDL 000EE7  
                                         _RXF2EIDH 000EEA                                           _RXF2EIDL 000EEB  
                                         _RXF3EIDH 000EEE                                           _RXF3EIDL 000EEF  
                                         _RXF4EIDH 000EF2                                           _RXF4EIDL 000EF3  
                                         _RXF5EIDH 000EF6                                           _RXF5EIDL 000EF7  
                                         _RXF0SIDH 000EE0                                           _RXF0SIDL 000EE1  
                                         _TXB0EIDH 000F23                                           _RXF1SIDH 000EE4  
                                         _TXB0EIDL 000F24                                           _RXF1SIDL 000EE5  
                                         _TXB1EIDH 000F13                                           _RXF2SIDH 000EE8  
                                         _TXB1EIDL 000F14                                           _RXF2SIDL 000EE9  
                                         _TXB2EIDH 000F03                                           _RXF3SIDH 000EEC  
                                         _TXB2EIDL 000F04                                           _RXF3SIDL 000EED  
                                         _RXF4SIDH 000EF0                                           _RXF4SIDL 000EF1  
                                         _TMR0_ISR 0800                                           _RXF5SIDH 000EF4  
                                         _RXF5SIDL 000EF5                                           _TMR1_ISR 0752  
                                         _RXM0EIDH 000EFA                                           _RXM0EIDL 000EFB  
                                         _TXB0SIDH 000F21                                           _RXM1EIDH 000EFE  
                                         _TXB0SIDL 000F22                                           _RXM1EIDL 000EFF  
                                         _TXB1SIDH 000F11                                           _TXB1SIDL 000F12  
                                         _TXB2SIDH 000F01                                           _TXB2SIDL 000F02  
                                         _RXM0SIDH 000EF8                                           _RXM0SIDL 000EF9  
                                         _RXM1SIDH 000EFC                                           _RXM1SIDL 000EFD  
                                ??_TMR1_Initialize 0011                                   __CFG_SOSCSEL$DIG 000000  
                                   ?_TMR0_CallBack 0001                              ?_INTERRUPT_Initialize 0001  
                                   ?_TMR1_CallBack 0001                           _convertReg2StandardCANid 05E4  
            convertReg2ExtendedCANid@tempRXBn_EIDH 0017              convertReg2ExtendedCANid@tempRXBn_EIDL 000F  
            convertReg2ExtendedCANid@tempRXBn_SIDH 0010              convertReg2ExtendedCANid@tempRXBn_SIDL 0011  
                                         __Hrparam 0000                                           __Lrparam 0000  
                               __CFG_BOREN$SBORDIS 000000                            ??_OSCILLATOR_Initialize 000F  
                                ??_TMR0_StartTimer 000F                                         _CIOCONbits 000F70  
                                     ??_setLED_Red 000F                        __size_of_EUSART1_Initialize 0016  
                         _TMR1_SetInterruptHandler 0826  convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 001D  
                              __end_of_TMR1_Reload 0826                              _TMR1_InterruptHandler 003C  
convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 001C                                        _setLED_Blue 0852  
                                      _setLED_Cyan 084A                                           __ptext10 0826  
                                         __ptext11 06EE                                           __ptext20 009A  
                                         __ptext12 086E                                           __ptext21 05E4  
                                         __ptext13 0830                                         _T1GCONbits 000FAA  
                                         __ptext30 0878                                           __ptext22 02C4  
                                         __ptext14 066A                                           __ptext31 0860  
                                         __ptext15 07EE                                           __ptext32 0000  
                                         __ptext24 0752                                           __ptext16 0872  
                                         __ptext25 077A                                           __ptext17 07D8  
                                         __ptext26 0876                                           __ptext18 04FE  
                                         __ptext27 085A                                           __ptext19 0810  
                                         __ptext28 0800                                           __ptext29 079A  
                                ??_TMR1_StartTimer 000F                convertReg2StandardCANid@ConvertedID 001A  
                                    __size_of_main 00F2                                      __size_of_ring 0006  
                               __end_of_setLED_Red 0842               __end_of_TMR0_DefaultInterruptHandler 087A  
            __size_of_TMR0_DefaultInterruptHandler 0002                       _TMR0_DefaultInterruptHandler 0878  
              convertReg2ExtendedCANid@returnValue 0018                  __size_of_convertReg2ExtendedCANid 0148  
                        ?_convertReg2ExtendedCANid 000F                                           int$flags 0041  
               __end_of_INTERRUPT_InterruptManager 0096                         _INTERRUPT_InterruptManager 0008  
                              __CFG_INTOSCSEL$HIGH 000000                                        _RXB0CONbits 000F60  
                                      _RXB1CONbits 000F30                                         _INTCONbits 000FF2  
                                  ??_TMR0_CallBack 0001                        __end_of_can_receive_timeout 0860  
                           ??_INTERRUPT_Initialize 000F                                    ??_TMR1_CallBack 0001  
                                         intlevel2 0000                                  __CFG_T0CKMX$PORTB 000000  
                          ?_PIN_MANAGER_Initialize 0001                                        _TXB0CONbits 000F20  
                                       _RCSTA1bits 000FAB                                       ?_CAN_receive 0022  
                                      _TXB1CONbits 000F10                                        _TXB2CONbits 000F00  
                                 ??_TMR1_StopTimer 000F                      ?_TMR0_DefaultInterruptHandler 0001  
                                      _TMR1_Reload 081C                                 __CFG_WDTPS$1048576 000000  
                           __size_of_EUSART1_Write 000C                                    _TMR0_Initialize 06EE  
                                __CFG_T3CKMX$PORTG 000000                     __end_of_PIN_MANAGER_Initialize 06B2  
                              __CFG_BORPWR$ZPBORMV 000000                                    _TMR1_Initialize 06B2  
